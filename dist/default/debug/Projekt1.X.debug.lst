

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Dec 05 14:04:13 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F87J11
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    16                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21   000000                     
    22                           ; Generated 23/03/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F87J11 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56   000000                     _ADCON1	set	4033
    57   000000                     _ADRESL	set	4035
    58   000000                     _ADRESH	set	4036
    59   000000                     _ADCON0	set	4034
    60   000000                     _ANCON1bits	set	4034
    61   000000                     _T0CONbits	set	4053
    62   000000                     _PORTJbits	set	3976
    63   000000                     _LATDbits	set	3980
    64   000000                     _TRISD	set	3989
    65   000000                     _TRISJ	set	3994
    66   000000                     _PIR1bits	set	3998
    67   000000                     _ADCON0bits	set	4034
    68   000000                     _TMR0L	set	4054
    69   000000                     _TMR0H	set	4055
    70   000000                     _INTCONbits	set	4082
    71   000000                     _INTCON2bits	set	4081
    72   000000                     _IPR1bits	set	3999
    73   000000                     _WDTCONbits	set	4032
    74   000000                     _RCONbits	set	4048
    75   000000                     _OSCCONbits	set	4051
    76   000000                     _T0CON	set	4053
    77   000000                     _OSCTUNEbits	set	3995
    78   000000                     _PIE1bits	set	3997
    79   000000                     _TRISFbits	set	3991
    80   000000                     _TRISH	set	3993
    81                           
    82                           ; #config settings
    83                           
    84                           	psect	cinit
    85   0014A8                     __pcinit:
    86                           	callstack 0
    87   0014A8                     start_initialization:
    88                           	callstack 0
    89   0014A8                     __initialization:
    90                           	callstack 0
    91                           
    92                           ; Clear objects allocated to COMRAM (19 bytes)
    93   0014A8  EE00  F001         	lfsr	0,__pbssCOMRAM
    94   0014AC  0E13               	movlw	19
    95   0014AE                     clear_0:
    96   0014AE  6AEE               	clrf	postinc0,c
    97   0014B0  06E8               	decf	wreg,f,c
    98   0014B2  E1FD               	bnz	clear_0
    99   0014B4                     end_of_initialization:
   100                           	callstack 0
   101   0014B4                     __end_of__initialization:
   102                           	callstack 0
   103   0014B4  9021               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   104   0014B6  9221               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   105   0014B8  0100               	movlb	0
   106   0014BA  EFE5  F009         	goto	_main	;jump to C main() function
   107                           
   108                           	psect	bssCOMRAM
   109   000001                     __pbssCOMRAM:
   110                           	callstack 0
   111   000001                     _vysledek:
   112                           	callstack 0
   113   000001                     	ds	4
   114   000005                     _ADRhotovo:
   115                           	callstack 0
   116   000005                     	ds	2
   117   000007                     _is10ms:
   118                           	callstack 0
   119   000007                     	ds	1
   120   000008                     _is1ms:
   121                           	callstack 0
   122   000008                     	ds	1
   123   000009                     _vystup:
   124                           	callstack 0
   125   000009                     	ds	1
   126   00000A                     _dekoderAB:
   127                           	callstack 0
   128   00000A                     	ds	2
   129   00000C                     _S4Filtr:
   130                           	callstack 0
   131   00000C                     	ds	2
   132   00000E                     _S5B:
   133                           	callstack 0
   134   00000E                     	ds	2
   135   000010                     _S5A:
   136                           	callstack 0
   137   000010                     	ds	2
   138   000012                     _S4:
   139                           	callstack 0
   140   000012                     	ds	2
   141                           
   142                           	psect	cstackCOMRAM
   143   000014                     __pcstackCOMRAM:
   144                           	callstack 0
   145   000014                     ??_low_isr:
   146                           
   147                           ; 1 bytes @ 0x0
   148   000014                     	ds	7
   149   00001B                     filterFce@tlacitko:
   150                           	callstack 0
   151   00001B                     pametFce@tlacitko:
   152                           	callstack 0
   153   00001B                     dekoderFce@tlacitko:
   154                           	callstack 0
   155                           
   156                           ; 1 bytes @ 0x7
   157   00001B                     	ds	1
   158   00001C                     filterFce@vstup:
   159                           	callstack 0
   160   00001C                     pametFce@input:
   161                           	callstack 0
   162   00001C                     dekoderFce@A:
   163                           	callstack 0
   164                           
   165                           ; 1 bytes @ 0x8
   166   00001C                     	ds	1
   167   00001D                     ??_filterFce:
   168   00001D                     ??_pametFce:
   169   00001D                     dekoderFce@B:
   170                           	callstack 0
   171                           
   172                           ; 1 bytes @ 0x9
   173   00001D                     	ds	1
   174   00001E                     ??_dekoderFce:
   175                           
   176                           ; 1 bytes @ 0xA
   177   00001E                     	ds	1
   178   00001F                     filterFce@dalsiStav:
   179                           	callstack 0
   180   00001F                     pametFce@dalsiStav:
   181                           	callstack 0
   182                           
   183                           ; 1 bytes @ 0xB
   184   00001F                     	ds	1
   185   000020                     dekoderFce@dalsiStav:
   186                           	callstack 0
   187                           
   188                           ; 1 bytes @ 0xC
   189   000020                     	ds	1
   190   000021                     
   191                           ; 1 bytes @ 0xD
   192 ;;
   193 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   194 ;;
   195 ;; *************** function _main *****************
   196 ;; Defined at:
   197 ;;		line 65 in file "source/main.c"
   198 ;; Parameters:    Size  Location     Type
   199 ;;		None
   200 ;; Auto vars:     Size  Location     Type
   201 ;;		None
   202 ;; Return value:  Size  Location     Type
   203 ;;                  1    wreg      void 
   204 ;; Registers used:
   205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   206 ;; Tracked objects:
   207 ;;		On entry : 0/0
   208 ;;		On exit  : 0/0
   209 ;;		Unchanged: 0/0
   210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   215 ;;Total ram usage:        0 bytes
   216 ;; Hardware stack levels required when called: 3
   217 ;; This function calls:
   218 ;;		_dekoderFce
   219 ;;		_filterFce
   220 ;;		_pametFce
   221 ;;		_preambleInitialization
   222 ;; This function is called by:
   223 ;;		Startup code after reset
   224 ;; This function uses a non-reentrant model
   225 ;;
   226                           
   227                           	psect	text0
   228   0013CA                     __ptext0:
   229                           	callstack 0
   230   0013CA                     _main:
   231                           	callstack 28
   232   0013CA                     
   233                           ;source/main.c: 67:     S4.stav = 0;
   234   0013CA  0E00               	movlw	0
   235   0013CC  6E12               	movwf	_S4^0,c
   236                           
   237                           ;source/main.c: 68:     S4.vystup = 0;
   238   0013CE  0E00               	movlw	0
   239   0013D0  6E13               	movwf	(_S4+1)^0,c
   240                           
   241                           ;source/main.c: 70:     S5A.stav = 0;
   242   0013D2  0E00               	movlw	0
   243   0013D4  6E10               	movwf	_S5A^0,c
   244                           
   245                           ;source/main.c: 71:     S5A.vystup = 0;
   246   0013D6  0E00               	movlw	0
   247   0013D8  6E11               	movwf	(_S5A+1)^0,c
   248                           
   249                           ;source/main.c: 73:     S5B.stav = 0;
   250   0013DA  0E00               	movlw	0
   251   0013DC  6E0E               	movwf	_S5B^0,c
   252                           
   253                           ;source/main.c: 74:     S5B.vystup = 0;
   254   0013DE  0E00               	movlw	0
   255   0013E0  6E0F               	movwf	(_S5B+1)^0,c
   256                           
   257                           ;source/main.c: 76:     S4Filtr.stav = 0;
   258   0013E2  0E00               	movlw	0
   259   0013E4  6E0C               	movwf	_S4Filtr^0,c
   260                           
   261                           ;source/main.c: 77:     S4Filtr.vystup = 0;
   262   0013E6  0E00               	movlw	0
   263   0013E8  6E0D               	movwf	(_S4Filtr+1)^0,c
   264                           
   265                           ;source/main.c: 79:     dekoderAB.stav = 0;
   266   0013EA  0E00               	movlw	0
   267   0013EC  6E0A               	movwf	_dekoderAB^0,c
   268                           
   269                           ;source/main.c: 80:     dekoderAB.vystup = 0;
   270   0013EE  0E00               	movlw	0
   271   0013F0  6E0B               	movwf	(_dekoderAB+1)^0,c
   272   0013F2                     
   273                           ;source/main.c: 85:   preambleInitialization();
   274   0013F2  EC34  F00A         	call	_preambleInitialization	;wreg free
   275   0013F6                     l1293:
   276                           
   277                           ;source/main.c: 91:   {;source/main.c: 92:       if(is1ms == 1){
   278   0013F6  0408               	decf	_is1ms^0,w,c
   279   0013F8  A4D8               	btfss	status,2,c
   280   0013FA  EF01  F00A         	goto	u591
   281   0013FE  EF03  F00A         	goto	u590
   282   001402                     u591:
   283   001402  EF2B  F00A         	goto	l1299
   284   001406                     u590:
   285   001406                     
   286                           ;source/main.c: 95:    filterFce(&S4, PORTJbits.RJ7);
   287   001406  0E12               	movlw	low _S4
   288   001408  6E1B               	movwf	filterFce@tlacitko^0,c
   289   00140A  0E00               	movlw	0
   290   00140C  BE88               	btfsc	136,7,c	;volatile
   291   00140E  0E01               	movlw	1
   292   001410  6E1C               	movwf	filterFce@vstup^0,c
   293   001412  ECFB  F008         	call	_filterFce	;wreg free
   294                           
   295                           ;source/main.c: 96:   pametFce(&S4Filtr, S4.vystup);
   296   001416  0E0C               	movlw	low _S4Filtr
   297   001418  6E1B               	movwf	pametFce@tlacitko^0,c
   298   00141A  C013  F01C         	movff	_S4+1,pametFce@input
   299   00141E  EC76  F009         	call	_pametFce	;wreg free
   300                           
   301                           ;source/main.c: 97:   filterFce(&S5A, PORTJbits.RJ0);
   302   001422  0E10               	movlw	low _S5A
   303   001424  6E1B               	movwf	filterFce@tlacitko^0,c
   304   001426  0E00               	movlw	0
   305   001428  B088               	btfsc	136,0,c	;volatile
   306   00142A  0E01               	movlw	1
   307   00142C  6E1C               	movwf	filterFce@vstup^0,c
   308   00142E  ECFB  F008         	call	_filterFce	;wreg free
   309                           
   310                           ;source/main.c: 98:   filterFce(&S5B, PORTJbits.RJ1);
   311   001432  0E0E               	movlw	low _S5B
   312   001434  6E1B               	movwf	filterFce@tlacitko^0,c
   313   001436  0E00               	movlw	0
   314   001438  B288               	btfsc	136,1,c	;volatile
   315   00143A  0E01               	movlw	1
   316   00143C  6E1C               	movwf	filterFce@vstup^0,c
   317   00143E  ECFB  F008         	call	_filterFce	;wreg free
   318                           
   319                           ;source/main.c: 99:   dekoderFce(&dekoderAB, S5A.vystup, S5B.vystup);
   320   001442  0E0A               	movlw	low _dekoderAB
   321   001444  6E1B               	movwf	dekoderFce@tlacitko^0,c
   322   001446  C011  F01C         	movff	_S5A+1,dekoderFce@A
   323   00144A  C00F  F01D         	movff	_S5B+1,dekoderFce@B
   324   00144E  EC01  F008         	call	_dekoderFce	;wreg free
   325   001452                     
   326                           ;source/main.c: 101:    is1ms = 0;
   327   001452  0E00               	movlw	0
   328   001454  6E08               	movwf	_is1ms^0,c
   329   001456                     l1299:
   330                           
   331                           ;source/main.c: 103:   LATDbits.LATD7 = S4Filtr.vystup;
   332   001456  B00D               	btfsc	(_S4Filtr+1)^0,0,c
   333   001458  D002               	bra	u605
   334   00145A  9E8C               	bcf	140,7,c	;volatile
   335   00145C  D001               	bra	u606
   336   00145E                     u605:
   337   00145E  8E8C               	bsf	140,7,c	;volatile
   338   001460                     u606:
   339   001460  EFFB  F009         	goto	l1293
   340   001464  EF61  F000         	goto	start
   341   001468                     __end_of_main:
   342                           	callstack 0
   343                           
   344 ;; *************** function _preambleInitialization *****************
   345 ;; Defined at:
   346 ;;		line 16 in file "source/preambleInitialization.c"
   347 ;; Parameters:    Size  Location     Type
   348 ;;		None
   349 ;; Auto vars:     Size  Location     Type
   350 ;;		None
   351 ;; Return value:  Size  Location     Type
   352 ;;                  1    wreg      void 
   353 ;; Registers used:
   354 ;;		wreg, status,2
   355 ;; Tracked objects:
   356 ;;		On entry : 0/0
   357 ;;		On exit  : 0/0
   358 ;;		Unchanged: 0/0
   359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   364 ;;Total ram usage:        0 bytes
   365 ;; Hardware stack levels used: 1
   366 ;; Hardware stack levels required when called: 2
   367 ;; This function calls:
   368 ;;		Nothing
   369 ;; This function is called by:
   370 ;;		_main
   371 ;; This function uses a non-reentrant model
   372 ;;
   373                           
   374                           	psect	text1
   375   001468                     __ptext1:
   376                           	callstack 0
   377   001468                     _preambleInitialization:
   378                           	callstack 28
   379   001468                     
   380                           ;source/preambleInitialization.c: 18:     T0CON = 0b10001000;
   381   001468  0E88               	movlw	136
   382   00146A  6ED5               	movwf	213,c	;volatile
   383   00146C                     
   384                           ;source/preambleInitialization.c: 19:     T0CONbits.PSA = 1;
   385   00146C  86D5               	bsf	213,3,c	;volatile
   386   00146E                     
   387                           ;source/preambleInitialization.c: 20:     T0CONbits.TMR0ON = 1;
   388   00146E  8ED5               	bsf	213,7,c	;volatile
   389                           
   390                           ;source/preambleInitialization.c: 22:     TMR0H = 0xB1;
   391   001470  0EB1               	movlw	177
   392   001472  6ED7               	movwf	215,c	;volatile
   393                           
   394                           ;source/preambleInitialization.c: 23:     TMR0L = 0xDF;
   395   001474  0EDF               	movlw	223
   396   001476  6ED6               	movwf	214,c	;volatile
   397   001478                     
   398                           ;source/preambleInitialization.c: 25:     INTCON2bits.TMR0IP = 0;
   399   001478  94F1               	bcf	241,2,c	;volatile
   400   00147A                     
   401                           ;source/preambleInitialization.c: 26:     INTCONbits.TMR0IE = 1;
   402   00147A  8AF2               	bsf	242,5,c	;volatile
   403   00147C                     
   404                           ;source/preambleInitialization.c: 28:     INTCONbits.GIEH = 1;
   405   00147C  8EF2               	bsf	242,7,c	;volatile
   406   00147E                     
   407                           ;source/preambleInitialization.c: 29:     INTCONbits.GIEL = 1;
   408   00147E  8CF2               	bsf	242,6,c	;volatile
   409   001480                     
   410                           ;source/preambleInitialization.c: 31:     TRISJ = 0xFF;
   411   001480  689A               	setf	154,c	;volatile
   412                           
   413                           ;source/preambleInitialization.c: 32:     TRISD = 0x00;
   414   001482  0E00               	movlw	0
   415   001484  6E95               	movwf	149,c	;volatile
   416                           
   417                           ;source/preambleInitialization.c: 33:     TRISH = 0x00;
   418   001486  0E00               	movlw	0
   419   001488  6E99               	movwf	153,c	;volatile
   420   00148A                     
   421                           ;source/preambleInitialization.c: 36:     TRISFbits.RF3 = 1;
   422   00148A  8697               	bsf	151,3,c	;volatile
   423   00148C                     
   424                           ;source/preambleInitialization.c: 37:     WDTCONbits.ADSHR = 1;
   425   00148C  88C0               	bsf	192,4,c	;volatile
   426   00148E                     
   427                           ;source/preambleInitialization.c: 38:     ANCON1bits.PCFG8 = 0;
   428   00148E  90C2               	bcf	194,0,c	;volatile
   429   001490                     
   430                           ;source/preambleInitialization.c: 39:     WDTCONbits.ADSHR = 0;
   431   001490  98C0               	bcf	192,4,c	;volatile
   432                           
   433                           ;source/preambleInitialization.c: 41:     ADCON1 = 0b10101010;
   434   001492  0EAA               	movlw	170
   435   001494  6EC1               	movwf	193,c	;volatile
   436                           
   437                           ;source/preambleInitialization.c: 42:     ADCON0 = 0b00100001;
   438   001496  0E21               	movlw	33
   439   001498  6EC2               	movwf	194,c	;volatile
   440   00149A                     
   441                           ;source/preambleInitialization.c: 44:     PIE1bits.ADIE = 1;
   442   00149A  8C9D               	bsf	157,6,c	;volatile
   443   00149C                     
   444                           ;source/preambleInitialization.c: 45:     IPR1bits.ADIP = 0;
   445   00149C  9C9F               	bcf	159,6,c	;volatile
   446                           
   447                           ;source/preambleInitialization.c: 56:     OSCCONbits.SCS = 0;
   448   00149E  0EFC               	movlw	-4
   449   0014A0  16D3               	andwf	211,f,c	;volatile
   450   0014A2                     
   451                           ;source/preambleInitialization.c: 58:     OSCTUNEbits.PLLEN = 1;
   452   0014A2  8C9B               	bsf	155,6,c	;volatile
   453   0014A4                     
   454                           ;source/preambleInitialization.c: 63:     RCONbits.IPEN = 1;
   455   0014A4  8ED0               	bsf	208,7,c	;volatile
   456   0014A6  0012               	return		;funcret
   457   0014A8                     __end_of_preambleInitialization:
   458                           	callstack 0
   459                           
   460 ;; *************** function _pametFce *****************
   461 ;; Defined at:
   462 ;;		line 14 in file "header/pamet.c"
   463 ;; Parameters:    Size  Location     Type
   464 ;;  tlacitko        1    7[COMRAM] PTR struct .
   465 ;;		 -> S4Filtr(2), 
   466 ;;  input           1    8[COMRAM] unsigned char 
   467 ;; Auto vars:     Size  Location     Type
   468 ;;  dalsiStav       1   11[COMRAM] unsigned char 
   469 ;; Return value:  Size  Location     Type
   470 ;;                  1    wreg      void 
   471 ;; Registers used:
   472 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   473 ;; Tracked objects:
   474 ;;		On entry : 0/0
   475 ;;		On exit  : 0/0
   476 ;;		Unchanged: 0/0
   477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   478 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   479 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   480 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   481 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   482 ;;Total ram usage:        5 bytes
   483 ;; Hardware stack levels used: 1
   484 ;; Hardware stack levels required when called: 2
   485 ;; This function calls:
   486 ;;		Nothing
   487 ;; This function is called by:
   488 ;;		_main
   489 ;; This function uses a non-reentrant model
   490 ;;
   491                           
   492                           	psect	text2
   493   0012EC                     __ptext2:
   494                           	callstack 0
   495   0012EC                     _pametFce:
   496                           	callstack 28
   497   0012EC                     
   498                           ;header/pamet.c: 15:     char dalsiStav = s0;
   499   0012EC  0E00               	movlw	0
   500   0012EE  6E1F               	movwf	pametFce@dalsiStav^0,c
   501                           
   502                           ;header/pamet.c: 17:     switch(tlacitko->stav){
   503   0012F0  EFBF  F009         	goto	l1205
   504   0012F4                     l1175:
   505                           
   506                           ;header/pamet.c: 19:             if(input == 0){
   507   0012F4  501C               	movf	pametFce@input^0,w,c
   508   0012F6  A4D8               	btfss	status,2,c
   509   0012F8  EF80  F009         	goto	u391
   510   0012FC  EF82  F009         	goto	u390
   511   001300                     u391:
   512   001300  EF86  F009         	goto	l1179
   513   001304                     u390:
   514   001304                     
   515                           ;header/pamet.c: 20:                 dalsiStav = s1;
   516   001304  0E01               	movlw	1
   517   001306  6E1F               	movwf	pametFce@dalsiStav^0,c
   518                           
   519                           ;header/pamet.c: 21:             }else{
   520   001308  EFDF  F009         	goto	l1207
   521   00130C                     l1179:
   522                           
   523                           ;header/pamet.c: 22:                 dalsiStav = s0;
   524   00130C  0E00               	movlw	0
   525   00130E  6E1F               	movwf	pametFce@dalsiStav^0,c
   526   001310  EFDF  F009         	goto	l1207
   527   001314                     l1181:
   528                           
   529                           ;header/pamet.c: 27:             if(input == 0){
   530   001314  501C               	movf	pametFce@input^0,w,c
   531   001316  A4D8               	btfss	status,2,c
   532   001318  EF90  F009         	goto	u401
   533   00131C  EF92  F009         	goto	u400
   534   001320                     u401:
   535   001320  EF9C  F009         	goto	l1187
   536   001324                     u400:
   537   001324                     
   538                           ;header/pamet.c: 28:                 dalsiStav = s1;
   539   001324  0E01               	movlw	1
   540   001326  6E1F               	movwf	pametFce@dalsiStav^0,c
   541   001328                     
   542                           ;header/pamet.c: 29:                tlacitko->vystup = 0;
   543   001328  501B               	movf	pametFce@tlacitko^0,w,c
   544   00132A  6ED9               	movwf	fsr2l,c
   545   00132C  6ADA               	clrf	fsr2h,c
   546   00132E  0E01               	movlw	1
   547   001330  26D9               	addwf	fsr2l,f,c
   548   001332  6ADF               	clrf	indf2,c
   549                           
   550                           ;header/pamet.c: 30:             }else{
   551   001334  EFDF  F009         	goto	l1207
   552   001338                     l1187:
   553                           
   554                           ;header/pamet.c: 31:                 dalsiStav = s2;
   555   001338  0E02               	movlw	2
   556   00133A  6E1F               	movwf	pametFce@dalsiStav^0,c
   557   00133C  EFDF  F009         	goto	l1207
   558   001340                     l1189:
   559                           
   560                           ;header/pamet.c: 36:             if(input == 0){
   561   001340  501C               	movf	pametFce@input^0,w,c
   562   001342  A4D8               	btfss	status,2,c
   563   001344  EFA6  F009         	goto	u411
   564   001348  EFA8  F009         	goto	u410
   565   00134C                     u411:
   566   00134C  EF9C  F009         	goto	l1187
   567   001350                     u410:
   568   001350                     
   569                           ;header/pamet.c: 37:                 dalsiStav = s3;
   570   001350  0E03               	movlw	3
   571   001352  6E1F               	movwf	pametFce@dalsiStav^0,c
   572                           
   573                           ;header/pamet.c: 38:             }else{
   574   001354  EFDF  F009         	goto	l1207
   575   001358                     l1195:
   576                           
   577                           ;header/pamet.c: 44:             if(input == 0){
   578   001358  501C               	movf	pametFce@input^0,w,c
   579   00135A  A4D8               	btfss	status,2,c
   580   00135C  EFB2  F009         	goto	u421
   581   001360  EFB4  F009         	goto	u420
   582   001364                     u421:
   583   001364  EF86  F009         	goto	l1179
   584   001368                     u420:
   585   001368                     
   586                           ;header/pamet.c: 45:                 dalsiStav = s3;
   587   001368  0E03               	movlw	3
   588   00136A  6E1F               	movwf	pametFce@dalsiStav^0,c
   589   00136C                     
   590                           ;header/pamet.c: 46:                 tlacitko->vystup = 1;
   591   00136C  501B               	movf	pametFce@tlacitko^0,w,c
   592   00136E  6ED9               	movwf	fsr2l,c
   593   001370  6ADA               	clrf	fsr2h,c
   594   001372  0E01               	movlw	1
   595   001374  26D9               	addwf	fsr2l,f,c
   596   001376  0E01               	movlw	1
   597   001378  6EDF               	movwf	indf2,c
   598                           
   599                           ;header/pamet.c: 47:             }else{
   600   00137A  EFDF  F009         	goto	l1207
   601   00137E                     l1205:
   602   00137E  501B               	movf	pametFce@tlacitko^0,w,c
   603   001380  6ED9               	movwf	fsr2l,c
   604   001382  6ADA               	clrf	fsr2h,c
   605   001384  50DF               	movf	indf2,w,c
   606   001386  6E1D               	movwf	??_pametFce^0,c
   607   001388  6A1E               	clrf	(??_pametFce+1)^0,c
   608                           
   609                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   610                           ; Switch size 1, requested type "simple"
   611                           ; Number of cases is 1, Range of values is 0 to 0
   612                           ; switch strategies available:
   613                           ; Name         Instructions Cycles
   614                           ; simple_byte            4     3 (average)
   615                           ;	Chosen strategy is simple_byte
   616   00138A  501E               	movf	(??_pametFce+1)^0,w,c
   617   00138C  0A00               	xorlw	0	; case 0
   618   00138E  B4D8               	btfsc	status,2,c
   619   001390  EFCC  F009         	goto	l1313
   620   001394  EFDF  F009         	goto	l1207
   621   001398                     l1313:
   622                           
   623                           ; Switch size 1, requested type "simple"
   624                           ; Number of cases is 4, Range of values is 0 to 3
   625                           ; switch strategies available:
   626                           ; Name         Instructions Cycles
   627                           ; simple_byte           13     7 (average)
   628                           ;	Chosen strategy is simple_byte
   629   001398  501D               	movf	??_pametFce^0,w,c
   630   00139A  0A00               	xorlw	0	; case 0
   631   00139C  B4D8               	btfsc	status,2,c
   632   00139E  EF7A  F009         	goto	l1175
   633   0013A2  0A01               	xorlw	1	; case 1
   634   0013A4  B4D8               	btfsc	status,2,c
   635   0013A6  EF8A  F009         	goto	l1181
   636   0013AA  0A03               	xorlw	3	; case 2
   637   0013AC  B4D8               	btfsc	status,2,c
   638   0013AE  EFA0  F009         	goto	l1189
   639   0013B2  0A01               	xorlw	1	; case 3
   640   0013B4  B4D8               	btfsc	status,2,c
   641   0013B6  EFAC  F009         	goto	l1195
   642   0013BA  EFDF  F009         	goto	l1207
   643   0013BE                     l1207:
   644                           
   645                           ;header/pamet.c: 54:       tlacitko->stav = dalsiStav;
   646   0013BE  501B               	movf	pametFce@tlacitko^0,w,c
   647   0013C0  6ED9               	movwf	fsr2l,c
   648   0013C2  6ADA               	clrf	fsr2h,c
   649   0013C4  C01F  FFDF         	movff	pametFce@dalsiStav,indf2
   650   0013C8  0012               	return		;funcret
   651   0013CA                     __end_of_pametFce:
   652                           	callstack 0
   653                           
   654 ;; *************** function _filterFce *****************
   655 ;; Defined at:
   656 ;;		line 15 in file "source/filter.c"
   657 ;; Parameters:    Size  Location     Type
   658 ;;  tlacitko        1    7[COMRAM] PTR struct .
   659 ;;		 -> S5B(2), S5A(2), S4(2), 
   660 ;;  vstup           1    8[COMRAM] unsigned char 
   661 ;; Auto vars:     Size  Location     Type
   662 ;;  dalsiStav       1   11[COMRAM] unsigned char 
   663 ;; Return value:  Size  Location     Type
   664 ;;                  1    wreg      void 
   665 ;; Registers used:
   666 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   667 ;; Tracked objects:
   668 ;;		On entry : 0/0
   669 ;;		On exit  : 0/0
   670 ;;		Unchanged: 0/0
   671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   672 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   673 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   674 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   675 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   676 ;;Total ram usage:        5 bytes
   677 ;; Hardware stack levels used: 1
   678 ;; Hardware stack levels required when called: 2
   679 ;; This function calls:
   680 ;;		Nothing
   681 ;; This function is called by:
   682 ;;		_main
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686                           	psect	text3
   687   0011F6                     __ptext3:
   688                           	callstack 0
   689   0011F6                     _filterFce:
   690                           	callstack 28
   691   0011F6                     
   692                           ;source/filter.c: 15: void filterFce(typeFilter*tlacitko, char vstup);source/filter.c: 1
      +                          6: {;source/filter.c: 17: char dalsiStav = s0;
   693   0011F6  0E00               	movlw	0
   694   0011F8  6E1F               	movwf	filterFce@dalsiStav^0,c
   695                           
   696                           ;source/filter.c: 20:   switch(tlacitko->stav){
   697   0011FA  EF4C  F009         	goto	l1165
   698   0011FE                     l1129:
   699                           
   700                           ;source/filter.c: 22:           if(vstup == 1){
   701   0011FE  041C               	decf	filterFce@vstup^0,w,c
   702   001200  A4D8               	btfss	status,2,c
   703   001202  EF05  F009         	goto	u341
   704   001206  EF07  F009         	goto	u340
   705   00120A                     u341:
   706   00120A  EF0B  F009         	goto	l1133
   707   00120E                     u340:
   708   00120E                     l1131:
   709                           
   710                           ;source/filter.c: 23:               dalsiStav = s1;
   711   00120E  0E01               	movlw	1
   712   001210  6E1F               	movwf	filterFce@dalsiStav^0,c
   713                           
   714                           ;source/filter.c: 24:           }else{
   715   001212  EF70  F009         	goto	l1167
   716   001216                     l1133:
   717                           
   718                           ;source/filter.c: 25:               dalsiStav = s3;
   719   001216  0E03               	movlw	3
   720   001218  6E1F               	movwf	filterFce@dalsiStav^0,c
   721   00121A  EF70  F009         	goto	l1167
   722   00121E                     l1135:
   723                           
   724                           ;source/filter.c: 30:           if(vstup == 1){
   725   00121E  041C               	decf	filterFce@vstup^0,w,c
   726   001220  A4D8               	btfss	status,2,c
   727   001222  EF15  F009         	goto	u351
   728   001226  EF17  F009         	goto	u350
   729   00122A                     u351:
   730   00122A  EF0B  F009         	goto	l1133
   731   00122E                     u350:
   732   00122E                     
   733                           ;source/filter.c: 31:               dalsiStav = s2;
   734   00122E  0E02               	movlw	2
   735   001230  6E1F               	movwf	filterFce@dalsiStav^0,c
   736                           
   737                           ;source/filter.c: 32:           }else{
   738   001232  EF70  F009         	goto	l1167
   739   001236                     l1141:
   740                           
   741                           ;source/filter.c: 38:           if(vstup == 1){
   742   001236  041C               	decf	filterFce@vstup^0,w,c
   743   001238  A4D8               	btfss	status,2,c
   744   00123A  EF21  F009         	goto	u361
   745   00123E  EF23  F009         	goto	u360
   746   001242                     u361:
   747   001242  EF0B  F009         	goto	l1133
   748   001246                     u360:
   749   001246                     
   750                           ;source/filter.c: 39:               dalsiStav = s2;
   751   001246  0E02               	movlw	2
   752   001248  6E1F               	movwf	filterFce@dalsiStav^0,c
   753   00124A                     
   754                           ;source/filter.c: 40:               tlacitko->vystup = 1;
   755   00124A  501B               	movf	filterFce@tlacitko^0,w,c
   756   00124C  6ED9               	movwf	fsr2l,c
   757   00124E  6ADA               	clrf	fsr2h,c
   758   001250  0E01               	movlw	1
   759   001252  26D9               	addwf	fsr2l,f,c
   760   001254  0E01               	movlw	1
   761   001256  6EDF               	movwf	indf2,c
   762                           
   763                           ;source/filter.c: 41:           }else{
   764   001258  EF70  F009         	goto	l1167
   765   00125C                     l1149:
   766                           
   767                           ;source/filter.c: 47:           if(vstup == 0){
   768   00125C  501C               	movf	filterFce@vstup^0,w,c
   769   00125E  A4D8               	btfss	status,2,c
   770   001260  EF34  F009         	goto	u371
   771   001264  EF36  F009         	goto	u370
   772   001268                     u371:
   773   001268  EF07  F009         	goto	l1131
   774   00126C                     u370:
   775   00126C                     
   776                           ;source/filter.c: 48:               dalsiStav = s4;
   777   00126C  0E04               	movlw	4
   778   00126E  6E1F               	movwf	filterFce@dalsiStav^0,c
   779                           
   780                           ;source/filter.c: 49:           }else{
   781   001270  EF70  F009         	goto	l1167
   782   001274                     l1155:
   783                           
   784                           ;source/filter.c: 56:           if(vstup == 0){
   785   001274  501C               	movf	filterFce@vstup^0,w,c
   786   001276  A4D8               	btfss	status,2,c
   787   001278  EF40  F009         	goto	u381
   788   00127C  EF42  F009         	goto	u380
   789   001280                     u381:
   790   001280  EF07  F009         	goto	l1131
   791   001284                     u380:
   792   001284                     
   793                           ;source/filter.c: 57:               dalsiStav = s4;
   794   001284  0E04               	movlw	4
   795   001286  6E1F               	movwf	filterFce@dalsiStav^0,c
   796   001288                     
   797                           ;source/filter.c: 58:               tlacitko->vystup = 0;
   798   001288  501B               	movf	filterFce@tlacitko^0,w,c
   799   00128A  6ED9               	movwf	fsr2l,c
   800   00128C  6ADA               	clrf	fsr2h,c
   801   00128E  0E01               	movlw	1
   802   001290  26D9               	addwf	fsr2l,f,c
   803   001292  6ADF               	clrf	indf2,c
   804                           
   805                           ;source/filter.c: 59:           }else{
   806   001294  EF70  F009         	goto	l1167
   807   001298                     l1165:
   808   001298  501B               	movf	filterFce@tlacitko^0,w,c
   809   00129A  6ED9               	movwf	fsr2l,c
   810   00129C  6ADA               	clrf	fsr2h,c
   811   00129E  50DF               	movf	indf2,w,c
   812   0012A0  6E1D               	movwf	??_filterFce^0,c
   813   0012A2  6A1E               	clrf	(??_filterFce+1)^0,c
   814                           
   815                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   816                           ; Switch size 1, requested type "simple"
   817                           ; Number of cases is 1, Range of values is 0 to 0
   818                           ; switch strategies available:
   819                           ; Name         Instructions Cycles
   820                           ; simple_byte            4     3 (average)
   821                           ;	Chosen strategy is simple_byte
   822   0012A4  501E               	movf	(??_filterFce+1)^0,w,c
   823   0012A6  0A00               	xorlw	0	; case 0
   824   0012A8  B4D8               	btfsc	status,2,c
   825   0012AA  EF59  F009         	goto	l1315
   826   0012AE  EF70  F009         	goto	l1167
   827   0012B2                     l1315:
   828                           
   829                           ; Switch size 1, requested type "simple"
   830                           ; Number of cases is 5, Range of values is 0 to 4
   831                           ; switch strategies available:
   832                           ; Name         Instructions Cycles
   833                           ; simple_byte           16     9 (average)
   834                           ;	Chosen strategy is simple_byte
   835   0012B2  501D               	movf	??_filterFce^0,w,c
   836   0012B4  0A00               	xorlw	0	; case 0
   837   0012B6  B4D8               	btfsc	status,2,c
   838   0012B8  EFFF  F008         	goto	l1129
   839   0012BC  0A01               	xorlw	1	; case 1
   840   0012BE  B4D8               	btfsc	status,2,c
   841   0012C0  EF0F  F009         	goto	l1135
   842   0012C4  0A03               	xorlw	3	; case 2
   843   0012C6  B4D8               	btfsc	status,2,c
   844   0012C8  EF1B  F009         	goto	l1141
   845   0012CC  0A01               	xorlw	1	; case 3
   846   0012CE  B4D8               	btfsc	status,2,c
   847   0012D0  EF2E  F009         	goto	l1149
   848   0012D4  0A07               	xorlw	7	; case 4
   849   0012D6  B4D8               	btfsc	status,2,c
   850   0012D8  EF3A  F009         	goto	l1155
   851   0012DC  EF70  F009         	goto	l1167
   852   0012E0                     l1167:
   853                           
   854                           ;source/filter.c: 66:   tlacitko->stav = dalsiStav;
   855   0012E0  501B               	movf	filterFce@tlacitko^0,w,c
   856   0012E2  6ED9               	movwf	fsr2l,c
   857   0012E4  6ADA               	clrf	fsr2h,c
   858   0012E6  C01F  FFDF         	movff	filterFce@dalsiStav,indf2
   859   0012EA  0012               	return		;funcret
   860   0012EC                     __end_of_filterFce:
   861                           	callstack 0
   862                           
   863 ;; *************** function _dekoderFce *****************
   864 ;; Defined at:
   865 ;;		line 14 in file "header/dekoder.c"
   866 ;; Parameters:    Size  Location     Type
   867 ;;  tlacitko        1    7[COMRAM] PTR struct .
   868 ;;		 -> dekoderAB(2), 
   869 ;;  A               1    8[COMRAM] unsigned char 
   870 ;;  B               1    9[COMRAM] unsigned char 
   871 ;; Auto vars:     Size  Location     Type
   872 ;;  dalsiStav       1   12[COMRAM] unsigned char 
   873 ;; Return value:  Size  Location     Type
   874 ;;                  1    wreg      void 
   875 ;; Registers used:
   876 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   877 ;; Tracked objects:
   878 ;;		On entry : 0/0
   879 ;;		On exit  : 0/0
   880 ;;		Unchanged: 0/0
   881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   882 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   883 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   884 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   885 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   886 ;;Total ram usage:        6 bytes
   887 ;; Hardware stack levels used: 1
   888 ;; Hardware stack levels required when called: 2
   889 ;; This function calls:
   890 ;;		Nothing
   891 ;; This function is called by:
   892 ;;		_main
   893 ;; This function uses a non-reentrant model
   894 ;;
   895                           
   896                           	psect	text4
   897   001002                     __ptext4:
   898                           	callstack 0
   899   001002                     _dekoderFce:
   900                           	callstack 28
   901   001002                     
   902                           ;header/dekoder.c: 15:     char dalsiStav = s0;
   903   001002  0E00               	movlw	0
   904   001004  6E20               	movwf	dekoderFce@dalsiStav^0,c
   905                           
   906                           ;header/dekoder.c: 17:     switch(tlacitko->stav){
   907   001006  EFD5  F008         	goto	l1281
   908   00100A                     l1215:
   909                           
   910                           ;header/dekoder.c: 19:             if(A == 1 && B == 0){
   911   00100A  041C               	decf	dekoderFce@A^0,w,c
   912   00100C  A4D8               	btfss	status,2,c
   913   00100E  EF0B  F008         	goto	u431
   914   001012  EF0D  F008         	goto	u430
   915   001016                     u431:
   916   001016  EF1F  F008         	goto	l1223
   917   00101A                     u430:
   918   00101A  501D               	movf	dekoderFce@B^0,w,c
   919   00101C  A4D8               	btfss	status,2,c
   920   00101E  EF13  F008         	goto	u441
   921   001022  EF15  F008         	goto	u440
   922   001026                     u441:
   923   001026  EF1F  F008         	goto	l1223
   924   00102A                     u440:
   925   00102A                     
   926                           ;header/dekoder.c: 20:                 dalsiStav = s1;
   927   00102A  0E01               	movlw	1
   928   00102C  6E20               	movwf	dekoderFce@dalsiStav^0,c
   929   00102E                     
   930                           ;header/dekoder.c: 21:                 tlacitko->vystup++;
   931   00102E  501B               	movf	dekoderFce@tlacitko^0,w,c
   932   001030  6ED9               	movwf	fsr2l,c
   933   001032  6ADA               	clrf	fsr2h,c
   934   001034  0E01               	movlw	1
   935   001036  26D9               	addwf	fsr2l,f,c
   936   001038  2ADF               	incf	indf2,f,c
   937                           
   938                           ;header/dekoder.c: 22:             }else if (A == 0 && B == 1){
   939   00103A  EFF5  F008         	goto	l1283
   940   00103E                     l1223:
   941   00103E  501C               	movf	dekoderFce@A^0,w,c
   942   001040  A4D8               	btfss	status,2,c
   943   001042  EF25  F008         	goto	u451
   944   001046  EF27  F008         	goto	u450
   945   00104A                     u451:
   946   00104A  EFF5  F008         	goto	l1283
   947   00104E                     u450:
   948   00104E  041D               	decf	dekoderFce@B^0,w,c
   949   001050  A4D8               	btfss	status,2,c
   950   001052  EF2D  F008         	goto	u461
   951   001056  EF2F  F008         	goto	u460
   952   00105A                     u461:
   953   00105A  EFF5  F008         	goto	l1283
   954   00105E                     u460:
   955   00105E                     
   956                           ;header/dekoder.c: 23:                 dalsiStav = s3;
   957   00105E  0E03               	movlw	3
   958   001060  6E20               	movwf	dekoderFce@dalsiStav^0,c
   959   001062                     
   960                           ;header/dekoder.c: 24:                 tlacitko->vystup--;
   961   001062  501B               	movf	dekoderFce@tlacitko^0,w,c
   962   001064  6ED9               	movwf	fsr2l,c
   963   001066  6ADA               	clrf	fsr2h,c
   964   001068  0E01               	movlw	1
   965   00106A  26D9               	addwf	fsr2l,f,c
   966   00106C  06DF               	decf	indf2,f,c
   967   00106E  EFF5  F008         	goto	l1283
   968   001072                     l1231:
   969                           
   970                           ;header/dekoder.c: 29:             if(A == 1 && B == 1){
   971   001072  041C               	decf	dekoderFce@A^0,w,c
   972   001074  A4D8               	btfss	status,2,c
   973   001076  EF3F  F008         	goto	u471
   974   00107A  EF41  F008         	goto	u470
   975   00107E                     u471:
   976   00107E  EF53  F008         	goto	l1239
   977   001082                     u470:
   978   001082  041D               	decf	dekoderFce@B^0,w,c
   979   001084  A4D8               	btfss	status,2,c
   980   001086  EF47  F008         	goto	u481
   981   00108A  EF49  F008         	goto	u480
   982   00108E                     u481:
   983   00108E  EF53  F008         	goto	l1239
   984   001092                     u480:
   985   001092                     
   986                           ;header/dekoder.c: 30:                 dalsiStav = s2;
   987   001092  0E02               	movlw	2
   988   001094  6E20               	movwf	dekoderFce@dalsiStav^0,c
   989   001096                     
   990                           ;header/dekoder.c: 31:                tlacitko->vystup++;
   991   001096  501B               	movf	dekoderFce@tlacitko^0,w,c
   992   001098  6ED9               	movwf	fsr2l,c
   993   00109A  6ADA               	clrf	fsr2h,c
   994   00109C  0E01               	movlw	1
   995   00109E  26D9               	addwf	fsr2l,f,c
   996   0010A0  2ADF               	incf	indf2,f,c
   997                           
   998                           ;header/dekoder.c: 32:             }else if (A == 0 && B == 0){
   999   0010A2  EFF5  F008         	goto	l1283
  1000   0010A6                     l1239:
  1001   0010A6  501C               	movf	dekoderFce@A^0,w,c
  1002   0010A8  A4D8               	btfss	status,2,c
  1003   0010AA  EF59  F008         	goto	u491
  1004   0010AE  EF5B  F008         	goto	u490
  1005   0010B2                     u491:
  1006   0010B2  EFF5  F008         	goto	l1283
  1007   0010B6                     u490:
  1008   0010B6  501D               	movf	dekoderFce@B^0,w,c
  1009   0010B8  A4D8               	btfss	status,2,c
  1010   0010BA  EF61  F008         	goto	u501
  1011   0010BE  EF63  F008         	goto	u500
  1012   0010C2                     u501:
  1013   0010C2  EFF5  F008         	goto	l1283
  1014   0010C6                     u500:
  1015   0010C6                     
  1016                           ;header/dekoder.c: 33:                 dalsiStav = s0;
  1017   0010C6  0E00               	movlw	0
  1018   0010C8  6E20               	movwf	dekoderFce@dalsiStav^0,c
  1019   0010CA                     
  1020                           ;header/dekoder.c: 34:                 tlacitko->vystup--;
  1021   0010CA  501B               	movf	dekoderFce@tlacitko^0,w,c
  1022   0010CC  6ED9               	movwf	fsr2l,c
  1023   0010CE  6ADA               	clrf	fsr2h,c
  1024   0010D0  0E01               	movlw	1
  1025   0010D2  26D9               	addwf	fsr2l,f,c
  1026   0010D4  06DF               	decf	indf2,f,c
  1027   0010D6  EFF5  F008         	goto	l1283
  1028   0010DA                     l1247:
  1029                           
  1030                           ;header/dekoder.c: 39:             if(A == 0 && B == 1){
  1031   0010DA  501C               	movf	dekoderFce@A^0,w,c
  1032   0010DC  A4D8               	btfss	status,2,c
  1033   0010DE  EF73  F008         	goto	u511
  1034   0010E2  EF75  F008         	goto	u510
  1035   0010E6                     u511:
  1036   0010E6  EF87  F008         	goto	l1255
  1037   0010EA                     u510:
  1038   0010EA  041D               	decf	dekoderFce@B^0,w,c
  1039   0010EC  A4D8               	btfss	status,2,c
  1040   0010EE  EF7B  F008         	goto	u521
  1041   0010F2  EF7D  F008         	goto	u520
  1042   0010F6                     u521:
  1043   0010F6  EF87  F008         	goto	l1255
  1044   0010FA                     u520:
  1045   0010FA                     
  1046                           ;header/dekoder.c: 40:                 dalsiStav = s3;
  1047   0010FA  0E03               	movlw	3
  1048   0010FC  6E20               	movwf	dekoderFce@dalsiStav^0,c
  1049   0010FE                     
  1050                           ;header/dekoder.c: 41:                 tlacitko->vystup++;
  1051   0010FE  501B               	movf	dekoderFce@tlacitko^0,w,c
  1052   001100  6ED9               	movwf	fsr2l,c
  1053   001102  6ADA               	clrf	fsr2h,c
  1054   001104  0E01               	movlw	1
  1055   001106  26D9               	addwf	fsr2l,f,c
  1056   001108  2ADF               	incf	indf2,f,c
  1057                           
  1058                           ;header/dekoder.c: 42:             }else if (A == 1 && B == 0){
  1059   00110A  EFF5  F008         	goto	l1283
  1060   00110E                     l1255:
  1061   00110E  041C               	decf	dekoderFce@A^0,w,c
  1062   001110  A4D8               	btfss	status,2,c
  1063   001112  EF8D  F008         	goto	u531
  1064   001116  EF8F  F008         	goto	u530
  1065   00111A                     u531:
  1066   00111A  EFF5  F008         	goto	l1283
  1067   00111E                     u530:
  1068   00111E  501D               	movf	dekoderFce@B^0,w,c
  1069   001120  A4D8               	btfss	status,2,c
  1070   001122  EF95  F008         	goto	u541
  1071   001126  EF97  F008         	goto	u540
  1072   00112A                     u541:
  1073   00112A  EFF5  F008         	goto	l1283
  1074   00112E                     u540:
  1075   00112E                     
  1076                           ;header/dekoder.c: 43:                 dalsiStav = s1;
  1077   00112E  0E01               	movlw	1
  1078   001130  6E20               	movwf	dekoderFce@dalsiStav^0,c
  1079   001132                     
  1080                           ;header/dekoder.c: 44:                 tlacitko->vystup--;
  1081   001132  501B               	movf	dekoderFce@tlacitko^0,w,c
  1082   001134  6ED9               	movwf	fsr2l,c
  1083   001136  6ADA               	clrf	fsr2h,c
  1084   001138  0E01               	movlw	1
  1085   00113A  26D9               	addwf	fsr2l,f,c
  1086   00113C  06DF               	decf	indf2,f,c
  1087   00113E  EFF5  F008         	goto	l1283
  1088   001142                     l1263:
  1089                           
  1090                           ;header/dekoder.c: 49:             if(A == 0 && B == 0){
  1091   001142  501C               	movf	dekoderFce@A^0,w,c
  1092   001144  A4D8               	btfss	status,2,c
  1093   001146  EFA7  F008         	goto	u551
  1094   00114A  EFA9  F008         	goto	u550
  1095   00114E                     u551:
  1096   00114E  EFBB  F008         	goto	l1271
  1097   001152                     u550:
  1098   001152  501D               	movf	dekoderFce@B^0,w,c
  1099   001154  A4D8               	btfss	status,2,c
  1100   001156  EFAF  F008         	goto	u561
  1101   00115A  EFB1  F008         	goto	u560
  1102   00115E                     u561:
  1103   00115E  EFBB  F008         	goto	l1271
  1104   001162                     u560:
  1105   001162                     
  1106                           ;header/dekoder.c: 50:                 dalsiStav = s0;
  1107   001162  0E00               	movlw	0
  1108   001164  6E20               	movwf	dekoderFce@dalsiStav^0,c
  1109   001166                     
  1110                           ;header/dekoder.c: 51:                 tlacitko->vystup++;
  1111   001166  501B               	movf	dekoderFce@tlacitko^0,w,c
  1112   001168  6ED9               	movwf	fsr2l,c
  1113   00116A  6ADA               	clrf	fsr2h,c
  1114   00116C  0E01               	movlw	1
  1115   00116E  26D9               	addwf	fsr2l,f,c
  1116   001170  2ADF               	incf	indf2,f,c
  1117                           
  1118                           ;header/dekoder.c: 52:             }else if (A == 1 && B == 1){
  1119   001172  EFF5  F008         	goto	l1283
  1120   001176                     l1271:
  1121   001176  041C               	decf	dekoderFce@A^0,w,c
  1122   001178  A4D8               	btfss	status,2,c
  1123   00117A  EFC1  F008         	goto	u571
  1124   00117E  EFC3  F008         	goto	u570
  1125   001182                     u571:
  1126   001182  EFF5  F008         	goto	l1283
  1127   001186                     u570:
  1128   001186  041D               	decf	dekoderFce@B^0,w,c
  1129   001188  A4D8               	btfss	status,2,c
  1130   00118A  EFC9  F008         	goto	u581
  1131   00118E  EFCB  F008         	goto	u580
  1132   001192                     u581:
  1133   001192  EFF5  F008         	goto	l1283
  1134   001196                     u580:
  1135   001196                     
  1136                           ;header/dekoder.c: 53:                 dalsiStav = s2;
  1137   001196  0E02               	movlw	2
  1138   001198  6E20               	movwf	dekoderFce@dalsiStav^0,c
  1139   00119A                     
  1140                           ;header/dekoder.c: 54:                 tlacitko->vystup--;
  1141   00119A  501B               	movf	dekoderFce@tlacitko^0,w,c
  1142   00119C  6ED9               	movwf	fsr2l,c
  1143   00119E  6ADA               	clrf	fsr2h,c
  1144   0011A0  0E01               	movlw	1
  1145   0011A2  26D9               	addwf	fsr2l,f,c
  1146   0011A4  06DF               	decf	indf2,f,c
  1147   0011A6  EFF5  F008         	goto	l1283
  1148   0011AA                     l1281:
  1149   0011AA  501B               	movf	dekoderFce@tlacitko^0,w,c
  1150   0011AC  6ED9               	movwf	fsr2l,c
  1151   0011AE  6ADA               	clrf	fsr2h,c
  1152   0011B0  50DF               	movf	indf2,w,c
  1153   0011B2  6E1E               	movwf	??_dekoderFce^0,c
  1154   0011B4  6A1F               	clrf	(??_dekoderFce+1)^0,c
  1155                           
  1156                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1157                           ; Switch size 1, requested type "simple"
  1158                           ; Number of cases is 1, Range of values is 0 to 0
  1159                           ; switch strategies available:
  1160                           ; Name         Instructions Cycles
  1161                           ; simple_byte            4     3 (average)
  1162                           ;	Chosen strategy is simple_byte
  1163   0011B6  501F               	movf	(??_dekoderFce+1)^0,w,c
  1164   0011B8  0A00               	xorlw	0	; case 0
  1165   0011BA  B4D8               	btfsc	status,2,c
  1166   0011BC  EFE2  F008         	goto	l1317
  1167   0011C0  EFF5  F008         	goto	l1283
  1168   0011C4                     l1317:
  1169                           
  1170                           ; Switch size 1, requested type "simple"
  1171                           ; Number of cases is 4, Range of values is 0 to 3
  1172                           ; switch strategies available:
  1173                           ; Name         Instructions Cycles
  1174                           ; simple_byte           13     7 (average)
  1175                           ;	Chosen strategy is simple_byte
  1176   0011C4  501E               	movf	??_dekoderFce^0,w,c
  1177   0011C6  0A00               	xorlw	0	; case 0
  1178   0011C8  B4D8               	btfsc	status,2,c
  1179   0011CA  EF05  F008         	goto	l1215
  1180   0011CE  0A01               	xorlw	1	; case 1
  1181   0011D0  B4D8               	btfsc	status,2,c
  1182   0011D2  EF39  F008         	goto	l1231
  1183   0011D6  0A03               	xorlw	3	; case 2
  1184   0011D8  B4D8               	btfsc	status,2,c
  1185   0011DA  EF6D  F008         	goto	l1247
  1186   0011DE  0A01               	xorlw	1	; case 3
  1187   0011E0  B4D8               	btfsc	status,2,c
  1188   0011E2  EFA1  F008         	goto	l1263
  1189   0011E6  EFF5  F008         	goto	l1283
  1190   0011EA                     l1283:
  1191                           
  1192                           ;header/dekoder.c: 60:       tlacitko->stav = dalsiStav;
  1193   0011EA  501B               	movf	dekoderFce@tlacitko^0,w,c
  1194   0011EC  6ED9               	movwf	fsr2l,c
  1195   0011EE  6ADA               	clrf	fsr2h,c
  1196   0011F0  C020  FFDF         	movff	dekoderFce@dalsiStav,indf2
  1197   0011F4  0012               	return		;funcret
  1198   0011F6                     __end_of_dekoderFce:
  1199                           	callstack 0
  1200                           
  1201 ;; *************** function _low_isr *****************
  1202 ;; Defined at:
  1203 ;;		line 118 in file "source/main.c"
  1204 ;; Parameters:    Size  Location     Type
  1205 ;;		None
  1206 ;; Auto vars:     Size  Location     Type
  1207 ;;		None
  1208 ;; Return value:  Size  Location     Type
  1209 ;;                  1    wreg      void 
  1210 ;; Registers used:
  1211 ;;		wreg, status,2, status,0
  1212 ;; Tracked objects:
  1213 ;;		On entry : 0/0
  1214 ;;		On exit  : 0/0
  1215 ;;		Unchanged: 0/0
  1216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1219 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1220 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1221 ;;Total ram usage:        7 bytes
  1222 ;; Hardware stack levels used: 1
  1223 ;; Hardware stack levels required when called: 1
  1224 ;; This function calls:
  1225 ;;		Nothing
  1226 ;; This function is called by:
  1227 ;;		Interrupt level 1
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231                           	psect	intcodelo
  1232   000018                     __pintcodelo:
  1233                           	callstack 0
  1234   000018                     _low_isr:
  1235                           	callstack 28
  1236                           
  1237                           ;incstack = 0
  1238   000018  8021               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1239   00001A  CFD8 F018          	movff	status,??_low_isr+4
  1240   00001E  CFE8 F019          	movff	wreg,??_low_isr+5
  1241   000022  CFE0 F01A          	movff	bsr,??_low_isr+6
  1242   000026                     
  1243                           ;source/main.c: 120:     if(INTCONbits.TMR0IF == 1)
  1244   000026  A4F2               	btfss	242,2,c	;volatile
  1245   000028  EF18  F000         	goto	i1u28_21
  1246   00002C  EF1A  F000         	goto	i1u28_20
  1247   000030                     i1u28_21:
  1248   000030  EF2D  F000         	goto	i1l1077
  1249   000034                     i1u28_20:
  1250   000034                     
  1251                           ;source/main.c: 121:     {;source/main.c: 122:         is1ms = 1;
  1252   000034  0E01               	movlw	1
  1253   000036  6E08               	movwf	_is1ms^0,c
  1254                           
  1255                           ;source/main.c: 123:         TMR0H = 0xD8;
  1256   000038  0ED8               	movlw	216
  1257   00003A  6ED7               	movwf	215,c	;volatile
  1258                           
  1259                           ;source/main.c: 124:         TMR0L = 0xEF;
  1260   00003C  0EEF               	movlw	239
  1261   00003E  6ED6               	movwf	214,c	;volatile
  1262   000040                     
  1263                           ;source/main.c: 126:         INTCONbits.TMR0IF = 0;
  1264   000040  94F2               	bcf	242,2,c	;volatile
  1265   000042                     
  1266                           ;source/main.c: 127:         is10ms++;
  1267   000042  2A07               	incf	_is10ms^0,f,c
  1268   000044                     
  1269                           ;source/main.c: 129:     if(is10ms >= 10){
  1270   000044  0E09               	movlw	9
  1271   000046  6407               	cpfsgt	_is10ms^0,c
  1272   000048  EF28  F000         	goto	i1u29_21
  1273   00004C  EF2A  F000         	goto	i1u29_20
  1274   000050                     i1u29_21:
  1275   000050  EF2D  F000         	goto	i1l1077
  1276   000054                     i1u29_20:
  1277   000054                     
  1278                           ;source/main.c: 130:         is10ms = 0;
  1279   000054  0E00               	movlw	0
  1280   000056  6E07               	movwf	_is10ms^0,c
  1281   000058                     
  1282                           ;source/main.c: 131:         ADCON0bits.GO = 1;
  1283   000058  82C2               	bsf	194,1,c	;volatile
  1284   00005A                     i1l1077:
  1285                           
  1286                           ;source/main.c: 135:     if(PIR1bits.ADIF == 1){
  1287   00005A  AC9E               	btfss	158,6,c	;volatile
  1288   00005C  EF32  F000         	goto	i1u30_21
  1289   000060  EF34  F000         	goto	i1u30_20
  1290   000064                     i1u30_21:
  1291   000064  EF59  F000         	goto	i1l68
  1292   000068                     i1u30_20:
  1293   000068                     
  1294                           ;source/main.c: 136:         vysledek = ADRESH;
  1295   000068  50C4               	movf	196,w,c	;volatile
  1296   00006A  6E01               	movwf	_vysledek^0,c
  1297   00006C  6A02               	clrf	(_vysledek+1)^0,c
  1298   00006E  6A03               	clrf	(_vysledek+2)^0,c
  1299   000070  6A04               	clrf	(_vysledek+3)^0,c
  1300   000072                     
  1301                           ;source/main.c: 137:         vysledek = (vysledek << 8);
  1302   000072  C001  F015         	movff	_vysledek,??_low_isr+1
  1303   000076  C002  F016         	movff	_vysledek+1,??_low_isr+2
  1304   00007A  C003  F017         	movff	_vysledek+2,??_low_isr+3
  1305   00007E  6A14               	clrf	??_low_isr^0,c
  1306   000080  C014  F001         	movff	??_low_isr,_vysledek
  1307   000084  C015  F002         	movff	??_low_isr+1,_vysledek+1
  1308   000088  C016  F003         	movff	??_low_isr+2,_vysledek+2
  1309   00008C  C017  F004         	movff	??_low_isr+3,_vysledek+3
  1310   000090                     
  1311                           ;source/main.c: 138:         vysledek = vysledek + ADRESL;
  1312   000090  50C3               	movf	195,w,c	;volatile
  1313   000092  2401               	addwf	_vysledek^0,w,c
  1314   000094  6E01               	movwf	_vysledek^0,c
  1315   000096  0E00               	movlw	0
  1316   000098  2002               	addwfc	(_vysledek+1)^0,w,c
  1317   00009A  6E02               	movwf	(_vysledek+1)^0,c
  1318   00009C  0E00               	movlw	0
  1319   00009E  2003               	addwfc	(_vysledek+2)^0,w,c
  1320   0000A0  6E03               	movwf	(_vysledek+2)^0,c
  1321   0000A2  0E00               	movlw	0
  1322   0000A4  2004               	addwfc	(_vysledek+3)^0,w,c
  1323   0000A6  6E04               	movwf	(_vysledek+3)^0,c
  1324   0000A8                     
  1325                           ;source/main.c: 139:         ADRhotovo = TRUE;
  1326   0000A8  0E00               	movlw	0
  1327   0000AA  6E06               	movwf	(_ADRhotovo+1)^0,c
  1328   0000AC  0E00               	movlw	0
  1329   0000AE  6E05               	movwf	_ADRhotovo^0,c
  1330   0000B0                     
  1331                           ;source/main.c: 140:         PIR1bits.ADIF = 0;
  1332   0000B0  9C9E               	bcf	158,6,c	;volatile
  1333   0000B2                     i1l68:
  1334   0000B2  C01A  FFE0         	movff	??_low_isr+6,bsr
  1335   0000B6  C019  FFE8         	movff	??_low_isr+5,wreg
  1336   0000BA  C018  FFD8         	movff	??_low_isr+4,status
  1337   0000BE  9021               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1338   0000C0  0010               	retfie	
  1339   0000C2                     __end_of_low_isr:
  1340                           	callstack 0
  1341                           
  1342 ;; *************** function _high_isr *****************
  1343 ;; Defined at:
  1344 ;;		line 112 in file "source/main.c"
  1345 ;; Parameters:    Size  Location     Type
  1346 ;;		None
  1347 ;; Auto vars:     Size  Location     Type
  1348 ;;		None
  1349 ;; Return value:  Size  Location     Type
  1350 ;;                  1    wreg      void 
  1351 ;; Registers used:
  1352 ;;		None
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1362 ;;Total ram usage:        0 bytes
  1363 ;; Hardware stack levels used: 1
  1364 ;; This function calls:
  1365 ;;		Nothing
  1366 ;; This function is called by:
  1367 ;;		Interrupt level 2
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371                           	psect	intcode
  1372   000008                     __pintcode:
  1373                           	callstack 0
  1374   000008                     _high_isr:
  1375                           	callstack 28
  1376                           
  1377                           ;incstack = 0
  1378   000008  8221               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1379   00000A  EF5F  F00A         	goto	int_func
  1380                           
  1381                           	psect	intcode_body
  1382   0014BE                     __pintcode_body:
  1383                           	callstack 28
  1384   0014BE                     int_func:
  1385                           	callstack 28
  1386   0014BE  9221               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1387   0014C0  0011               	retfie		f
  1388   0014C2                     __end_of_high_isr:
  1389                           	callstack 0
  1390                           
  1391                           	psect	smallconst
  1392   001000                     __psmallconst:
  1393                           	callstack 0
  1394   001000  00                 	db	0
  1395   001001  00                 	db	0	; dummy byte at the end
  1396   000000                     
  1397                           	psect	rparam
  1398   000000                     
  1399                           	psect	temp
  1400   000021                     btemp:
  1401                           	callstack 0
  1402   000021                     	ds	1
  1403   000000                     int$flags	set	btemp
  1404   000000                     wtemp8	set	btemp+1
  1405   000000                     ttemp5	set	btemp+1
  1406   000000                     ttemp6	set	btemp+4
  1407   000000                     ttemp7	set	btemp+8
  1408                           
  1409                           	psect	config
  1410                           
  1411                           ;Config register CONFIG1L @ 0x1FFF8
  1412                           ;	Watchdog Timer Enable bit
  1413                           ;	WDTEN = OFF, WDT disabled (control is placed on SWDTEN bit)
  1414                           ;	Stack Overflow/Underflow Reset Enable bit
  1415                           ;	STVREN = ON, Reset on stack overflow/underflow enabled
  1416                           ;	Extended Instruction Set Enable bit
  1417                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1418                           ;	Background Debugger Enable bit
  1419                           ;	DEBUG = 0x1, unprogrammed default
  1420   01FFF8                     	org	131064
  1421   01FFF8  A0                 	db	160
  1422                           
  1423                           ;Config register CONFIG1H @ 0x1FFF9
  1424                           ;	Code Protection bit
  1425                           ;	CP0 = OFF, Program memory is not code-protected
  1426   01FFF9                     	org	131065
  1427   01FFF9  F4                 	db	244
  1428                           
  1429                           ;Config register CONFIG2L @ 0x1FFFA
  1430                           ;	Oscillator Selection bits
  1431                           ;	FOSC = HSPLL, HS oscillator, PLL enabled
  1432                           ;	Fail-Safe Clock Monitor Enable bit
  1433                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1434                           ;	Two-Speed Start-up (Internal/External Oscillator Switchover) Control bit
  1435                           ;	IESO = OFF, Two-Speed Start-up disabled
  1436   01FFFA                     	org	131066
  1437   01FFFA  05                 	db	5
  1438                           
  1439                           ;Config register CONFIG2H @ 0x1FFFB
  1440                           ;	Watchdog Timer Postscaler Select bits
  1441                           ;	WDTPS = 32768, 1:32768
  1442   01FFFB                     	org	131067
  1443   01FFFB  FF                 	db	255
  1444                           
  1445                           ;Config register CONFIG3L @ 0x1FFFC
  1446                           ;	External Address Bus Shift Enable bit
  1447                           ;	EASHFT = 0x1, unprogrammed default
  1448                           ;	External Memory Bus Configuration bits
  1449                           ;	MODE = MM, Microcontroller mode - External bus disabled
  1450                           ;	Data Bus Width Select bit
  1451                           ;	BW = 0x1, unprogrammed default
  1452                           ;	External Bus Wait Enable bit
  1453                           ;	WAIT = 0x1, unprogrammed default
  1454   01FFFC                     	org	131068
  1455   01FFFC  F8                 	db	248
  1456                           
  1457                           ;Config register CONFIG3H @ 0x1FFFD
  1458                           ;	unspecified, using default values
  1459                           ;	ECCP2 MUX bit
  1460                           ;	CCP2MX = 0x1, unprogrammed default
  1461                           ;	ECCPx MUX bit
  1462                           ;	ECCPMX = 0x1, unprogrammed default
  1463                           ;	PMP Pin Multiplex bit
  1464                           ;	PMPMX = 0x1, unprogrammed default
  1465                           ;	MSSP Address Masking Mode Select bit
  1466                           ;	MSSPMSK = 0x1, unprogrammed default
  1467   01FFFD                     	org	131069
  1468   01FFFD  FF                 	db	255
  1469                           tosu	equ	0xFFF
  1470                           tosh	equ	0xFFE
  1471                           tosl	equ	0xFFD
  1472                           stkptr	equ	0xFFC
  1473                           pclatu	equ	0xFFB
  1474                           pclath	equ	0xFFA
  1475                           pcl	equ	0xFF9
  1476                           tblptru	equ	0xFF8
  1477                           tblptrh	equ	0xFF7
  1478                           tblptrl	equ	0xFF6
  1479                           tablat	equ	0xFF5
  1480                           prodh	equ	0xFF4
  1481                           prodl	equ	0xFF3
  1482                           indf0	equ	0xFEF
  1483                           postinc0	equ	0xFEE
  1484                           postdec0	equ	0xFED
  1485                           preinc0	equ	0xFEC
  1486                           plusw0	equ	0xFEB
  1487                           fsr0h	equ	0xFEA
  1488                           fsr0l	equ	0xFE9
  1489                           wreg	equ	0xFE8
  1490                           indf1	equ	0xFE7
  1491                           postinc1	equ	0xFE6
  1492                           postdec1	equ	0xFE5
  1493                           preinc1	equ	0xFE4
  1494                           plusw1	equ	0xFE3
  1495                           fsr1h	equ	0xFE2
  1496                           fsr1l	equ	0xFE1
  1497                           bsr	equ	0xFE0
  1498                           indf2	equ	0xFDF
  1499                           postinc2	equ	0xFDE
  1500                           postdec2	equ	0xFDD
  1501                           preinc2	equ	0xFDC
  1502                           plusw2	equ	0xFDB
  1503                           fsr2h	equ	0xFDA
  1504                           fsr2l	equ	0xFD9
  1505                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     13      32
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           64      0       0

Pointer List with Targets:

    dekoderFce@tlacitko	PTR struct . size(1) Largest target is 2
		 -> dekoderAB(COMRAM[2]), 

    filterFce@tlacitko	PTR struct . size(1) Largest target is 2
		 -> S4(COMRAM[2]), S5A(COMRAM[2]), S5B(COMRAM[2]), 

    pametFce@tlacitko	PTR struct . size(1) Largest target is 2
		 -> S4Filtr(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_dekoderFce

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _low_isr in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1877
                         _dekoderFce
                          _filterFce
                           _pametFce
             _preambleInitialization
 ---------------------------------------------------------------------------------
 (1) _preambleInitialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pametFce                                             5     3      2     359
                                              7 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _filterFce                                            5     3      2     687
                                              7 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _dekoderFce                                           6     3      3     831
                                              7 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _low_isr                                              7     7      0       0
                                              0 COMRAM     7     7      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _high_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dekoderFce
   _filterFce
   _pametFce
   _preambleInitialization

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F3F      0       0      49        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      D      20       1       34.0%
BITBANK15           40      0       0      35        0.0%
BANK15              40      0       0      36        0.0%
BITBIGSFRl          2E      0       0      48        0.0%
BITBIGSFRhhlllh     20      0       0      42        0.0%
BITBIGSFRhhlh       19      0       0      38        0.0%
BITBIGSFRhhh         D      0       0      37        0.0%
BITBIGSFRhhllhh      B      0       0      41        0.0%
BITBIGSFRhhllll      8      0       0      46        0.0%
BITBIGSFRhl          3      0       0      47        0.0%
BITBIGSFRhhllhh      2      0       0      40        0.0%
BITBIGSFRhhllhh      1      0       0      39        0.0%
BITBIGSFRhhllll      1      0       0      44        0.0%
BITBIGSFRhhllll      1      0       0      45        0.0%
BITBIGSFRhhllll      1      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      20      32        0.0%
DATA                 0      0      20       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Dec 05 14:04:13 2023

                            _S4 0012                              bsr 0FE0                             l109 14A6  
                           l135 12EA                             l152 13C8                             l173 11F4  
                           l861 146E                             l871 1480                             l863 1478  
                           l881 149A                             l873 148A                             l865 147A  
                           l857 1468                             l883 149C                             l875 148C  
                           l867 147C                             l859 146C                             l885 14A2  
                           l877 148E                             l869 147E                             l887 14A4  
                           l879 1490                             _S5A 0010                             _S5B 000E  
                           u400 1324                             u401 1320                             u410 1350  
                           u411 134C                             u500 10C6                             u340 120E  
                           u420 1368                             u501 10C2                             u341 120A  
                           u421 1364                             u510 10EA                             u430 101A  
                           u350 122E                             u511 10E6                             u431 1016  
                           u351 122A                             u520 10FA                             u440 102A  
                           u360 1246                             u521 10F6                             u441 1026  
                           u361 1242                             u530 111E                             u450 104E  
                           u370 126C                             u531 111A                             u451 104A  
                           u371 1268                             u540 112E                             u460 105E  
                           u380 1284                             u541 112A                             u461 105A  
                           u381 1280                             u605 145E                             u550 1152  
                           u470 1082                             u390 1304                             u606 1460  
                           u551 114E                             u471 107E                             u391 1300  
                           u560 1162                             u480 1092                             u561 115E  
                           u481 108E                             u570 1186                             u490 10B6  
                           u571 1182                             u491 10B2                             u580 1196  
                           u581 1192                             u590 1406                             u591 1402  
                           wreg 0FE8                            l1131 120E                            l1221 102E  
                          l1213 1002                            l1141 1236                            l1133 1216  
                          l1205 137E                            l1231 1072                            l1223 103E  
                          l1215 100A                            l1151 126C                            l1143 1246  
                          l1135 121E                            l1127 11F6                            l1207 13BE  
                          l1241 10B6                            l1233 1082                            l1225 104E  
                          l1217 101A                            l1145 124A                            l1137 122E  
                          l1129 11FE                            l1313 1398                            l1251 10FA  
                          l1243 10C6                            l1235 1092                            l1227 105E  
                          l1219 102A                            l1315 12B2                            l1155 1274  
                          l1317 11C4                            l1261 1132                            l1253 10FE  
                          l1245 10CA                            l1237 1096                            l1229 1062  
                          l1157 1284                            l1149 125C                            l1165 1298  
                          l1181 1314                            l1173 12EC                            l1271 1176  
                          l1263 1142                            l1255 110E                            l1247 10DA  
                          l1239 10A6                            l1159 1288                            l1167 12E0  
                          l1191 1350                            l1183 1324                            l1175 12F4  
                          l1273 1186                            l1265 1152                            l1257 111E  
                          l1249 10EA                            l1281 11AA                            l1185 1328  
                          l1177 1304                            l1275 1196                            l1267 1162  
                          l1259 112E                            l1283 11EA                            l1195 1358  
                          l1187 1338                            l1179 130C                            l1291 13F2  
                          l1277 119A                            l1269 1166                            l1197 1368  
                          l1189 1340                            l1293 13F6                            l1199 136C  
                          l1295 1406                            l1297 1452                            l1289 13CA  
                          l1299 1456                            i2l60 14BE                            i1l68 00B2  
                          _main 13CA                            fsr2h 0FDA                            indf2 0FDF  
                          fsr2l 0FD9                            btemp 0021                            start 00C2  
             pametFce@dalsiStav 001F                    ___param_bank 0000                           ?_main 0014  
                         _T0CON 0FD5                           _TMR0H 0FD7                           _TMR0L 0FD6  
                         _TRISD 0F95                           _TRISH 0F99                           _TRISJ 0F9A  
                         _is1ms 0008                 __end_of_low_isr 00C2                           ttemp5 0022  
                         ttemp6 0025                           ttemp7 0029                           status 0FD8  
                         wtemp8 0022                 __initialization 14A8                    __end_of_main 1468  
                        ??_main 0021                   __activetblptr 0003                          _ADCON0 0FC2  
                        _ADCON1 0FC1                          _ADRESH 0FC4                          _ADRESL 0FC3  
                        i1l1071 0044                          i1l1063 0026                          i1l1081 0072  
                        i1l1073 0054                          i1l1065 0034                          i1l1083 0090  
                        i1l1075 0058                          i1l1067 0040                          i1l1085 00A8  
                        i1l1069 0042                          i1l1077 005A                          i1l1087 00B0  
                        i1l1079 0068                __end_of_high_isr 14C2                          _is10ms 0007  
        _preambleInitialization 1468                __end_of_pametFce 13CA                          clear_0 14AE  
                        isa$std 0001                          _vystup 0009                    __mediumconst 0000  
                     ??_low_isr 0014                      __accesstop 0060         __end_of__initialization 14B4  
                 ___rparam_used 0001                  __pcstackCOMRAM 0014                      _dekoderFce 1002  
            dekoderFce@tlacitko 001B              filterFce@dalsiStav 001F                         _S4Filtr 000C  
                       i1u30_20 0068                         i1u30_21 0064                         i1u28_20 0034  
                       i1u28_21 0030                         i1u29_20 0054                         i1u29_21 0050  
                     ?_high_isr 0014                       ?_pametFce 001B                         __Hparam 0000  
                       __Lparam 0000               __end_of_filterFce 12EC                    __psmallconst 1000  
                       __pcinit 14A8                         __ramtop 1000                         __ptext0 13CA  
                       __ptext1 1468                         __ptext2 12EC                         __ptext3 11F6  
                       __ptext4 1002                       _T0CONbits 0FD5                       _ADRhotovo 0005  
                       _low_isr 0018                      ??_high_isr 0014                  __pintcode_body 14BE  
          end_of_initialization 14B4                      ??_pametFce 001D                         int_func 14BE  
                   ?_dekoderFce 001B                  filterFce@vstup 001C         ?_preambleInitialization 0014  
                       postinc0 0FEE                       _PORTJbits 0F88                       _TRISFbits 0F97  
__end_of_preambleInitialization 14A8             start_initialization 14A8                pametFce@tlacitko 001B  
           dekoderFce@dalsiStav 0020                     __pbssCOMRAM 0001                       _dekoderAB 000A  
                     __pintcode 0008                     __pintcodelo 0018                       _filterFce 11F6  
                   __smallconst 1000                        ?_low_isr 0014               filterFce@tlacitko 001B  
                      _LATDbits 0F8C                        _IPR1bits 0F9F                        _PIE1bits 0F9D  
                  ??_dekoderFce 001E                        _PIR1bits 0F9E                        _RCONbits 0FD0  
                    _ADCON0bits 0FC2                      ?_filterFce 001B              __end_of_dekoderFce 11F6  
                   _INTCON2bits 0FF1                      _ANCON1bits 0FC2                        __Hrparam 0000  
                      __Lrparam 0000                   pametFce@input 001C                        _high_isr 0008  
                      _pametFce 12EC                        isa$xinst 0000                        int$flags 0021  
                   ??_filterFce 001D                     dekoderFce@A 001C                     dekoderFce@B 001D  
                   _OSCTUNEbits 0F9B                      _INTCONbits 0FF2                        _vysledek 0001  
                      intlevel1 0000                        intlevel2 0000                      _OSCCONbits 0FD3  
                    _WDTCONbits 0FC0        ??_preambleInitialization 001B  
