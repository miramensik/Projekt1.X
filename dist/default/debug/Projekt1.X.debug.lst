

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Dec 21 17:00:56 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F87J11
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    18                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Generated 23/03/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F87J11 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000000                     _ADCON1	set	4033
    59   000000                     _ADRESL	set	4035
    60   000000                     _ADRESH	set	4036
    61   000000                     _ADCON0	set	4034
    62   000000                     _ANCON1bits	set	4034
    63   000000                     _TRISFbits	set	3991
    64   000000                     _T0CONbits	set	4053
    65   000000                     _PORTFbits	set	3973
    66   000000                     _PORTJbits	set	3976
    67   000000                     _LATDbits	set	3980
    68   000000                     _TRISD	set	3989
    69   000000                     _TRISJ	set	3994
    70   000000                     _PIR1bits	set	3998
    71   000000                     _ADCON0bits	set	4034
    72   000000                     _TMR0L	set	4054
    73   000000                     _TMR0H	set	4055
    74   000000                     _INTCONbits	set	4082
    75   000000                     _PORTH	set	3975
    76   000000                     _INTCON2bits	set	4081
    77   000000                     _IPR1bits	set	3999
    78   000000                     _WDTCONbits	set	4032
    79   000000                     _RCONbits	set	4048
    80   000000                     _OSCCONbits	set	4051
    81   000000                     _T0CON	set	4053
    82   000000                     _OSCTUNEbits	set	3995
    83   000000                     _PIE1bits	set	3997
    84   000000                     _TRISF	set	3991
    85   000000                     _TRISH	set	3993
    86                           
    87                           ; #config settings
    88                           
    89                           	psect	cinit
    90   0018BA                     __pcinit:
    91                           	callstack 0
    92   0018BA                     start_initialization:
    93                           	callstack 0
    94   0018BA                     __initialization:
    95                           	callstack 0
    96                           
    97                           ; Clear objects allocated to COMRAM (33 bytes)
    98   0018BA  EE00  F001         	lfsr	0,__pbssCOMRAM
    99   0018BE  0E21               	movlw	33
   100   0018C0                     clear_0:
   101   0018C0  6AEE               	clrf	postinc0,c
   102   0018C2  06E8               	decf	wreg,f,c
   103   0018C4  E1FD               	bnz	clear_0
   104   0018C6                     end_of_initialization:
   105                           	callstack 0
   106   0018C6                     __end_of__initialization:
   107                           	callstack 0
   108   0018C6  9033               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   109   0018C8  9233               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   110   0018CA  0100               	movlb	0
   111   0018CC  EF74  F009         	goto	_main	;jump to C main() function
   112                           
   113                           	psect	bssCOMRAM
   114   000001                     __pbssCOMRAM:
   115                           	callstack 0
   116   000001                     _adKalkulace:
   117                           	callstack 0
   118   000001                     	ds	4
   119   000005                     _pulzBack:
   120                           	callstack 0
   121   000005                     	ds	2
   122   000007                     _mezera:
   123                           	callstack 0
   124   000007                     	ds	2
   125   000009                     _pulz:
   126                           	callstack 0
   127   000009                     	ds	2
   128   00000B                     _komparace:
   129                           	callstack 0
   130   00000B                     	ds	2
   131   00000D                     _vysledek:
   132                           	callstack 0
   133   00000D                     	ds	2
   134   00000F                     _vystup:
   135                           	callstack 0
   136   00000F                     	ds	1
   137   000010                     _novyPulz:
   138                           	callstack 0
   139   000010                     	ds	1
   140   000011                     _ADRhotovo:
   141                           	callstack 0
   142   000011                     	ds	1
   143   000012                     _is10ms:
   144                           	callstack 0
   145   000012                     	ds	1
   146   000013                     _is1ms:
   147                           	callstack 0
   148   000013                     	ds	1
   149   000014                     _dekoderAB:
   150                           	callstack 0
   151   000014                     	ds	2
   152   000016                     _S3Filtr:
   153                           	callstack 0
   154   000016                     	ds	2
   155   000018                     _S4Filtr:
   156                           	callstack 0
   157   000018                     	ds	2
   158   00001A                     _S5B:
   159                           	callstack 0
   160   00001A                     	ds	2
   161   00001C                     _S5A:
   162                           	callstack 0
   163   00001C                     	ds	2
   164   00001E                     _S3:
   165                           	callstack 0
   166   00001E                     	ds	2
   167   000020                     _S4:
   168                           	callstack 0
   169   000020                     	ds	2
   170                           
   171                           	psect	cstackCOMRAM
   172   000022                     __pcstackCOMRAM:
   173                           	callstack 0
   174   000022                     ??_low_isr:
   175                           
   176                           ; 1 bytes @ 0x0
   177   000022                     	ds	3
   178   000025                     ?___lmul:
   179                           	callstack 0
   180   000025                     ?___aldiv:
   181                           	callstack 0
   182   000025                     filterFce@tlacitko:
   183                           	callstack 0
   184   000025                     pametFce@tlacitko:
   185                           	callstack 0
   186   000025                     dekoderFce@tlacitko:
   187                           	callstack 0
   188   000025                     ___lmul@multiplier:
   189                           	callstack 0
   190   000025                     ___aldiv@dividend:
   191                           	callstack 0
   192                           
   193                           ; 4 bytes @ 0x3
   194   000025                     	ds	1
   195   000026                     filterFce@vstup:
   196                           	callstack 0
   197   000026                     pametFce@input:
   198                           	callstack 0
   199   000026                     dekoderFce@A:
   200                           	callstack 0
   201                           
   202                           ; 1 bytes @ 0x4
   203   000026                     	ds	1
   204   000027                     ??_filterFce:
   205   000027                     ??_pametFce:
   206   000027                     dekoderFce@B:
   207                           	callstack 0
   208                           
   209                           ; 1 bytes @ 0x5
   210   000027                     	ds	1
   211   000028                     ??_dekoderFce:
   212                           
   213                           ; 1 bytes @ 0x6
   214   000028                     	ds	1
   215   000029                     filterFce@dalsiStav:
   216                           	callstack 0
   217   000029                     pametFce@dalsiStav:
   218                           	callstack 0
   219   000029                     ___lmul@multiplicand:
   220                           	callstack 0
   221   000029                     ___aldiv@divisor:
   222                           	callstack 0
   223                           
   224                           ; 4 bytes @ 0x7
   225   000029                     	ds	4
   226   00002D                     ___aldiv@counter:
   227                           	callstack 0
   228   00002D                     ___lmul@product:
   229                           	callstack 0
   230                           
   231                           ; 4 bytes @ 0xB
   232   00002D                     	ds	1
   233   00002E                     ___aldiv@sign:
   234                           	callstack 0
   235                           
   236                           ; 1 bytes @ 0xC
   237   00002E                     	ds	1
   238   00002F                     ___aldiv@quotient:
   239                           	callstack 0
   240                           
   241                           ; 4 bytes @ 0xD
   242   00002F                     	ds	4
   243   000033                     
   244                           ; 1 bytes @ 0x11
   245 ;;
   246 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   247 ;;
   248 ;; *************** function _main *****************
   249 ;; Defined at:
   250 ;;		line 76 in file "source/main.c"
   251 ;; Parameters:    Size  Location     Type
   252 ;;		None
   253 ;; Auto vars:     Size  Location     Type
   254 ;;		None
   255 ;; Return value:  Size  Location     Type
   256 ;;                  1    wreg      void 
   257 ;; Registers used:
   258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   259 ;; Tracked objects:
   260 ;;		On entry : 0/0
   261 ;;		On exit  : 0/0
   262 ;;		Unchanged: 0/0
   263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   268 ;;Total ram usage:        0 bytes
   269 ;; Hardware stack levels required when called: 3
   270 ;; This function calls:
   271 ;;		___aldiv
   272 ;;		___lmul
   273 ;;		_dekoderFce
   274 ;;		_filterFce
   275 ;;		_pametFce
   276 ;;		_preambleInitialization
   277 ;; This function is called by:
   278 ;;		Startup code after reset
   279 ;; This function uses a non-reentrant model
   280 ;;
   281                           
   282                           	psect	text0
   283   0012E8                     __ptext0:
   284                           	callstack 0
   285   0012E8                     _main:
   286                           	callstack 28
   287   0012E8                     
   288                           ;source/main.c: 79:     S4.stav = 0;
   289   0012E8  0E00               	movlw	0
   290   0012EA  6E20               	movwf	_S4^0,c
   291                           
   292                           ;source/main.c: 80:     S4.vystup = 0;
   293   0012EC  0E00               	movlw	0
   294   0012EE  6E21               	movwf	(_S4+1)^0,c
   295                           
   296                           ;source/main.c: 82:     S3.stav = 0;
   297   0012F0  0E00               	movlw	0
   298   0012F2  6E1E               	movwf	_S3^0,c
   299                           
   300                           ;source/main.c: 83:     S3.vystup = 0;
   301   0012F4  0E00               	movlw	0
   302   0012F6  6E1F               	movwf	(_S3+1)^0,c
   303                           
   304                           ;source/main.c: 85:     S5A.stav = 0;
   305   0012F8  0E00               	movlw	0
   306   0012FA  6E1C               	movwf	_S5A^0,c
   307                           
   308                           ;source/main.c: 86:     S5A.vystup = 0;
   309   0012FC  0E00               	movlw	0
   310   0012FE  6E1D               	movwf	(_S5A+1)^0,c
   311                           
   312                           ;source/main.c: 88:     S5B.stav = 0;
   313   001300  0E00               	movlw	0
   314   001302  6E1A               	movwf	_S5B^0,c
   315                           
   316                           ;source/main.c: 89:     S5B.vystup = 0;
   317   001304  0E00               	movlw	0
   318   001306  6E1B               	movwf	(_S5B+1)^0,c
   319                           
   320                           ;source/main.c: 91:     S4Filtr.stav = 0;
   321   001308  0E00               	movlw	0
   322   00130A  6E18               	movwf	_S4Filtr^0,c
   323                           
   324                           ;source/main.c: 92:     S4Filtr.vystup = 0;
   325   00130C  0E00               	movlw	0
   326   00130E  6E19               	movwf	(_S4Filtr+1)^0,c
   327                           
   328                           ;source/main.c: 94:     S3Filtr.stav = 0;
   329   001310  0E00               	movlw	0
   330   001312  6E16               	movwf	_S3Filtr^0,c
   331                           
   332                           ;source/main.c: 95:     S3Filtr.vystup = 0;
   333   001314  0E00               	movlw	0
   334   001316  6E17               	movwf	(_S3Filtr+1)^0,c
   335                           
   336                           ;source/main.c: 97:     dekoderAB.stav = 0;
   337   001318  0E00               	movlw	0
   338   00131A  6E14               	movwf	_dekoderAB^0,c
   339                           
   340                           ;source/main.c: 98:     dekoderAB.vystup = 0;
   341   00131C  0E00               	movlw	0
   342   00131E  6E15               	movwf	(_dekoderAB+1)^0,c
   343                           
   344                           ;source/main.c: 100:     ADRhotovo = 0;
   345   001320  0E00               	movlw	0
   346   001322  6E11               	movwf	_ADRhotovo^0,c
   347   001324                     
   348                           ;source/main.c: 104:   preambleInitialization();
   349   001324  EC3B  F00C         	call	_preambleInitialization	;wreg free
   350   001328                     l1504:
   351                           
   352                           ;source/main.c: 110:   {;source/main.c: 113:     if(ADRhotovo == 1){
   353   001328  0411               	decf	_ADRhotovo^0,w,c
   354   00132A  A4D8               	btfss	status,2,c
   355   00132C  EF9A  F009         	goto	u1001
   356   001330  EF9C  F009         	goto	u1000
   357   001334                     u1001:
   358   001334  EF1A  F00A         	goto	l72
   359   001338                     u1000:
   360   001338                     
   361                           ;source/main.c: 114:         adKalkulace = (long)vysledek;
   362   001338  C00D  F001         	movff	_vysledek,_adKalkulace
   363   00133C  C00E  F002         	movff	_vysledek+1,_adKalkulace+1
   364   001340  0E00               	movlw	0
   365   001342  BE02               	btfsc	(_adKalkulace+1)^0,7,c
   366   001344  0EFF               	movlw	-1
   367   001346  6E03               	movwf	(_adKalkulace+2)^0,c
   368   001348  6E04               	movwf	(_adKalkulace+3)^0,c
   369   00134A                     
   370                           ;source/main.c: 115:         if(adKalkulace > 1000){
   371   00134A  BE04               	btfsc	(_adKalkulace+3)^0,7,c
   372   00134C  EFB4  F009         	goto	u1011
   373   001350  5004               	movf	(_adKalkulace+3)^0,w,c
   374   001352  1003               	iorwf	(_adKalkulace+2)^0,w,c
   375   001354  E10B               	bnz	u1010
   376   001356  0EE9               	movlw	233
   377   001358  5C01               	subwf	_adKalkulace^0,w,c
   378   00135A  0E03               	movlw	3
   379   00135C  5802               	subwfb	(_adKalkulace+1)^0,w,c
   380   00135E  A0D8               	btfss	status,0,c
   381   001360  EFB4  F009         	goto	u1011
   382   001364  EFB6  F009         	goto	u1010
   383   001368                     u1011:
   384   001368  EFBE  F009         	goto	l1512
   385   00136C                     u1010:
   386   00136C                     
   387                           ;source/main.c: 116:             adKalkulace = 1000;
   388   00136C  0EE8               	movlw	232
   389   00136E  6E01               	movwf	_adKalkulace^0,c
   390   001370  0E03               	movlw	3
   391   001372  6E02               	movwf	(_adKalkulace+1)^0,c
   392   001374  0E00               	movlw	0
   393   001376  6E03               	movwf	(_adKalkulace+2)^0,c
   394   001378  0E00               	movlw	0
   395   00137A  6E04               	movwf	(_adKalkulace+3)^0,c
   396   00137C                     l1512:
   397                           
   398                           ;source/main.c: 118:         if(adKalkulace < 50){
   399   00137C  BE04               	btfsc	(_adKalkulace+3)^0,7,c
   400   00137E  EFCE  F009         	goto	u1020
   401   001382  5004               	movf	(_adKalkulace+3)^0,w,c
   402   001384  1003               	iorwf	(_adKalkulace+2)^0,w,c
   403   001386  1002               	iorwf	(_adKalkulace+1)^0,w,c
   404   001388  E107               	bnz	u1021
   405   00138A  0E32               	movlw	50
   406   00138C  5C01               	subwf	_adKalkulace^0,w,c
   407   00138E  B0D8               	btfsc	status,0,c
   408   001390  EFCC  F009         	goto	u1021
   409   001394  EFCE  F009         	goto	u1020
   410   001398                     u1021:
   411   001398  EFD6  F009         	goto	l1516
   412   00139C                     u1020:
   413   00139C                     
   414                           ;source/main.c: 119:             adKalkulace = 50;
   415   00139C  0E32               	movlw	50
   416   00139E  6E01               	movwf	_adKalkulace^0,c
   417   0013A0  0E00               	movlw	0
   418   0013A2  6E02               	movwf	(_adKalkulace+1)^0,c
   419   0013A4  0E00               	movlw	0
   420   0013A6  6E03               	movwf	(_adKalkulace+2)^0,c
   421   0013A8  0E00               	movlw	0
   422   0013AA  6E04               	movwf	(_adKalkulace+3)^0,c
   423   0013AC                     l1516:
   424                           
   425                           ;source/main.c: 121:         adKalkulace = adKalkulace - 50;
   426   0013AC  0ECE               	movlw	206
   427   0013AE  2401               	addwf	_adKalkulace^0,w,c
   428   0013B0  6E01               	movwf	_adKalkulace^0,c
   429   0013B2  0EFF               	movlw	255
   430   0013B4  2002               	addwfc	(_adKalkulace+1)^0,w,c
   431   0013B6  6E02               	movwf	(_adKalkulace+1)^0,c
   432   0013B8  0EFF               	movlw	255
   433   0013BA  2003               	addwfc	(_adKalkulace+2)^0,w,c
   434   0013BC  6E03               	movwf	(_adKalkulace+2)^0,c
   435   0013BE  0EFF               	movlw	255
   436   0013C0  2004               	addwfc	(_adKalkulace+3)^0,w,c
   437   0013C2  6E04               	movwf	(_adKalkulace+3)^0,c
   438   0013C4                     
   439                           ;source/main.c: 122:         adKalkulace = adKalkulace * 255;
   440   0013C4  C001  F025         	movff	_adKalkulace,___lmul@multiplier
   441   0013C8  C002  F026         	movff	_adKalkulace+1,___lmul@multiplier+1
   442   0013CC  C003  F027         	movff	_adKalkulace+2,___lmul@multiplier+2
   443   0013D0  C004  F028         	movff	_adKalkulace+3,___lmul@multiplier+3
   444   0013D4  0EFF               	movlw	255
   445   0013D6  6E29               	movwf	___lmul@multiplicand^0,c
   446   0013D8  0E00               	movlw	0
   447   0013DA  6E2A               	movwf	(___lmul@multiplicand+1)^0,c
   448   0013DC  0E00               	movlw	0
   449   0013DE  6E2B               	movwf	(___lmul@multiplicand+2)^0,c
   450   0013E0  0E00               	movlw	0
   451   0013E2  6E2C               	movwf	(___lmul@multiplicand+3)^0,c
   452   0013E4  EC06  F00C         	call	___lmul	;wreg free
   453   0013E8  C025  F001         	movff	?___lmul,_adKalkulace
   454   0013EC  C026  F002         	movff	?___lmul+1,_adKalkulace+1
   455   0013F0  C027  F003         	movff	?___lmul+2,_adKalkulace+2
   456   0013F4  C028  F004         	movff	?___lmul+3,_adKalkulace+3
   457   0013F8                     
   458                           ;source/main.c: 123:         adKalkulace = adKalkulace / (950);
   459   0013F8  C001  F025         	movff	_adKalkulace,___aldiv@dividend
   460   0013FC  C002  F026         	movff	_adKalkulace+1,___aldiv@dividend+1
   461   001400  C003  F027         	movff	_adKalkulace+2,___aldiv@dividend+2
   462   001404  C004  F028         	movff	_adKalkulace+3,___aldiv@dividend+3
   463   001408  0EB6               	movlw	182
   464   00140A  6E29               	movwf	___aldiv@divisor^0,c
   465   00140C  0E03               	movlw	3
   466   00140E  6E2A               	movwf	(___aldiv@divisor+1)^0,c
   467   001410  0E00               	movlw	0
   468   001412  6E2B               	movwf	(___aldiv@divisor+2)^0,c
   469   001414  0E00               	movlw	0
   470   001416  6E2C               	movwf	(___aldiv@divisor+3)^0,c
   471   001418  EC96  F00A         	call	___aldiv	;wreg free
   472   00141C  C025  F001         	movff	?___aldiv,_adKalkulace
   473   001420  C026  F002         	movff	?___aldiv+1,_adKalkulace+1
   474   001424  C027  F003         	movff	?___aldiv+2,_adKalkulace+2
   475   001428  C028  F004         	movff	?___aldiv+3,_adKalkulace+3
   476   00142C                     
   477                           ;source/main.c: 125:         vystup = (unsigned char)adKalkulace;
   478   00142C  C001  F00F         	movff	_adKalkulace,_vystup
   479   001430                     
   480                           ;source/main.c: 126:         ADRhotovo = 0;
   481   001430  0E00               	movlw	0
   482   001432  6E11               	movwf	_ADRhotovo^0,c
   483   001434                     l72:
   484                           
   485                           ;source/main.c: 129:       if(is1ms == 1){
   486   001434  0413               	decf	_is1ms^0,w,c
   487   001436  A4D8               	btfss	status,2,c
   488   001438  EF20  F00A         	goto	u1031
   489   00143C  EF22  F00A         	goto	u1030
   490   001440                     u1031:
   491   001440  EF58  F00A         	goto	l1530
   492   001444                     u1030:
   493   001444                     
   494                           ;source/main.c: 132:    filterFce(&S4, PORTJbits.RJ7);
   495   001444  0E20               	movlw	low _S4
   496   001446  6E25               	movwf	filterFce@tlacitko^0,c
   497   001448  0E00               	movlw	0
   498   00144A  BE88               	btfsc	136,7,c	;volatile
   499   00144C  0E01               	movlw	1
   500   00144E  6E26               	movwf	filterFce@vstup^0,c
   501   001450  EC1C  F00B         	call	_filterFce	;wreg free
   502                           
   503                           ;source/main.c: 133:    filterFce(&S3, PORTJbits.RJ6);
   504   001454  0E1E               	movlw	low _S3
   505   001456  6E25               	movwf	filterFce@tlacitko^0,c
   506   001458  0E00               	movlw	0
   507   00145A  BC88               	btfsc	136,6,c	;volatile
   508   00145C  0E01               	movlw	1
   509   00145E  6E26               	movwf	filterFce@vstup^0,c
   510   001460  EC1C  F00B         	call	_filterFce	;wreg free
   511                           
   512                           ;source/main.c: 134:   pametFce(&S4Filtr, S4.vystup);
   513   001464  0E18               	movlw	low _S4Filtr
   514   001466  6E25               	movwf	pametFce@tlacitko^0,c
   515   001468  C021  F026         	movff	_S4+1,pametFce@input
   516   00146C  EC97  F00B         	call	_pametFce	;wreg free
   517                           
   518                           ;source/main.c: 135:   pametFce(&S3Filtr, S3.vystup);
   519   001470  0E16               	movlw	low _S3Filtr
   520   001472  6E25               	movwf	pametFce@tlacitko^0,c
   521   001474  C01F  F026         	movff	_S3+1,pametFce@input
   522   001478  EC97  F00B         	call	_pametFce	;wreg free
   523                           
   524                           ;source/main.c: 136:   filterFce(&S5A, PORTJbits.RJ0);
   525   00147C  0E1C               	movlw	low _S5A
   526   00147E  6E25               	movwf	filterFce@tlacitko^0,c
   527   001480  0E00               	movlw	0
   528   001482  B088               	btfsc	136,0,c	;volatile
   529   001484  0E01               	movlw	1
   530   001486  6E26               	movwf	filterFce@vstup^0,c
   531   001488  EC1C  F00B         	call	_filterFce	;wreg free
   532                           
   533                           ;source/main.c: 137:   filterFce(&S5B, PORTJbits.RJ1);
   534   00148C  0E1A               	movlw	low _S5B
   535   00148E  6E25               	movwf	filterFce@tlacitko^0,c
   536   001490  0E00               	movlw	0
   537   001492  B288               	btfsc	136,1,c	;volatile
   538   001494  0E01               	movlw	1
   539   001496  6E26               	movwf	filterFce@vstup^0,c
   540   001498  EC1C  F00B         	call	_filterFce	;wreg free
   541                           
   542                           ;source/main.c: 138:   dekoderFce(&dekoderAB, S5A.vystup, S5B.vystup);
   543   00149C  0E14               	movlw	low _dekoderAB
   544   00149E  6E25               	movwf	dekoderFce@tlacitko^0,c
   545   0014A0  C01D  F026         	movff	_S5A+1,dekoderFce@A
   546   0014A4  C01B  F027         	movff	_S5B+1,dekoderFce@B
   547   0014A8  EC01  F008         	call	_dekoderFce	;wreg free
   548   0014AC                     
   549                           ;source/main.c: 141:    is1ms = 0;
   550   0014AC  0E00               	movlw	0
   551   0014AE  6E13               	movwf	_is1ms^0,c
   552   0014B0                     l1530:
   553                           
   554                           ;source/main.c: 143:   LATDbits.LATD7 = S4Filtr.vystup;
   555   0014B0  B019               	btfsc	(_S4Filtr+1)^0,0,c
   556   0014B2  D002               	bra	u1045
   557   0014B4  9E8C               	bcf	140,7,c	;volatile
   558   0014B6  D001               	bra	u1046
   559   0014B8                     u1045:
   560   0014B8  8E8C               	bsf	140,7,c	;volatile
   561   0014BA                     u1046:
   562   0014BA                     
   563                           ;source/main.c: 144:   LATDbits.LATD4 = S3Filtr.vystup;
   564   0014BA  B017               	btfsc	(_S3Filtr+1)^0,0,c
   565   0014BC  D002               	bra	u1055
   566   0014BE  988C               	bcf	140,4,c	;volatile
   567   0014C0  D001               	bra	u1056
   568   0014C2                     u1055:
   569   0014C2  888C               	bsf	140,4,c	;volatile
   570   0014C4                     u1056:
   571   0014C4                     
   572                           ;source/main.c: 145:   LATDbits.LATD5 = S5A.vystup;
   573   0014C4  B01D               	btfsc	(_S5A+1)^0,0,c
   574   0014C6  D002               	bra	u1065
   575   0014C8  9A8C               	bcf	140,5,c	;volatile
   576   0014CA  D001               	bra	u1066
   577   0014CC                     u1065:
   578   0014CC  8A8C               	bsf	140,5,c	;volatile
   579   0014CE                     u1066:
   580   0014CE                     
   581                           ;source/main.c: 146:   LATDbits.LATD4 = S5B.vystup;
   582   0014CE  B01B               	btfsc	(_S5B+1)^0,0,c
   583   0014D0  D002               	bra	u1075
   584   0014D2  988C               	bcf	140,4,c	;volatile
   585   0014D4  D001               	bra	u1076
   586   0014D6                     u1075:
   587   0014D6  888C               	bsf	140,4,c	;volatile
   588   0014D8                     u1076:
   589   0014D8                     
   590                           ;source/main.c: 149:  if(dekoderAB.vystup == 255){
   591   0014D8  2815               	incf	(_dekoderAB+1)^0,w,c
   592   0014DA  A4D8               	btfss	status,2,c
   593   0014DC  EF72  F00A         	goto	u1081
   594   0014E0  EF74  F00A         	goto	u1080
   595   0014E4                     u1081:
   596   0014E4  EF77  F00A         	goto	l1542
   597   0014E8                     u1080:
   598   0014E8                     
   599                           ;source/main.c: 150:      PORTFbits.RF1 = 1;
   600   0014E8  8285               	bsf	133,1,c	;volatile
   601                           
   602                           ;source/main.c: 151:  }
   603   0014EA  EF84  F00A         	goto	l1546
   604   0014EE                     l1542:
   605   0014EE  5015               	movf	(_dekoderAB+1)^0,w,c
   606   0014F0  A4D8               	btfss	status,2,c
   607   0014F2  EF7D  F00A         	goto	u1091
   608   0014F6  EF7F  F00A         	goto	u1090
   609   0014FA                     u1091:
   610   0014FA  EF82  F00A         	goto	l78
   611   0014FE                     u1090:
   612   0014FE                     
   613                           ;source/main.c: 153:      PORTFbits.RF2 = 1;
   614   0014FE  8485               	bsf	133,2,c	;volatile
   615                           
   616                           ;source/main.c: 154:  }
   617   001500  EF84  F00A         	goto	l1546
   618   001504                     l78:
   619                           
   620                           ;source/main.c: 156:      PORTFbits.RF1 = 0;
   621   001504  9285               	bcf	133,1,c	;volatile
   622                           
   623                           ;source/main.c: 157:      PORTFbits.RF2 = 0;
   624   001506  9485               	bcf	133,2,c	;volatile
   625   001508                     l1546:
   626                           
   627                           ;source/main.c: 161:      if(S4Filtr.vystup == 1){
   628   001508  0419               	decf	(_S4Filtr+1)^0,w,c
   629   00150A  A4D8               	btfss	status,2,c
   630   00150C  EF8A  F00A         	goto	u1101
   631   001510  EF8C  F00A         	goto	u1100
   632   001514                     u1101:
   633   001514  EF90  F00A         	goto	l80
   634   001518                     u1100:
   635   001518                     
   636                           ;source/main.c: 162:          PORTH = vystup;
   637   001518  C00F  FF87         	movff	_vystup,3975	;volatile
   638                           
   639                           ;source/main.c: 163:      }
   640   00151C  EF94  F009         	goto	l1504
   641   001520                     l80:
   642                           
   643                           ;source/main.c: 166:          PORTH = dekoderAB.vystup;
   644   001520  C015  FF87         	movff	_dekoderAB+1,3975	;volatile
   645   001524  EF94  F009         	goto	l1504
   646   001528  EF4B  F000         	goto	start
   647   00152C                     __end_of_main:
   648                           	callstack 0
   649                           
   650 ;; *************** function _preambleInitialization *****************
   651 ;; Defined at:
   652 ;;		line 19 in file "source/preambleInitialization.c"
   653 ;; Parameters:    Size  Location     Type
   654 ;;		None
   655 ;; Auto vars:     Size  Location     Type
   656 ;;		None
   657 ;; Return value:  Size  Location     Type
   658 ;;                  1    wreg      void 
   659 ;; Registers used:
   660 ;;		wreg, status,2
   661 ;; Tracked objects:
   662 ;;		On entry : 0/0
   663 ;;		On exit  : 0/0
   664 ;;		Unchanged: 0/0
   665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   670 ;;Total ram usage:        0 bytes
   671 ;; Hardware stack levels used: 1
   672 ;; Hardware stack levels required when called: 2
   673 ;; This function calls:
   674 ;;		Nothing
   675 ;; This function is called by:
   676 ;;		_main
   677 ;; This function uses a non-reentrant model
   678 ;;
   679                           
   680                           	psect	text1
   681   001876                     __ptext1:
   682                           	callstack 0
   683   001876                     _preambleInitialization:
   684                           	callstack 28
   685   001876                     
   686                           ;source/preambleInitialization.c: 21:     T0CON = 0b10001000;
   687   001876  0E88               	movlw	136
   688   001878  6ED5               	movwf	213,c	;volatile
   689   00187A                     
   690                           ;source/preambleInitialization.c: 22:     T0CONbits.PSA = 1;
   691   00187A  86D5               	bsf	213,3,c	;volatile
   692   00187C                     
   693                           ;source/preambleInitialization.c: 23:     T0CONbits.TMR0ON = 1;
   694   00187C  8ED5               	bsf	213,7,c	;volatile
   695                           
   696                           ;source/preambleInitialization.c: 25:     TMR0H = 0xB1;
   697   00187E  0EB1               	movlw	177
   698   001880  6ED7               	movwf	215,c	;volatile
   699                           
   700                           ;source/preambleInitialization.c: 26:     TMR0L = 0xDF;
   701   001882  0EDF               	movlw	223
   702   001884  6ED6               	movwf	214,c	;volatile
   703   001886                     
   704                           ;source/preambleInitialization.c: 28:     INTCON2bits.TMR0IP = 0;
   705   001886  94F1               	bcf	241,2,c	;volatile
   706   001888                     
   707                           ;source/preambleInitialization.c: 29:     INTCONbits.TMR0IE = 1;
   708   001888  8AF2               	bsf	242,5,c	;volatile
   709   00188A                     
   710                           ;source/preambleInitialization.c: 31:     INTCONbits.GIEH = 1;
   711   00188A  8EF2               	bsf	242,7,c	;volatile
   712   00188C                     
   713                           ;source/preambleInitialization.c: 32:     INTCONbits.GIEL = 1;
   714   00188C  8CF2               	bsf	242,6,c	;volatile
   715   00188E                     
   716                           ;source/preambleInitialization.c: 34:     TRISJ = 0xFF;
   717   00188E  689A               	setf	154,c	;volatile
   718                           
   719                           ;source/preambleInitialization.c: 35:     TRISD = 0x00;
   720   001890  0E00               	movlw	0
   721   001892  6E95               	movwf	149,c	;volatile
   722                           
   723                           ;source/preambleInitialization.c: 36:     TRISH = 0x00;
   724   001894  0E00               	movlw	0
   725   001896  6E99               	movwf	153,c	;volatile
   726                           
   727                           ;source/preambleInitialization.c: 37:     TRISF = 0x00;
   728   001898  0E00               	movlw	0
   729   00189A  6E97               	movwf	151,c	;volatile
   730   00189C                     
   731                           ;source/preambleInitialization.c: 40:     TRISFbits.RF3 = 1;
   732   00189C  8697               	bsf	151,3,c	;volatile
   733   00189E                     
   734                           ;source/preambleInitialization.c: 41:     WDTCONbits.ADSHR = 1;
   735   00189E  88C0               	bsf	192,4,c	;volatile
   736   0018A0                     
   737                           ;source/preambleInitialization.c: 42:     ANCON1bits.PCFG8 = 0;
   738   0018A0  90C2               	bcf	194,0,c	;volatile
   739   0018A2                     
   740                           ;source/preambleInitialization.c: 43:     WDTCONbits.ADSHR = 0;
   741   0018A2  98C0               	bcf	192,4,c	;volatile
   742                           
   743                           ;source/preambleInitialization.c: 45:     ADCON1 = 0b10101010;
   744   0018A4  0EAA               	movlw	170
   745   0018A6  6EC1               	movwf	193,c	;volatile
   746                           
   747                           ;source/preambleInitialization.c: 46:     ADCON0 = 0b00100001;
   748   0018A8  0E21               	movlw	33
   749   0018AA  6EC2               	movwf	194,c	;volatile
   750   0018AC                     
   751                           ;source/preambleInitialization.c: 48:     PIE1bits.ADIE = 1;
   752   0018AC  8C9D               	bsf	157,6,c	;volatile
   753   0018AE                     
   754                           ;source/preambleInitialization.c: 49:     IPR1bits.ADIP = 0;
   755   0018AE  9C9F               	bcf	159,6,c	;volatile
   756                           
   757                           ;source/preambleInitialization.c: 80:     OSCCONbits.SCS = 0;
   758   0018B0  0EFC               	movlw	-4
   759   0018B2  16D3               	andwf	211,f,c	;volatile
   760   0018B4                     
   761                           ;source/preambleInitialization.c: 82:     OSCTUNEbits.PLLEN = 1;
   762   0018B4  8C9B               	bsf	155,6,c	;volatile
   763   0018B6                     
   764                           ;source/preambleInitialization.c: 87:     RCONbits.IPEN = 1;
   765   0018B6  8ED0               	bsf	208,7,c	;volatile
   766   0018B8  0012               	return		;funcret
   767   0018BA                     __end_of_preambleInitialization:
   768                           	callstack 0
   769                           
   770 ;; *************** function _pametFce *****************
   771 ;; Defined at:
   772 ;;		line 14 in file "header/pamet.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;  tlacitko        1    3[COMRAM] PTR struct .
   775 ;;		 -> S3Filtr(2), S4Filtr(2), 
   776 ;;  input           1    4[COMRAM] unsigned char 
   777 ;; Auto vars:     Size  Location     Type
   778 ;;  dalsiStav       1    7[COMRAM] unsigned char 
   779 ;; Return value:  Size  Location     Type
   780 ;;                  1    wreg      void 
   781 ;; Registers used:
   782 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   783 ;; Tracked objects:
   784 ;;		On entry : 0/0
   785 ;;		On exit  : 0/0
   786 ;;		Unchanged: 0/0
   787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   788 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   789 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   790 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   791 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   792 ;;Total ram usage:        5 bytes
   793 ;; Hardware stack levels used: 1
   794 ;; Hardware stack levels required when called: 2
   795 ;; This function calls:
   796 ;;		Nothing
   797 ;; This function is called by:
   798 ;;		_main
   799 ;; This function uses a non-reentrant model
   800 ;;
   801                           
   802                           	psect	text2
   803   00172E                     __ptext2:
   804                           	callstack 0
   805   00172E                     _pametFce:
   806                           	callstack 28
   807   00172E                     
   808                           ;header/pamet.c: 15:     char dalsiStav = s0;
   809   00172E  0E00               	movlw	0
   810   001730  6E29               	movwf	pametFce@dalsiStav^0,c
   811                           
   812                           ;header/pamet.c: 17:     switch(tlacitko->stav){
   813   001732  EFE0  F00B         	goto	l1348
   814   001736                     l1318:
   815                           
   816                           ;header/pamet.c: 19:             if(input == 0){
   817   001736  5026               	movf	pametFce@input^0,w,c
   818   001738  A4D8               	btfss	status,2,c
   819   00173A  EFA1  F00B         	goto	u641
   820   00173E  EFA3  F00B         	goto	u640
   821   001742                     u641:
   822   001742  EFA7  F00B         	goto	l1322
   823   001746                     u640:
   824   001746                     
   825                           ;header/pamet.c: 20:                 dalsiStav = s1;
   826   001746  0E01               	movlw	1
   827   001748  6E29               	movwf	pametFce@dalsiStav^0,c
   828                           
   829                           ;header/pamet.c: 21:             }else{
   830   00174A  EF00  F00C         	goto	l1350
   831   00174E                     l1322:
   832                           
   833                           ;header/pamet.c: 22:                 dalsiStav = s0;
   834   00174E  0E00               	movlw	0
   835   001750  6E29               	movwf	pametFce@dalsiStav^0,c
   836   001752  EF00  F00C         	goto	l1350
   837   001756                     l1324:
   838                           
   839                           ;header/pamet.c: 27:             if(input == 0){
   840   001756  5026               	movf	pametFce@input^0,w,c
   841   001758  A4D8               	btfss	status,2,c
   842   00175A  EFB1  F00B         	goto	u651
   843   00175E  EFB3  F00B         	goto	u650
   844   001762                     u651:
   845   001762  EFBD  F00B         	goto	l1330
   846   001766                     u650:
   847   001766                     
   848                           ;header/pamet.c: 28:                 dalsiStav = s1;
   849   001766  0E01               	movlw	1
   850   001768  6E29               	movwf	pametFce@dalsiStav^0,c
   851   00176A                     
   852                           ;header/pamet.c: 29:                tlacitko->vystup = 0;
   853   00176A  5025               	movf	pametFce@tlacitko^0,w,c
   854   00176C  6ED9               	movwf	fsr2l,c
   855   00176E  6ADA               	clrf	fsr2h,c
   856   001770  0E01               	movlw	1
   857   001772  26D9               	addwf	fsr2l,f,c
   858   001774  6ADF               	clrf	indf2,c
   859                           
   860                           ;header/pamet.c: 30:             }else{
   861   001776  EF00  F00C         	goto	l1350
   862   00177A                     l1330:
   863                           
   864                           ;header/pamet.c: 31:                 dalsiStav = s2;
   865   00177A  0E02               	movlw	2
   866   00177C  6E29               	movwf	pametFce@dalsiStav^0,c
   867   00177E  EF00  F00C         	goto	l1350
   868   001782                     l1332:
   869                           
   870                           ;header/pamet.c: 36:             if(input == 0){
   871   001782  5026               	movf	pametFce@input^0,w,c
   872   001784  A4D8               	btfss	status,2,c
   873   001786  EFC7  F00B         	goto	u661
   874   00178A  EFC9  F00B         	goto	u660
   875   00178E                     u661:
   876   00178E  EFBD  F00B         	goto	l1330
   877   001792                     u660:
   878   001792                     
   879                           ;header/pamet.c: 37:                 dalsiStav = s3;
   880   001792  0E03               	movlw	3
   881   001794  6E29               	movwf	pametFce@dalsiStav^0,c
   882                           
   883                           ;header/pamet.c: 38:             }else{
   884   001796  EF00  F00C         	goto	l1350
   885   00179A                     l1338:
   886                           
   887                           ;header/pamet.c: 44:             if(input == 0){
   888   00179A  5026               	movf	pametFce@input^0,w,c
   889   00179C  A4D8               	btfss	status,2,c
   890   00179E  EFD3  F00B         	goto	u671
   891   0017A2  EFD5  F00B         	goto	u670
   892   0017A6                     u671:
   893   0017A6  EFA7  F00B         	goto	l1322
   894   0017AA                     u670:
   895   0017AA                     
   896                           ;header/pamet.c: 45:                 dalsiStav = s3;
   897   0017AA  0E03               	movlw	3
   898   0017AC  6E29               	movwf	pametFce@dalsiStav^0,c
   899   0017AE                     
   900                           ;header/pamet.c: 46:                 tlacitko->vystup = 1;
   901   0017AE  5025               	movf	pametFce@tlacitko^0,w,c
   902   0017B0  6ED9               	movwf	fsr2l,c
   903   0017B2  6ADA               	clrf	fsr2h,c
   904   0017B4  0E01               	movlw	1
   905   0017B6  26D9               	addwf	fsr2l,f,c
   906   0017B8  0E01               	movlw	1
   907   0017BA  6EDF               	movwf	indf2,c
   908                           
   909                           ;header/pamet.c: 47:             }else{
   910   0017BC  EF00  F00C         	goto	l1350
   911   0017C0                     l1348:
   912   0017C0  5025               	movf	pametFce@tlacitko^0,w,c
   913   0017C2  6ED9               	movwf	fsr2l,c
   914   0017C4  6ADA               	clrf	fsr2h,c
   915   0017C6  50DF               	movf	indf2,w,c
   916   0017C8  6E27               	movwf	??_pametFce^0,c
   917   0017CA  6A28               	clrf	(??_pametFce+1)^0,c
   918                           
   919                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   920                           ; Switch size 1, requested type "simple"
   921                           ; Number of cases is 1, Range of values is 0 to 0
   922                           ; switch strategies available:
   923                           ; Name         Instructions Cycles
   924                           ; simple_byte            4     3 (average)
   925                           ;	Chosen strategy is simple_byte
   926   0017CC  5028               	movf	(??_pametFce+1)^0,w,c
   927   0017CE  0A00               	xorlw	0	; case 0
   928   0017D0  B4D8               	btfsc	status,2,c
   929   0017D2  EFED  F00B         	goto	l1584
   930   0017D6  EF00  F00C         	goto	l1350
   931   0017DA                     l1584:
   932                           
   933                           ; Switch size 1, requested type "simple"
   934                           ; Number of cases is 4, Range of values is 0 to 3
   935                           ; switch strategies available:
   936                           ; Name         Instructions Cycles
   937                           ; simple_byte           13     7 (average)
   938                           ;	Chosen strategy is simple_byte
   939   0017DA  5027               	movf	??_pametFce^0,w,c
   940   0017DC  0A00               	xorlw	0	; case 0
   941   0017DE  B4D8               	btfsc	status,2,c
   942   0017E0  EF9B  F00B         	goto	l1318
   943   0017E4  0A01               	xorlw	1	; case 1
   944   0017E6  B4D8               	btfsc	status,2,c
   945   0017E8  EFAB  F00B         	goto	l1324
   946   0017EC  0A03               	xorlw	3	; case 2
   947   0017EE  B4D8               	btfsc	status,2,c
   948   0017F0  EFC1  F00B         	goto	l1332
   949   0017F4  0A01               	xorlw	1	; case 3
   950   0017F6  B4D8               	btfsc	status,2,c
   951   0017F8  EFCD  F00B         	goto	l1338
   952   0017FC  EF00  F00C         	goto	l1350
   953   001800                     l1350:
   954                           
   955                           ;header/pamet.c: 54:       tlacitko->stav = dalsiStav;
   956   001800  5025               	movf	pametFce@tlacitko^0,w,c
   957   001802  6ED9               	movwf	fsr2l,c
   958   001804  6ADA               	clrf	fsr2h,c
   959   001806  C029  FFDF         	movff	pametFce@dalsiStav,indf2
   960   00180A  0012               	return		;funcret
   961   00180C                     __end_of_pametFce:
   962                           	callstack 0
   963                           
   964 ;; *************** function _filterFce *****************
   965 ;; Defined at:
   966 ;;		line 15 in file "source/filter.c"
   967 ;; Parameters:    Size  Location     Type
   968 ;;  tlacitko        1    3[COMRAM] PTR struct .
   969 ;;		 -> S5B(2), S5A(2), S3(2), S4(2), 
   970 ;;  vstup           1    4[COMRAM] unsigned char 
   971 ;; Auto vars:     Size  Location     Type
   972 ;;  dalsiStav       1    7[COMRAM] unsigned char 
   973 ;; Return value:  Size  Location     Type
   974 ;;                  1    wreg      void 
   975 ;; Registers used:
   976 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   977 ;; Tracked objects:
   978 ;;		On entry : 0/0
   979 ;;		On exit  : 0/0
   980 ;;		Unchanged: 0/0
   981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   982 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   983 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   984 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   985 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   986 ;;Total ram usage:        5 bytes
   987 ;; Hardware stack levels used: 1
   988 ;; Hardware stack levels required when called: 2
   989 ;; This function calls:
   990 ;;		Nothing
   991 ;; This function is called by:
   992 ;;		_main
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           	psect	text3
   997   001638                     __ptext3:
   998                           	callstack 0
   999   001638                     _filterFce:
  1000                           	callstack 28
  1001   001638                     
  1002                           ;source/filter.c: 15: void filterFce(typeFilter*tlacitko, char vstup);source/filter.c: 1
      +                          6: {;source/filter.c: 17: char dalsiStav = s0;
  1003   001638  0E00               	movlw	0
  1004   00163A  6E29               	movwf	filterFce@dalsiStav^0,c
  1005                           
  1006                           ;source/filter.c: 20:   switch(tlacitko->stav){
  1007   00163C  EF6D  F00B         	goto	l1308
  1008   001640                     l1272:
  1009                           
  1010                           ;source/filter.c: 22:           if(vstup == 1){
  1011   001640  0426               	decf	filterFce@vstup^0,w,c
  1012   001642  A4D8               	btfss	status,2,c
  1013   001644  EF26  F00B         	goto	u591
  1014   001648  EF28  F00B         	goto	u590
  1015   00164C                     u591:
  1016   00164C  EF2C  F00B         	goto	l1276
  1017   001650                     u590:
  1018   001650                     l1274:
  1019                           
  1020                           ;source/filter.c: 23:               dalsiStav = s1;
  1021   001650  0E01               	movlw	1
  1022   001652  6E29               	movwf	filterFce@dalsiStav^0,c
  1023                           
  1024                           ;source/filter.c: 24:           }else{
  1025   001654  EF91  F00B         	goto	l1310
  1026   001658                     l1276:
  1027                           
  1028                           ;source/filter.c: 25:               dalsiStav = s3;
  1029   001658  0E03               	movlw	3
  1030   00165A  6E29               	movwf	filterFce@dalsiStav^0,c
  1031   00165C  EF91  F00B         	goto	l1310
  1032   001660                     l1278:
  1033                           
  1034                           ;source/filter.c: 30:           if(vstup == 1){
  1035   001660  0426               	decf	filterFce@vstup^0,w,c
  1036   001662  A4D8               	btfss	status,2,c
  1037   001664  EF36  F00B         	goto	u601
  1038   001668  EF38  F00B         	goto	u600
  1039   00166C                     u601:
  1040   00166C  EF2C  F00B         	goto	l1276
  1041   001670                     u600:
  1042   001670                     
  1043                           ;source/filter.c: 31:               dalsiStav = s2;
  1044   001670  0E02               	movlw	2
  1045   001672  6E29               	movwf	filterFce@dalsiStav^0,c
  1046                           
  1047                           ;source/filter.c: 32:           }else{
  1048   001674  EF91  F00B         	goto	l1310
  1049   001678                     l1284:
  1050                           
  1051                           ;source/filter.c: 38:           if(vstup == 1){
  1052   001678  0426               	decf	filterFce@vstup^0,w,c
  1053   00167A  A4D8               	btfss	status,2,c
  1054   00167C  EF42  F00B         	goto	u611
  1055   001680  EF44  F00B         	goto	u610
  1056   001684                     u611:
  1057   001684  EF2C  F00B         	goto	l1276
  1058   001688                     u610:
  1059   001688                     
  1060                           ;source/filter.c: 39:               dalsiStav = s2;
  1061   001688  0E02               	movlw	2
  1062   00168A  6E29               	movwf	filterFce@dalsiStav^0,c
  1063   00168C                     
  1064                           ;source/filter.c: 40:               tlacitko->vystup = 1;
  1065   00168C  5025               	movf	filterFce@tlacitko^0,w,c
  1066   00168E  6ED9               	movwf	fsr2l,c
  1067   001690  6ADA               	clrf	fsr2h,c
  1068   001692  0E01               	movlw	1
  1069   001694  26D9               	addwf	fsr2l,f,c
  1070   001696  0E01               	movlw	1
  1071   001698  6EDF               	movwf	indf2,c
  1072                           
  1073                           ;source/filter.c: 41:           }else{
  1074   00169A  EF91  F00B         	goto	l1310
  1075   00169E                     l1292:
  1076                           
  1077                           ;source/filter.c: 47:           if(vstup == 0){
  1078   00169E  5026               	movf	filterFce@vstup^0,w,c
  1079   0016A0  A4D8               	btfss	status,2,c
  1080   0016A2  EF55  F00B         	goto	u621
  1081   0016A6  EF57  F00B         	goto	u620
  1082   0016AA                     u621:
  1083   0016AA  EF28  F00B         	goto	l1274
  1084   0016AE                     u620:
  1085   0016AE                     
  1086                           ;source/filter.c: 48:               dalsiStav = s4;
  1087   0016AE  0E04               	movlw	4
  1088   0016B0  6E29               	movwf	filterFce@dalsiStav^0,c
  1089                           
  1090                           ;source/filter.c: 49:           }else{
  1091   0016B2  EF91  F00B         	goto	l1310
  1092   0016B6                     l1298:
  1093                           
  1094                           ;source/filter.c: 56:           if(vstup == 0){
  1095   0016B6  5026               	movf	filterFce@vstup^0,w,c
  1096   0016B8  A4D8               	btfss	status,2,c
  1097   0016BA  EF61  F00B         	goto	u631
  1098   0016BE  EF63  F00B         	goto	u630
  1099   0016C2                     u631:
  1100   0016C2  EF28  F00B         	goto	l1274
  1101   0016C6                     u630:
  1102   0016C6                     
  1103                           ;source/filter.c: 57:               dalsiStav = s4;
  1104   0016C6  0E04               	movlw	4
  1105   0016C8  6E29               	movwf	filterFce@dalsiStav^0,c
  1106   0016CA                     
  1107                           ;source/filter.c: 58:               tlacitko->vystup = 0;
  1108   0016CA  5025               	movf	filterFce@tlacitko^0,w,c
  1109   0016CC  6ED9               	movwf	fsr2l,c
  1110   0016CE  6ADA               	clrf	fsr2h,c
  1111   0016D0  0E01               	movlw	1
  1112   0016D2  26D9               	addwf	fsr2l,f,c
  1113   0016D4  6ADF               	clrf	indf2,c
  1114                           
  1115                           ;source/filter.c: 59:           }else{
  1116   0016D6  EF91  F00B         	goto	l1310
  1117   0016DA                     l1308:
  1118   0016DA  5025               	movf	filterFce@tlacitko^0,w,c
  1119   0016DC  6ED9               	movwf	fsr2l,c
  1120   0016DE  6ADA               	clrf	fsr2h,c
  1121   0016E0  50DF               	movf	indf2,w,c
  1122   0016E2  6E27               	movwf	??_filterFce^0,c
  1123   0016E4  6A28               	clrf	(??_filterFce+1)^0,c
  1124                           
  1125                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1126                           ; Switch size 1, requested type "simple"
  1127                           ; Number of cases is 1, Range of values is 0 to 0
  1128                           ; switch strategies available:
  1129                           ; Name         Instructions Cycles
  1130                           ; simple_byte            4     3 (average)
  1131                           ;	Chosen strategy is simple_byte
  1132   0016E6  5028               	movf	(??_filterFce+1)^0,w,c
  1133   0016E8  0A00               	xorlw	0	; case 0
  1134   0016EA  B4D8               	btfsc	status,2,c
  1135   0016EC  EF7A  F00B         	goto	l1586
  1136   0016F0  EF91  F00B         	goto	l1310
  1137   0016F4                     l1586:
  1138                           
  1139                           ; Switch size 1, requested type "simple"
  1140                           ; Number of cases is 5, Range of values is 0 to 4
  1141                           ; switch strategies available:
  1142                           ; Name         Instructions Cycles
  1143                           ; simple_byte           16     9 (average)
  1144                           ;	Chosen strategy is simple_byte
  1145   0016F4  5027               	movf	??_filterFce^0,w,c
  1146   0016F6  0A00               	xorlw	0	; case 0
  1147   0016F8  B4D8               	btfsc	status,2,c
  1148   0016FA  EF20  F00B         	goto	l1272
  1149   0016FE  0A01               	xorlw	1	; case 1
  1150   001700  B4D8               	btfsc	status,2,c
  1151   001702  EF30  F00B         	goto	l1278
  1152   001706  0A03               	xorlw	3	; case 2
  1153   001708  B4D8               	btfsc	status,2,c
  1154   00170A  EF3C  F00B         	goto	l1284
  1155   00170E  0A01               	xorlw	1	; case 3
  1156   001710  B4D8               	btfsc	status,2,c
  1157   001712  EF4F  F00B         	goto	l1292
  1158   001716  0A07               	xorlw	7	; case 4
  1159   001718  B4D8               	btfsc	status,2,c
  1160   00171A  EF5B  F00B         	goto	l1298
  1161   00171E  EF91  F00B         	goto	l1310
  1162   001722                     l1310:
  1163                           
  1164                           ;source/filter.c: 66:   tlacitko->stav = dalsiStav;
  1165   001722  5025               	movf	filterFce@tlacitko^0,w,c
  1166   001724  6ED9               	movwf	fsr2l,c
  1167   001726  6ADA               	clrf	fsr2h,c
  1168   001728  C029  FFDF         	movff	filterFce@dalsiStav,indf2
  1169   00172C  0012               	return		;funcret
  1170   00172E                     __end_of_filterFce:
  1171                           	callstack 0
  1172                           
  1173 ;; *************** function _dekoderFce *****************
  1174 ;; Defined at:
  1175 ;;		line 14 in file "header/dekoder.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;  tlacitko        1    3[COMRAM] PTR struct .
  1178 ;;		 -> dekoderAB(2), 
  1179 ;;  A               1    4[COMRAM] unsigned char 
  1180 ;;  B               1    5[COMRAM] unsigned char 
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;		None
  1183 ;; Return value:  Size  Location     Type
  1184 ;;                  1    wreg      void 
  1185 ;; Registers used:
  1186 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1187 ;; Tracked objects:
  1188 ;;		On entry : 0/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1192 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1194 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1195 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1196 ;;Total ram usage:        5 bytes
  1197 ;; Hardware stack levels used: 1
  1198 ;; Hardware stack levels required when called: 2
  1199 ;; This function calls:
  1200 ;;		Nothing
  1201 ;; This function is called by:
  1202 ;;		_main
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206                           	psect	text4
  1207   001002                     __ptext4:
  1208                           	callstack 0
  1209   001002                     _dekoderFce:
  1210                           	callstack 28
  1211   001002                     
  1212                           ;header/dekoder.c: 15:     switch(tlacitko->stav){
  1213   001002  EF53  F009         	goto	l1440
  1214   001006                     l1358:
  1215                           
  1216                           ;header/dekoder.c: 17:             if((A == 1) && (B == 0)){
  1217   001006  0426               	decf	dekoderFce@A^0,w,c
  1218   001008  A4D8               	btfss	status,2,c
  1219   00100A  EF09  F008         	goto	u681
  1220   00100E  EF0B  F008         	goto	u680
  1221   001012                     u681:
  1222   001012  EF2D  F008         	goto	l1368
  1223   001016                     u680:
  1224   001016  5027               	movf	dekoderFce@B^0,w,c
  1225   001018  A4D8               	btfss	status,2,c
  1226   00101A  EF11  F008         	goto	u691
  1227   00101E  EF13  F008         	goto	u690
  1228   001022                     u691:
  1229   001022  EF2D  F008         	goto	l1368
  1230   001026                     u690:
  1231   001026                     
  1232                           ;header/dekoder.c: 18:                 tlacitko->stav = s1;
  1233   001026  5025               	movf	dekoderFce@tlacitko^0,w,c
  1234   001028  6ED9               	movwf	fsr2l,c
  1235   00102A  6ADA               	clrf	fsr2h,c
  1236   00102C  0E01               	movlw	1
  1237   00102E  6EDF               	movwf	indf2,c
  1238   001030                     
  1239                           ;header/dekoder.c: 19:                 if(tlacitko->vystup < 255){
  1240   001030  5025               	movf	dekoderFce@tlacitko^0,w,c
  1241   001032  6ED9               	movwf	fsr2l,c
  1242   001034  6ADA               	clrf	fsr2h,c
  1243   001036  0E01               	movlw	1
  1244   001038  26D9               	addwf	fsr2l,f,c
  1245   00103A  28DE               	incf	postinc2,w,c
  1246   00103C  B4D8               	btfsc	status,2,c
  1247   00103E  EF23  F008         	goto	u701
  1248   001042  EF25  F008         	goto	u700
  1249   001046                     u701:
  1250   001046  EF73  F009         	goto	l212
  1251   00104A                     u700:
  1252   00104A                     
  1253                           ;header/dekoder.c: 20:                 tlacitko->vystup++;
  1254   00104A  5025               	movf	dekoderFce@tlacitko^0,w,c
  1255   00104C  6ED9               	movwf	fsr2l,c
  1256   00104E  6ADA               	clrf	fsr2h,c
  1257   001050  0E01               	movlw	1
  1258   001052  26D9               	addwf	fsr2l,f,c
  1259   001054  2ADF               	incf	indf2,f,c
  1260   001056  EF73  F009         	goto	l212
  1261   00105A                     l1368:
  1262   00105A  5026               	movf	dekoderFce@A^0,w,c
  1263   00105C  A4D8               	btfss	status,2,c
  1264   00105E  EF33  F008         	goto	u711
  1265   001062  EF35  F008         	goto	u710
  1266   001066                     u711:
  1267   001066  EF73  F009         	goto	l212
  1268   00106A                     u710:
  1269   00106A  0427               	decf	dekoderFce@B^0,w,c
  1270   00106C  A4D8               	btfss	status,2,c
  1271   00106E  EF3B  F008         	goto	u721
  1272   001072  EF3D  F008         	goto	u720
  1273   001076                     u721:
  1274   001076  EF73  F009         	goto	l212
  1275   00107A                     u720:
  1276   00107A                     
  1277                           ;header/dekoder.c: 23:                 tlacitko->stav = s3;
  1278   00107A  5025               	movf	dekoderFce@tlacitko^0,w,c
  1279   00107C  6ED9               	movwf	fsr2l,c
  1280   00107E  6ADA               	clrf	fsr2h,c
  1281   001080  0E03               	movlw	3
  1282   001082  6EDF               	movwf	indf2,c
  1283   001084                     
  1284                           ;header/dekoder.c: 24:                 if(tlacitko->vystup > 0){
  1285   001084  5025               	movf	dekoderFce@tlacitko^0,w,c
  1286   001086  6ED9               	movwf	fsr2l,c
  1287   001088  6ADA               	clrf	fsr2h,c
  1288   00108A  0E01               	movlw	1
  1289   00108C  26D9               	addwf	fsr2l,f,c
  1290   00108E  50DF               	movf	indf2,w,c
  1291   001090  B4D8               	btfsc	status,2,c
  1292   001092  EF4D  F008         	goto	u731
  1293   001096  EF4F  F008         	goto	u730
  1294   00109A                     u731:
  1295   00109A  EF57  F008         	goto	l190
  1296   00109E                     u730:
  1297   00109E                     
  1298                           ;header/dekoder.c: 25:                 tlacitko->vystup--;
  1299   00109E  5025               	movf	dekoderFce@tlacitko^0,w,c
  1300   0010A0  6ED9               	movwf	fsr2l,c
  1301   0010A2  6ADA               	clrf	fsr2h,c
  1302   0010A4  0E01               	movlw	1
  1303   0010A6  26D9               	addwf	fsr2l,f,c
  1304   0010A8  06DF               	decf	indf2,f,c
  1305   0010AA  EF73  F009         	goto	l212
  1306   0010AE                     l190:
  1307                           
  1308                           ;header/dekoder.c: 28:             break;
  1309   0010AE  EF73  F009         	goto	l212
  1310   0010B2                     l1378:
  1311                           
  1312                           ;header/dekoder.c: 31:             if((A == 1) && (B == 1)){
  1313   0010B2  0426               	decf	dekoderFce@A^0,w,c
  1314   0010B4  A4D8               	btfss	status,2,c
  1315   0010B6  EF5F  F008         	goto	u741
  1316   0010BA  EF61  F008         	goto	u740
  1317   0010BE                     u741:
  1318   0010BE  EF83  F008         	goto	l1388
  1319   0010C2                     u740:
  1320   0010C2  0427               	decf	dekoderFce@B^0,w,c
  1321   0010C4  A4D8               	btfss	status,2,c
  1322   0010C6  EF67  F008         	goto	u751
  1323   0010CA  EF69  F008         	goto	u750
  1324   0010CE                     u751:
  1325   0010CE  EF83  F008         	goto	l1388
  1326   0010D2                     u750:
  1327   0010D2                     
  1328                           ;header/dekoder.c: 32:                 tlacitko->stav = s2;
  1329   0010D2  5025               	movf	dekoderFce@tlacitko^0,w,c
  1330   0010D4  6ED9               	movwf	fsr2l,c
  1331   0010D6  6ADA               	clrf	fsr2h,c
  1332   0010D8  0E02               	movlw	2
  1333   0010DA  6EDF               	movwf	indf2,c
  1334   0010DC                     
  1335                           ;header/dekoder.c: 33:                 if(tlacitko->vystup < 255){
  1336   0010DC  5025               	movf	dekoderFce@tlacitko^0,w,c
  1337   0010DE  6ED9               	movwf	fsr2l,c
  1338   0010E0  6ADA               	clrf	fsr2h,c
  1339   0010E2  0E01               	movlw	1
  1340   0010E4  26D9               	addwf	fsr2l,f,c
  1341   0010E6  28DE               	incf	postinc2,w,c
  1342   0010E8  B4D8               	btfsc	status,2,c
  1343   0010EA  EF79  F008         	goto	u761
  1344   0010EE  EF7B  F008         	goto	u760
  1345   0010F2                     u761:
  1346   0010F2  EF73  F009         	goto	l212
  1347   0010F6                     u760:
  1348   0010F6                     
  1349                           ;header/dekoder.c: 34:                tlacitko->vystup++;
  1350   0010F6  5025               	movf	dekoderFce@tlacitko^0,w,c
  1351   0010F8  6ED9               	movwf	fsr2l,c
  1352   0010FA  6ADA               	clrf	fsr2h,c
  1353   0010FC  0E01               	movlw	1
  1354   0010FE  26D9               	addwf	fsr2l,f,c
  1355   001100  2ADF               	incf	indf2,f,c
  1356   001102  EF73  F009         	goto	l212
  1357   001106                     l1388:
  1358   001106  5026               	movf	dekoderFce@A^0,w,c
  1359   001108  A4D8               	btfss	status,2,c
  1360   00110A  EF89  F008         	goto	u771
  1361   00110E  EF8B  F008         	goto	u770
  1362   001112                     u771:
  1363   001112  EF73  F009         	goto	l212
  1364   001116                     u770:
  1365   001116  5027               	movf	dekoderFce@B^0,w,c
  1366   001118  A4D8               	btfss	status,2,c
  1367   00111A  EF91  F008         	goto	u781
  1368   00111E  EF93  F008         	goto	u780
  1369   001122                     u781:
  1370   001122  EF73  F009         	goto	l212
  1371   001126                     u780:
  1372   001126                     
  1373                           ;header/dekoder.c: 37:                 tlacitko->stav = s0;
  1374   001126  5025               	movf	dekoderFce@tlacitko^0,w,c
  1375   001128  6ED9               	movwf	fsr2l,c
  1376   00112A  6ADA               	clrf	fsr2h,c
  1377   00112C  6ADF               	clrf	indf2,c
  1378   00112E                     
  1379                           ;header/dekoder.c: 38:                 if(tlacitko->vystup > 0){
  1380   00112E  5025               	movf	dekoderFce@tlacitko^0,w,c
  1381   001130  6ED9               	movwf	fsr2l,c
  1382   001132  6ADA               	clrf	fsr2h,c
  1383   001134  0E01               	movlw	1
  1384   001136  26D9               	addwf	fsr2l,f,c
  1385   001138  50DF               	movf	indf2,w,c
  1386   00113A  B4D8               	btfsc	status,2,c
  1387   00113C  EFA2  F008         	goto	u791
  1388   001140  EFA4  F008         	goto	u790
  1389   001144                     u791:
  1390   001144  EF73  F009         	goto	l212
  1391   001148                     u790:
  1392   001148                     
  1393                           ;header/dekoder.c: 39:                 tlacitko->vystup--;
  1394   001148  5025               	movf	dekoderFce@tlacitko^0,w,c
  1395   00114A  6ED9               	movwf	fsr2l,c
  1396   00114C  6ADA               	clrf	fsr2h,c
  1397   00114E  0E01               	movlw	1
  1398   001150  26D9               	addwf	fsr2l,f,c
  1399   001152  06DF               	decf	indf2,f,c
  1400   001154  EF73  F009         	goto	l212
  1401   001158                     l1398:
  1402                           
  1403                           ;header/dekoder.c: 45:             if((A == 0) && (B == 1)){
  1404   001158  5026               	movf	dekoderFce@A^0,w,c
  1405   00115A  A4D8               	btfss	status,2,c
  1406   00115C  EFB2  F008         	goto	u801
  1407   001160  EFB4  F008         	goto	u800
  1408   001164                     u801:
  1409   001164  EFD6  F008         	goto	l1408
  1410   001168                     u800:
  1411   001168  0427               	decf	dekoderFce@B^0,w,c
  1412   00116A  A4D8               	btfss	status,2,c
  1413   00116C  EFBA  F008         	goto	u811
  1414   001170  EFBC  F008         	goto	u810
  1415   001174                     u811:
  1416   001174  EFD6  F008         	goto	l1408
  1417   001178                     u810:
  1418   001178                     
  1419                           ;header/dekoder.c: 46:                 tlacitko->stav = s3;
  1420   001178  5025               	movf	dekoderFce@tlacitko^0,w,c
  1421   00117A  6ED9               	movwf	fsr2l,c
  1422   00117C  6ADA               	clrf	fsr2h,c
  1423   00117E  0E03               	movlw	3
  1424   001180  6EDF               	movwf	indf2,c
  1425   001182                     
  1426                           ;header/dekoder.c: 47:                 if(tlacitko->vystup < 255){
  1427   001182  5025               	movf	dekoderFce@tlacitko^0,w,c
  1428   001184  6ED9               	movwf	fsr2l,c
  1429   001186  6ADA               	clrf	fsr2h,c
  1430   001188  0E01               	movlw	1
  1431   00118A  26D9               	addwf	fsr2l,f,c
  1432   00118C  28DE               	incf	postinc2,w,c
  1433   00118E  B4D8               	btfsc	status,2,c
  1434   001190  EFCC  F008         	goto	u821
  1435   001194  EFCE  F008         	goto	u820
  1436   001198                     u821:
  1437   001198  EF73  F009         	goto	l212
  1438   00119C                     u820:
  1439   00119C                     
  1440                           ;header/dekoder.c: 48:                 tlacitko->vystup++;
  1441   00119C  5025               	movf	dekoderFce@tlacitko^0,w,c
  1442   00119E  6ED9               	movwf	fsr2l,c
  1443   0011A0  6ADA               	clrf	fsr2h,c
  1444   0011A2  0E01               	movlw	1
  1445   0011A4  26D9               	addwf	fsr2l,f,c
  1446   0011A6  2ADF               	incf	indf2,f,c
  1447   0011A8  EF73  F009         	goto	l212
  1448   0011AC                     l1408:
  1449   0011AC  0426               	decf	dekoderFce@A^0,w,c
  1450   0011AE  A4D8               	btfss	status,2,c
  1451   0011B0  EFDC  F008         	goto	u831
  1452   0011B4  EFDE  F008         	goto	u830
  1453   0011B8                     u831:
  1454   0011B8  EF73  F009         	goto	l212
  1455   0011BC                     u830:
  1456   0011BC  5027               	movf	dekoderFce@B^0,w,c
  1457   0011BE  A4D8               	btfss	status,2,c
  1458   0011C0  EFE4  F008         	goto	u841
  1459   0011C4  EFE6  F008         	goto	u840
  1460   0011C8                     u841:
  1461   0011C8  EF73  F009         	goto	l212
  1462   0011CC                     u840:
  1463   0011CC                     
  1464                           ;header/dekoder.c: 51:                 tlacitko->stav = s1;
  1465   0011CC  5025               	movf	dekoderFce@tlacitko^0,w,c
  1466   0011CE  6ED9               	movwf	fsr2l,c
  1467   0011D0  6ADA               	clrf	fsr2h,c
  1468   0011D2  0E01               	movlw	1
  1469   0011D4  6EDF               	movwf	indf2,c
  1470   0011D6                     
  1471                           ;header/dekoder.c: 52:                 if(tlacitko->vystup > 0){
  1472   0011D6  5025               	movf	dekoderFce@tlacitko^0,w,c
  1473   0011D8  6ED9               	movwf	fsr2l,c
  1474   0011DA  6ADA               	clrf	fsr2h,c
  1475   0011DC  0E01               	movlw	1
  1476   0011DE  26D9               	addwf	fsr2l,f,c
  1477   0011E0  50DF               	movf	indf2,w,c
  1478   0011E2  B4D8               	btfsc	status,2,c
  1479   0011E4  EFF6  F008         	goto	u851
  1480   0011E8  EFF8  F008         	goto	u850
  1481   0011EC                     u851:
  1482   0011EC  EF73  F009         	goto	l212
  1483   0011F0                     u850:
  1484   0011F0                     
  1485                           ;header/dekoder.c: 53:                 tlacitko->vystup--;
  1486   0011F0  5025               	movf	dekoderFce@tlacitko^0,w,c
  1487   0011F2  6ED9               	movwf	fsr2l,c
  1488   0011F4  6ADA               	clrf	fsr2h,c
  1489   0011F6  0E01               	movlw	1
  1490   0011F8  26D9               	addwf	fsr2l,f,c
  1491   0011FA  06DF               	decf	indf2,f,c
  1492   0011FC  EF73  F009         	goto	l212
  1493   001200                     l1418:
  1494                           
  1495                           ;header/dekoder.c: 59:             if((A == 0) && (B == 0)){
  1496   001200  5026               	movf	dekoderFce@A^0,w,c
  1497   001202  A4D8               	btfss	status,2,c
  1498   001204  EF06  F009         	goto	u861
  1499   001208  EF08  F009         	goto	u860
  1500   00120C                     u861:
  1501   00120C  EF29  F009         	goto	l1428
  1502   001210                     u860:
  1503   001210  5027               	movf	dekoderFce@B^0,w,c
  1504   001212  A4D8               	btfss	status,2,c
  1505   001214  EF0E  F009         	goto	u871
  1506   001218  EF10  F009         	goto	u870
  1507   00121C                     u871:
  1508   00121C  EF29  F009         	goto	l1428
  1509   001220                     u870:
  1510   001220                     
  1511                           ;header/dekoder.c: 60:                 tlacitko->stav = s0;
  1512   001220  5025               	movf	dekoderFce@tlacitko^0,w,c
  1513   001222  6ED9               	movwf	fsr2l,c
  1514   001224  6ADA               	clrf	fsr2h,c
  1515   001226  6ADF               	clrf	indf2,c
  1516   001228                     
  1517                           ;header/dekoder.c: 61:                 if(tlacitko->vystup < 255){
  1518   001228  5025               	movf	dekoderFce@tlacitko^0,w,c
  1519   00122A  6ED9               	movwf	fsr2l,c
  1520   00122C  6ADA               	clrf	fsr2h,c
  1521   00122E  0E01               	movlw	1
  1522   001230  26D9               	addwf	fsr2l,f,c
  1523   001232  28DE               	incf	postinc2,w,c
  1524   001234  B4D8               	btfsc	status,2,c
  1525   001236  EF1F  F009         	goto	u881
  1526   00123A  EF21  F009         	goto	u880
  1527   00123E                     u881:
  1528   00123E  EF73  F009         	goto	l212
  1529   001242                     u880:
  1530   001242                     
  1531                           ;header/dekoder.c: 62:                 tlacitko->vystup++;
  1532   001242  5025               	movf	dekoderFce@tlacitko^0,w,c
  1533   001244  6ED9               	movwf	fsr2l,c
  1534   001246  6ADA               	clrf	fsr2h,c
  1535   001248  0E01               	movlw	1
  1536   00124A  26D9               	addwf	fsr2l,f,c
  1537   00124C  2ADF               	incf	indf2,f,c
  1538   00124E  EF73  F009         	goto	l212
  1539   001252                     l1428:
  1540   001252  0426               	decf	dekoderFce@A^0,w,c
  1541   001254  A4D8               	btfss	status,2,c
  1542   001256  EF2F  F009         	goto	u891
  1543   00125A  EF31  F009         	goto	u890
  1544   00125E                     u891:
  1545   00125E  EF73  F009         	goto	l212
  1546   001262                     u890:
  1547   001262  0427               	decf	dekoderFce@B^0,w,c
  1548   001264  A4D8               	btfss	status,2,c
  1549   001266  EF37  F009         	goto	u901
  1550   00126A  EF39  F009         	goto	u900
  1551   00126E                     u901:
  1552   00126E  EF73  F009         	goto	l212
  1553   001272                     u900:
  1554   001272                     
  1555                           ;header/dekoder.c: 65:                 tlacitko->stav = s2;
  1556   001272  5025               	movf	dekoderFce@tlacitko^0,w,c
  1557   001274  6ED9               	movwf	fsr2l,c
  1558   001276  6ADA               	clrf	fsr2h,c
  1559   001278  0E02               	movlw	2
  1560   00127A  6EDF               	movwf	indf2,c
  1561   00127C                     
  1562                           ;header/dekoder.c: 66:             if(tlacitko->vystup > 0){
  1563   00127C  5025               	movf	dekoderFce@tlacitko^0,w,c
  1564   00127E  6ED9               	movwf	fsr2l,c
  1565   001280  6ADA               	clrf	fsr2h,c
  1566   001282  0E01               	movlw	1
  1567   001284  26D9               	addwf	fsr2l,f,c
  1568   001286  50DF               	movf	indf2,w,c
  1569   001288  B4D8               	btfsc	status,2,c
  1570   00128A  EF49  F009         	goto	u911
  1571   00128E  EF4B  F009         	goto	u910
  1572   001292                     u911:
  1573   001292  EF73  F009         	goto	l212
  1574   001296                     u910:
  1575   001296                     
  1576                           ;header/dekoder.c: 67:                 tlacitko->vystup--;
  1577   001296  5025               	movf	dekoderFce@tlacitko^0,w,c
  1578   001298  6ED9               	movwf	fsr2l,c
  1579   00129A  6ADA               	clrf	fsr2h,c
  1580   00129C  0E01               	movlw	1
  1581   00129E  26D9               	addwf	fsr2l,f,c
  1582   0012A0  06DF               	decf	indf2,f,c
  1583   0012A2  EF73  F009         	goto	l212
  1584   0012A6                     l1440:
  1585   0012A6  5025               	movf	dekoderFce@tlacitko^0,w,c
  1586   0012A8  6ED9               	movwf	fsr2l,c
  1587   0012AA  6ADA               	clrf	fsr2h,c
  1588   0012AC  50DF               	movf	indf2,w,c
  1589   0012AE  6E28               	movwf	??_dekoderFce^0,c
  1590   0012B0  6A29               	clrf	(??_dekoderFce+1)^0,c
  1591                           
  1592                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1593                           ; Switch size 1, requested type "simple"
  1594                           ; Number of cases is 1, Range of values is 0 to 0
  1595                           ; switch strategies available:
  1596                           ; Name         Instructions Cycles
  1597                           ; simple_byte            4     3 (average)
  1598                           ;	Chosen strategy is simple_byte
  1599   0012B2  5029               	movf	(??_dekoderFce+1)^0,w,c
  1600   0012B4  0A00               	xorlw	0	; case 0
  1601   0012B6  B4D8               	btfsc	status,2,c
  1602   0012B8  EF60  F009         	goto	l1588
  1603   0012BC  EF73  F009         	goto	l212
  1604   0012C0                     l1588:
  1605                           
  1606                           ; Switch size 1, requested type "simple"
  1607                           ; Number of cases is 4, Range of values is 0 to 3
  1608                           ; switch strategies available:
  1609                           ; Name         Instructions Cycles
  1610                           ; simple_byte           13     7 (average)
  1611                           ;	Chosen strategy is simple_byte
  1612   0012C0  5028               	movf	??_dekoderFce^0,w,c
  1613   0012C2  0A00               	xorlw	0	; case 0
  1614   0012C4  B4D8               	btfsc	status,2,c
  1615   0012C6  EF03  F008         	goto	l1358
  1616   0012CA  0A01               	xorlw	1	; case 1
  1617   0012CC  B4D8               	btfsc	status,2,c
  1618   0012CE  EF59  F008         	goto	l1378
  1619   0012D2  0A03               	xorlw	3	; case 2
  1620   0012D4  B4D8               	btfsc	status,2,c
  1621   0012D6  EFAC  F008         	goto	l1398
  1622   0012DA  0A01               	xorlw	1	; case 3
  1623   0012DC  B4D8               	btfsc	status,2,c
  1624   0012DE  EF00  F009         	goto	l1418
  1625   0012E2  EF73  F009         	goto	l212
  1626   0012E6                     l212:
  1627   0012E6  0012               	return		;funcret
  1628   0012E8                     __end_of_dekoderFce:
  1629                           	callstack 0
  1630                           
  1631 ;; *************** function ___lmul *****************
  1632 ;; Defined at:
  1633 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;  multiplier      4    3[COMRAM] unsigned long 
  1636 ;;  multiplicand    4    7[COMRAM] unsigned long 
  1637 ;; Auto vars:     Size  Location     Type
  1638 ;;  product         4   11[COMRAM] unsigned long 
  1639 ;; Return value:  Size  Location     Type
  1640 ;;                  4    3[COMRAM] unsigned long 
  1641 ;; Registers used:
  1642 ;;		wreg, status,2, status,0
  1643 ;; Tracked objects:
  1644 ;;		On entry : 0/0
  1645 ;;		On exit  : 0/0
  1646 ;;		Unchanged: 0/0
  1647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1648 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1649 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1651 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1652 ;;Total ram usage:       12 bytes
  1653 ;; Hardware stack levels used: 1
  1654 ;; Hardware stack levels required when called: 2
  1655 ;; This function calls:
  1656 ;;		Nothing
  1657 ;; This function is called by:
  1658 ;;		_main
  1659 ;;		_ADprevodnikFce
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           	psect	text5
  1664   00180C                     __ptext5:
  1665                           	callstack 0
  1666   00180C                     ___lmul:
  1667                           	callstack 28
  1668   00180C  0E00               	movlw	0
  1669   00180E  6E2D               	movwf	___lmul@product^0,c
  1670   001810  0E00               	movlw	0
  1671   001812  6E2E               	movwf	(___lmul@product+1)^0,c
  1672   001814  0E00               	movlw	0
  1673   001816  6E2F               	movwf	(___lmul@product+2)^0,c
  1674   001818  0E00               	movlw	0
  1675   00181A  6E30               	movwf	(___lmul@product+3)^0,c
  1676   00181C                     l1448:
  1677   00181C  A025               	btfss	___lmul@multiplier^0,0,c
  1678   00181E  EF13  F00C         	goto	u921
  1679   001822  EF15  F00C         	goto	u920
  1680   001826                     u921:
  1681   001826  EF1D  F00C         	goto	l1452
  1682   00182A                     u920:
  1683   00182A  5029               	movf	___lmul@multiplicand^0,w,c
  1684   00182C  262D               	addwf	___lmul@product^0,f,c
  1685   00182E  502A               	movf	(___lmul@multiplicand+1)^0,w,c
  1686   001830  222E               	addwfc	(___lmul@product+1)^0,f,c
  1687   001832  502B               	movf	(___lmul@multiplicand+2)^0,w,c
  1688   001834  222F               	addwfc	(___lmul@product+2)^0,f,c
  1689   001836  502C               	movf	(___lmul@multiplicand+3)^0,w,c
  1690   001838  2230               	addwfc	(___lmul@product+3)^0,f,c
  1691   00183A                     l1452:
  1692   00183A  90D8               	bcf	status,0,c
  1693   00183C  3629               	rlcf	___lmul@multiplicand^0,f,c
  1694   00183E  362A               	rlcf	(___lmul@multiplicand+1)^0,f,c
  1695   001840  362B               	rlcf	(___lmul@multiplicand+2)^0,f,c
  1696   001842  362C               	rlcf	(___lmul@multiplicand+3)^0,f,c
  1697   001844  90D8               	bcf	status,0,c
  1698   001846  3228               	rrcf	(___lmul@multiplier+3)^0,f,c
  1699   001848  3227               	rrcf	(___lmul@multiplier+2)^0,f,c
  1700   00184A  3226               	rrcf	(___lmul@multiplier+1)^0,f,c
  1701   00184C  3225               	rrcf	___lmul@multiplier^0,f,c
  1702   00184E  5025               	movf	___lmul@multiplier^0,w,c
  1703   001850  1026               	iorwf	(___lmul@multiplier+1)^0,w,c
  1704   001852  1027               	iorwf	(___lmul@multiplier+2)^0,w,c
  1705   001854  1028               	iorwf	(___lmul@multiplier+3)^0,w,c
  1706   001856  A4D8               	btfss	status,2,c
  1707   001858  EF30  F00C         	goto	u931
  1708   00185C  EF32  F00C         	goto	u930
  1709   001860                     u931:
  1710   001860  EF0E  F00C         	goto	l1448
  1711   001864                     u930:
  1712   001864  C02D  F025         	movff	___lmul@product,?___lmul
  1713   001868  C02E  F026         	movff	___lmul@product+1,?___lmul+1
  1714   00186C  C02F  F027         	movff	___lmul@product+2,?___lmul+2
  1715   001870  C030  F028         	movff	___lmul@product+3,?___lmul+3
  1716   001874  0012               	return		;funcret
  1717   001876                     __end_of___lmul:
  1718                           	callstack 0
  1719                           
  1720 ;; *************** function ___aldiv *****************
  1721 ;; Defined at:
  1722 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\aldiv.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;  dividend        4    3[COMRAM] long 
  1725 ;;  divisor         4    7[COMRAM] long 
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;  quotient        4   13[COMRAM] long 
  1728 ;;  sign            1   12[COMRAM] unsigned char 
  1729 ;;  counter         1   11[COMRAM] unsigned char 
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  4    3[COMRAM] long 
  1732 ;; Registers used:
  1733 ;;		wreg, status,2, status,0
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1739 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1740 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1742 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1743 ;;Total ram usage:       14 bytes
  1744 ;; Hardware stack levels used: 1
  1745 ;; Hardware stack levels required when called: 2
  1746 ;; This function calls:
  1747 ;;		Nothing
  1748 ;; This function is called by:
  1749 ;;		_main
  1750 ;;		_ADprevodnikFce
  1751 ;; This function uses a non-reentrant model
  1752 ;;
  1753                           
  1754                           	psect	text6
  1755   00152C                     __ptext6:
  1756                           	callstack 0
  1757   00152C                     ___aldiv:
  1758                           	callstack 28
  1759   00152C  0E00               	movlw	0
  1760   00152E  6E2E               	movwf	___aldiv@sign^0,c
  1761   001530  BE2C               	btfsc	(___aldiv@divisor+3)^0,7,c
  1762   001532  EF9F  F00A         	goto	u940
  1763   001536  EF9D  F00A         	goto	u941
  1764   00153A                     u941:
  1765   00153A  EFA9  F00A         	goto	l1464
  1766   00153E                     u940:
  1767   00153E  1E2C               	comf	(___aldiv@divisor+3)^0,f,c
  1768   001540  1E2B               	comf	(___aldiv@divisor+2)^0,f,c
  1769   001542  1E2A               	comf	(___aldiv@divisor+1)^0,f,c
  1770   001544  6C29               	negf	___aldiv@divisor^0,c
  1771   001546  0E00               	movlw	0
  1772   001548  222A               	addwfc	(___aldiv@divisor+1)^0,f,c
  1773   00154A  222B               	addwfc	(___aldiv@divisor+2)^0,f,c
  1774   00154C  222C               	addwfc	(___aldiv@divisor+3)^0,f,c
  1775   00154E  0E01               	movlw	1
  1776   001550  6E2E               	movwf	___aldiv@sign^0,c
  1777   001552                     l1464:
  1778   001552  BE28               	btfsc	(___aldiv@dividend+3)^0,7,c
  1779   001554  EFB0  F00A         	goto	u950
  1780   001558  EFAE  F00A         	goto	u951
  1781   00155C                     u951:
  1782   00155C  EFBA  F00A         	goto	l1470
  1783   001560                     u950:
  1784   001560  1E28               	comf	(___aldiv@dividend+3)^0,f,c
  1785   001562  1E27               	comf	(___aldiv@dividend+2)^0,f,c
  1786   001564  1E26               	comf	(___aldiv@dividend+1)^0,f,c
  1787   001566  6C25               	negf	___aldiv@dividend^0,c
  1788   001568  0E00               	movlw	0
  1789   00156A  2226               	addwfc	(___aldiv@dividend+1)^0,f,c
  1790   00156C  2227               	addwfc	(___aldiv@dividend+2)^0,f,c
  1791   00156E  2228               	addwfc	(___aldiv@dividend+3)^0,f,c
  1792   001570  0E01               	movlw	1
  1793   001572  1A2E               	xorwf	___aldiv@sign^0,f,c
  1794   001574                     l1470:
  1795   001574  0E00               	movlw	0
  1796   001576  6E2F               	movwf	___aldiv@quotient^0,c
  1797   001578  0E00               	movlw	0
  1798   00157A  6E30               	movwf	(___aldiv@quotient+1)^0,c
  1799   00157C  0E00               	movlw	0
  1800   00157E  6E31               	movwf	(___aldiv@quotient+2)^0,c
  1801   001580  0E00               	movlw	0
  1802   001582  6E32               	movwf	(___aldiv@quotient+3)^0,c
  1803   001584  5029               	movf	___aldiv@divisor^0,w,c
  1804   001586  102A               	iorwf	(___aldiv@divisor+1)^0,w,c
  1805   001588  102B               	iorwf	(___aldiv@divisor+2)^0,w,c
  1806   00158A  102C               	iorwf	(___aldiv@divisor+3)^0,w,c
  1807   00158C  B4D8               	btfsc	status,2,c
  1808   00158E  EFCB  F00A         	goto	u961
  1809   001592  EFCD  F00A         	goto	u960
  1810   001596                     u961:
  1811   001596  EF03  F00B         	goto	l1492
  1812   00159A                     u960:
  1813   00159A  0E01               	movlw	1
  1814   00159C  6E2D               	movwf	___aldiv@counter^0,c
  1815   00159E  EFD7  F00A         	goto	l1478
  1816   0015A2                     l1476:
  1817   0015A2  90D8               	bcf	status,0,c
  1818   0015A4  3629               	rlcf	___aldiv@divisor^0,f,c
  1819   0015A6  362A               	rlcf	(___aldiv@divisor+1)^0,f,c
  1820   0015A8  362B               	rlcf	(___aldiv@divisor+2)^0,f,c
  1821   0015AA  362C               	rlcf	(___aldiv@divisor+3)^0,f,c
  1822   0015AC  2A2D               	incf	___aldiv@counter^0,f,c
  1823   0015AE                     l1478:
  1824   0015AE  AE2C               	btfss	(___aldiv@divisor+3)^0,7,c
  1825   0015B0  EFDC  F00A         	goto	u971
  1826   0015B4  EFDE  F00A         	goto	u970
  1827   0015B8                     u971:
  1828   0015B8  EFD1  F00A         	goto	l1476
  1829   0015BC                     u970:
  1830   0015BC                     l1480:
  1831   0015BC  90D8               	bcf	status,0,c
  1832   0015BE  362F               	rlcf	___aldiv@quotient^0,f,c
  1833   0015C0  3630               	rlcf	(___aldiv@quotient+1)^0,f,c
  1834   0015C2  3631               	rlcf	(___aldiv@quotient+2)^0,f,c
  1835   0015C4  3632               	rlcf	(___aldiv@quotient+3)^0,f,c
  1836   0015C6  5029               	movf	___aldiv@divisor^0,w,c
  1837   0015C8  5C25               	subwf	___aldiv@dividend^0,w,c
  1838   0015CA  502A               	movf	(___aldiv@divisor+1)^0,w,c
  1839   0015CC  5826               	subwfb	(___aldiv@dividend+1)^0,w,c
  1840   0015CE  502B               	movf	(___aldiv@divisor+2)^0,w,c
  1841   0015D0  5827               	subwfb	(___aldiv@dividend+2)^0,w,c
  1842   0015D2  502C               	movf	(___aldiv@divisor+3)^0,w,c
  1843   0015D4  5828               	subwfb	(___aldiv@dividend+3)^0,w,c
  1844   0015D6  A0D8               	btfss	status,0,c
  1845   0015D8  EFF0  F00A         	goto	u981
  1846   0015DC  EFF2  F00A         	goto	u980
  1847   0015E0                     u981:
  1848   0015E0  EFFB  F00A         	goto	l1488
  1849   0015E4                     u980:
  1850   0015E4  5029               	movf	___aldiv@divisor^0,w,c
  1851   0015E6  5E25               	subwf	___aldiv@dividend^0,f,c
  1852   0015E8  502A               	movf	(___aldiv@divisor+1)^0,w,c
  1853   0015EA  5A26               	subwfb	(___aldiv@dividend+1)^0,f,c
  1854   0015EC  502B               	movf	(___aldiv@divisor+2)^0,w,c
  1855   0015EE  5A27               	subwfb	(___aldiv@dividend+2)^0,f,c
  1856   0015F0  502C               	movf	(___aldiv@divisor+3)^0,w,c
  1857   0015F2  5A28               	subwfb	(___aldiv@dividend+3)^0,f,c
  1858   0015F4  802F               	bsf	___aldiv@quotient^0,0,c
  1859   0015F6                     l1488:
  1860   0015F6  90D8               	bcf	status,0,c
  1861   0015F8  322C               	rrcf	(___aldiv@divisor+3)^0,f,c
  1862   0015FA  322B               	rrcf	(___aldiv@divisor+2)^0,f,c
  1863   0015FC  322A               	rrcf	(___aldiv@divisor+1)^0,f,c
  1864   0015FE  3229               	rrcf	___aldiv@divisor^0,f,c
  1865   001600  2E2D               	decfsz	___aldiv@counter^0,f,c
  1866   001602  EFDE  F00A         	goto	l1480
  1867   001606                     l1492:
  1868   001606  502E               	movf	___aldiv@sign^0,w,c
  1869   001608  B4D8               	btfsc	status,2,c
  1870   00160A  EF09  F00B         	goto	u991
  1871   00160E  EF0B  F00B         	goto	u990
  1872   001612                     u991:
  1873   001612  EF13  F00B         	goto	l1496
  1874   001616                     u990:
  1875   001616  1E32               	comf	(___aldiv@quotient+3)^0,f,c
  1876   001618  1E31               	comf	(___aldiv@quotient+2)^0,f,c
  1877   00161A  1E30               	comf	(___aldiv@quotient+1)^0,f,c
  1878   00161C  6C2F               	negf	___aldiv@quotient^0,c
  1879   00161E  0E00               	movlw	0
  1880   001620  2230               	addwfc	(___aldiv@quotient+1)^0,f,c
  1881   001622  2231               	addwfc	(___aldiv@quotient+2)^0,f,c
  1882   001624  2232               	addwfc	(___aldiv@quotient+3)^0,f,c
  1883   001626                     l1496:
  1884   001626  C02F  F025         	movff	___aldiv@quotient,?___aldiv
  1885   00162A  C030  F026         	movff	___aldiv@quotient+1,?___aldiv+1
  1886   00162E  C031  F027         	movff	___aldiv@quotient+2,?___aldiv+2
  1887   001632  C032  F028         	movff	___aldiv@quotient+3,?___aldiv+3
  1888   001636  0012               	return		;funcret
  1889   001638                     __end_of___aldiv:
  1890                           	callstack 0
  1891                           
  1892 ;; *************** function _low_isr *****************
  1893 ;; Defined at:
  1894 ;;		line 216 in file "source/main.c"
  1895 ;; Parameters:    Size  Location     Type
  1896 ;;		None
  1897 ;; Auto vars:     Size  Location     Type
  1898 ;;		None
  1899 ;; Return value:  Size  Location     Type
  1900 ;;                  1    wreg      void 
  1901 ;; Registers used:
  1902 ;;		wreg, status,2, status,0
  1903 ;; Tracked objects:
  1904 ;;		On entry : 0/0
  1905 ;;		On exit  : 0/0
  1906 ;;		Unchanged: 0/0
  1907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1910 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1911 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1912 ;;Total ram usage:        3 bytes
  1913 ;; Hardware stack levels used: 1
  1914 ;; Hardware stack levels required when called: 1
  1915 ;; This function calls:
  1916 ;;		Nothing
  1917 ;; This function is called by:
  1918 ;;		Interrupt level 1
  1919 ;; This function uses a non-reentrant model
  1920 ;;
  1921                           
  1922                           	psect	intcodelo
  1923   000018                     __pintcodelo:
  1924                           	callstack 0
  1925   000018                     _low_isr:
  1926                           	callstack 28
  1927                           
  1928                           ;incstack = 0
  1929   000018  8033               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1930   00001A  CFD8 F022          	movff	status,??_low_isr
  1931   00001E  CFE8 F023          	movff	wreg,??_low_isr+1
  1932   000022  CFE0 F024          	movff	bsr,??_low_isr+2
  1933   000026                     
  1934                           ;source/main.c: 218:     if(INTCONbits.TMR0IF == 1)
  1935   000026  A4F2               	btfss	242,2,c	;volatile
  1936   000028  EF18  F000         	goto	i1u53_21
  1937   00002C  EF1A  F000         	goto	i1u53_20
  1938   000030                     i1u53_21:
  1939   000030  EF2D  F000         	goto	i1l1220
  1940   000034                     i1u53_20:
  1941   000034                     
  1942                           ;source/main.c: 219:     {;source/main.c: 220:         is1ms = 1;
  1943   000034  0E01               	movlw	1
  1944   000036  6E13               	movwf	_is1ms^0,c
  1945                           
  1946                           ;source/main.c: 221:         TMR0H = 0xD8;
  1947   000038  0ED8               	movlw	216
  1948   00003A  6ED7               	movwf	215,c	;volatile
  1949                           
  1950                           ;source/main.c: 222:         TMR0L = 0xEF;
  1951   00003C  0EEF               	movlw	239
  1952   00003E  6ED6               	movwf	214,c	;volatile
  1953   000040                     
  1954                           ;source/main.c: 224:         INTCONbits.TMR0IF = 0;
  1955   000040  94F2               	bcf	242,2,c	;volatile
  1956   000042                     
  1957                           ;source/main.c: 225:         is10ms++;
  1958   000042  2A12               	incf	_is10ms^0,f,c
  1959   000044                     
  1960                           ;source/main.c: 227:     if(is10ms >= 10){
  1961   000044  0E09               	movlw	9
  1962   000046  6412               	cpfsgt	_is10ms^0,c
  1963   000048  EF28  F000         	goto	i1u54_21
  1964   00004C  EF2A  F000         	goto	i1u54_20
  1965   000050                     i1u54_21:
  1966   000050  EF2D  F000         	goto	i1l1220
  1967   000054                     i1u54_20:
  1968   000054                     
  1969                           ;source/main.c: 228:         is10ms = 0;
  1970   000054  0E00               	movlw	0
  1971   000056  6E12               	movwf	_is10ms^0,c
  1972   000058                     
  1973                           ;source/main.c: 229:         ADCON0bits.GO = 1;
  1974   000058  82C2               	bsf	194,1,c	;volatile
  1975   00005A                     i1l1220:
  1976                           
  1977                           ;source/main.c: 233:     if(PIR1bits.ADIF == 1){
  1978   00005A  AC9E               	btfss	158,6,c	;volatile
  1979   00005C  EF32  F000         	goto	i1u55_21
  1980   000060  EF34  F000         	goto	i1u55_20
  1981   000064                     i1u55_21:
  1982   000064  EF43  F000         	goto	i1l97
  1983   000068                     i1u55_20:
  1984   000068                     
  1985                           ;source/main.c: 234:         vysledek = ADRESH;
  1986   000068  CFC4 F00D          	movff	4036,_vysledek	;volatile
  1987   00006C  6A0E               	clrf	(_vysledek+1)^0,c
  1988   00006E                     
  1989                           ;source/main.c: 235:         vysledek = (vysledek << 8);
  1990   00006E  500D               	movf	_vysledek^0,w,c
  1991   000070  6E0E               	movwf	(_vysledek+1)^0,c
  1992   000072  6A0D               	clrf	_vysledek^0,c
  1993   000074                     
  1994                           ;source/main.c: 236:         vysledek = vysledek + ADRESL;
  1995   000074  50C3               	movf	195,w,c	;volatile
  1996   000076  240D               	addwf	_vysledek^0,w,c
  1997   000078  6E0D               	movwf	_vysledek^0,c
  1998   00007A  0E00               	movlw	0
  1999   00007C  200E               	addwfc	(_vysledek+1)^0,w,c
  2000   00007E  6E0E               	movwf	(_vysledek+1)^0,c
  2001   000080                     
  2002                           ;source/main.c: 237:         ADRhotovo = 1;
  2003   000080  0E01               	movlw	1
  2004   000082  6E11               	movwf	_ADRhotovo^0,c
  2005   000084                     
  2006                           ;source/main.c: 238:         PIR1bits.ADIF = 0;
  2007   000084  9C9E               	bcf	158,6,c	;volatile
  2008   000086                     i1l97:
  2009   000086  C024  FFE0         	movff	??_low_isr+2,bsr
  2010   00008A  C023  FFE8         	movff	??_low_isr+1,wreg
  2011   00008E  C022  FFD8         	movff	??_low_isr,status
  2012   000092  9033               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2013   000094  0010               	retfie	
  2014   000096                     __end_of_low_isr:
  2015                           	callstack 0
  2016                           
  2017 ;; *************** function _high_isr *****************
  2018 ;; Defined at:
  2019 ;;		line 187 in file "source/main.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;		None
  2022 ;; Auto vars:     Size  Location     Type
  2023 ;;		None
  2024 ;; Return value:  Size  Location     Type
  2025 ;;                  1    wreg      void 
  2026 ;; Registers used:
  2027 ;;		None
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2037 ;;Total ram usage:        0 bytes
  2038 ;; Hardware stack levels used: 1
  2039 ;; This function calls:
  2040 ;;		Nothing
  2041 ;; This function is called by:
  2042 ;;		Interrupt level 2
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           	psect	intcode
  2047   000008                     __pintcode:
  2048                           	callstack 0
  2049   000008                     _high_isr:
  2050                           	callstack 28
  2051                           
  2052                           ;incstack = 0
  2053   000008  8233               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2054   00000A  EF68  F00C         	goto	int_func
  2055                           
  2056                           	psect	intcode_body
  2057   0018D0                     __pintcode_body:
  2058                           	callstack 28
  2059   0018D0                     int_func:
  2060                           	callstack 28
  2061   0018D0  9233               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2062   0018D2  0011               	retfie		f
  2063   0018D4                     __end_of_high_isr:
  2064                           	callstack 0
  2065                           
  2066                           	psect	smallconst
  2067   001000                     __psmallconst:
  2068                           	callstack 0
  2069   001000  00                 	db	0
  2070   001001  00                 	db	0	; dummy byte at the end
  2071   000000                     
  2072                           	psect	rparam
  2073   000000                     
  2074                           	psect	temp
  2075   000033                     btemp:
  2076                           	callstack 0
  2077   000033                     	ds	1
  2078   000000                     int$flags	set	btemp
  2079   000000                     wtemp8	set	btemp+1
  2080   000000                     ttemp5	set	btemp+1
  2081   000000                     ttemp6	set	btemp+4
  2082   000000                     ttemp7	set	btemp+8
  2083                           
  2084                           	psect	config
  2085                           
  2086                           ;Config register CONFIG1L @ 0x1FFF8
  2087                           ;	Watchdog Timer Enable bit
  2088                           ;	WDTEN = OFF, WDT disabled (control is placed on SWDTEN bit)
  2089                           ;	Stack Overflow/Underflow Reset Enable bit
  2090                           ;	STVREN = ON, Reset on stack overflow/underflow enabled
  2091                           ;	Extended Instruction Set Enable bit
  2092                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2093                           ;	Background Debugger Enable bit
  2094                           ;	DEBUG = 0x1, unprogrammed default
  2095   01FFF8                     	org	131064
  2096   01FFF8  A0                 	db	160
  2097                           
  2098                           ;Config register CONFIG1H @ 0x1FFF9
  2099                           ;	Code Protection bit
  2100                           ;	CP0 = OFF, Program memory is not code-protected
  2101   01FFF9                     	org	131065
  2102   01FFF9  F4                 	db	244
  2103                           
  2104                           ;Config register CONFIG2L @ 0x1FFFA
  2105                           ;	Oscillator Selection bits
  2106                           ;	FOSC = HSPLL, HS oscillator, PLL enabled
  2107                           ;	Fail-Safe Clock Monitor Enable bit
  2108                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2109                           ;	Two-Speed Start-up (Internal/External Oscillator Switchover) Control bit
  2110                           ;	IESO = OFF, Two-Speed Start-up disabled
  2111   01FFFA                     	org	131066
  2112   01FFFA  05                 	db	5
  2113                           
  2114                           ;Config register CONFIG2H @ 0x1FFFB
  2115                           ;	Watchdog Timer Postscaler Select bits
  2116                           ;	WDTPS = 32768, 1:32768
  2117   01FFFB                     	org	131067
  2118   01FFFB  FF                 	db	255
  2119                           
  2120                           ;Config register CONFIG3L @ 0x1FFFC
  2121                           ;	External Address Bus Shift Enable bit
  2122                           ;	EASHFT = 0x1, unprogrammed default
  2123                           ;	External Memory Bus Configuration bits
  2124                           ;	MODE = MM, Microcontroller mode - External bus disabled
  2125                           ;	Data Bus Width Select bit
  2126                           ;	BW = 0x1, unprogrammed default
  2127                           ;	External Bus Wait Enable bit
  2128                           ;	WAIT = 0x1, unprogrammed default
  2129   01FFFC                     	org	131068
  2130   01FFFC  F8                 	db	248
  2131                           
  2132                           ;Config register CONFIG3H @ 0x1FFFD
  2133                           ;	unspecified, using default values
  2134                           ;	ECCP2 MUX bit
  2135                           ;	CCP2MX = 0x1, unprogrammed default
  2136                           ;	ECCPx MUX bit
  2137                           ;	ECCPMX = 0x1, unprogrammed default
  2138                           ;	PMP Pin Multiplex bit
  2139                           ;	PMPMX = 0x1, unprogrammed default
  2140                           ;	MSSP Address Masking Mode Select bit
  2141                           ;	MSSPMSK = 0x1, unprogrammed default
  2142   01FFFD                     	org	131069
  2143   01FFFD  FF                 	db	255
  2144                           tosu	equ	0xFFF
  2145                           tosh	equ	0xFFE
  2146                           tosl	equ	0xFFD
  2147                           stkptr	equ	0xFFC
  2148                           pclatu	equ	0xFFB
  2149                           pclath	equ	0xFFA
  2150                           pcl	equ	0xFF9
  2151                           tblptru	equ	0xFF8
  2152                           tblptrh	equ	0xFF7
  2153                           tblptrl	equ	0xFF6
  2154                           tablat	equ	0xFF5
  2155                           prodh	equ	0xFF4
  2156                           prodl	equ	0xFF3
  2157                           indf0	equ	0xFEF
  2158                           postinc0	equ	0xFEE
  2159                           postdec0	equ	0xFED
  2160                           preinc0	equ	0xFEC
  2161                           plusw0	equ	0xFEB
  2162                           fsr0h	equ	0xFEA
  2163                           fsr0l	equ	0xFE9
  2164                           wreg	equ	0xFE8
  2165                           indf1	equ	0xFE7
  2166                           postinc1	equ	0xFE6
  2167                           postdec1	equ	0xFE5
  2168                           preinc1	equ	0xFE4
  2169                           plusw1	equ	0xFE3
  2170                           fsr1h	equ	0xFE2
  2171                           fsr1l	equ	0xFE1
  2172                           bsr	equ	0xFE0
  2173                           indf2	equ	0xFDF
  2174                           postinc2	equ	0xFDE
  2175                           postdec2	equ	0xFDD
  2176                           preinc2	equ	0xFDC
  2177                           plusw2	equ	0xFDB
  2178                           fsr2h	equ	0xFDA
  2179                           fsr2l	equ	0xFD9
  2180                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     17      50
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           64      0       0

Pointer List with Targets:

    dekoderFce@tlacitko	PTR struct . size(1) Largest target is 2
		 -> dekoderAB(COMRAM[2]), 

    filterFce@tlacitko	PTR struct . size(1) Largest target is 2
		 -> S3(COMRAM[2]), S4(COMRAM[2]), S5A(COMRAM[2]), S5B(COMRAM[2]), 

    pametFce@tlacitko	PTR struct . size(1) Largest target is 2
		 -> S3Filtr(COMRAM[2]), S4Filtr(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->___aldiv

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _low_isr in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3606
                            ___aldiv
                             ___lmul
                         _dekoderFce
                          _filterFce
                           _pametFce
             _preambleInitialization
 ---------------------------------------------------------------------------------
 (1) _preambleInitialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pametFce                                             5     3      2     511
                                              3 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _filterFce                                            5     3      2     839
                                              3 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _dekoderFce                                           5     2      3    1130
                                              3 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     522
                                              3 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     604
                                              3 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _low_isr                                              3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _high_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___aldiv
   ___lmul
   _dekoderFce
   _filterFce
   _pametFce
   _preambleInitialization

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F3F      0       0      50        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     11      32       1       53.2%
BITBANK15           40      0       0      35        0.0%
BANK15              40      0       0      36        0.0%
BITBIGSFRll         2B      0       0      49        0.0%
BITBIGSFRhhlllh     20      0       0      42        0.0%
BITBIGSFRhhlh       19      0       0      38        0.0%
BITBIGSFRhhllhh      B      0       0      41        0.0%
BITBIGSFRhhh         A      0       0      37        0.0%
BITBIGSFRhhllll      8      0       0      46        0.0%
BITBIGSFRhl          3      0       0      47        0.0%
BITBIGSFRhhllhh      2      0       0      40        0.0%
BITBIGSFRhhllhh      1      0       0      39        0.0%
BITBIGSFRhhllll      1      0       0      44        0.0%
BITBIGSFRhhllll      1      0       0      45        0.0%
BITBIGSFRhhllll      1      0       0      43        0.0%
BITBIGSFRlh          1      0       0      48        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      32      32        0.0%
DATA                 0      0      32       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Dec 21 17:00:56 2023

                            l80 1520                              l72 1434                              _S3 001E  
                            l78 1504                              _S4 0020                              bsr 0FE0  
                           l300 1636                             l212 12E6                             l140 18B8  
                           l232 1864                             l233 1874                             l190 10AE  
                           l166 172C                             l183 180A                             l900 1886  
                           l910 189C                             l902 1888                             l920 18AE  
                           l912 189E                             l904 188A                             l922 18B4  
                           l914 18A0                             l906 188C                             l924 18B6  
                           l916 18A2                             l908 188E                             l918 18AC  
                           l894 1876                             l896 187A                             l898 187C  
                           _S5A 001C                             _S5B 001A                             u600 1670  
                           u601 166C                             u610 1688                             u611 1684  
                           u700 104A                             u620 16AE                             u701 1046  
                           u621 16AA                             u710 106A                             u630 16C6  
                           u711 1066                             u631 16C2                             u800 1168  
                           u720 107A                             u640 1746                             u801 1164  
                           u721 1076                             u641 1742                             u810 1178  
                           u730 109E                             u650 1766                             u811 1174  
                           u731 109A                             u651 1762                             u900 1272  
                           u820 119C                             u740 10C2                             u660 1792  
                           u901 126E                             u821 1198                             u741 10BE  
                           u661 178E                             u910 1296                             u830 11BC  
                           u750 10D2                             u590 1650                             u670 17AA  
                           u911 1292                             u831 11B8                             u751 10CE  
                           u591 164C                             u671 17A6                             u920 182A  
                           u840 11CC                             u760 10F6                             u680 1016  
                           u921 1826                             u841 11C8                             u761 10F2  
                           u681 1012                             u930 1864                             u850 11F0  
                           u770 1116                             u690 1026                             u931 1860  
                           u851 11EC                             u771 1112                             u691 1022  
                           u940 153E                             u860 1210                             u780 1126  
                           u941 153A                             u861 120C                             u781 1122  
                           u950 1560                             u870 1220                             u790 1148  
                           u951 155C                             u871 121C                             u791 1144  
                           u960 159A                             u880 1242                             u961 1596  
                           u881 123E                             u970 15BC                             u890 1262  
                           u971 15B8                             u891 125E                             u980 15E4  
                           u981 15E0                             u990 1616                             u991 1612  
                           wreg 0FE8                            l1300 16C6                            l1302 16CA  
                          l1310 1722                            l1400 1168                            l1320 1746  
                          l1410 11BC                            l1402 1178                            l1330 177A  
                          l1322 174E                            l1420 1210                            l1412 11CC  
                          l1404 1182                            l1308 16DA                            l1340 17AA  
                          l1332 1782                            l1324 1756                            l1316 172E  
                          l1500 12E8                            l1430 1262                            l1422 1220  
                          l1414 11D6                            l1406 119C                            l1270 1638  
                          l1342 17AE                            l1334 1792                            l1326 1766  
                          l1350 1800                            l1318 1736                            l1510 136C  
                          l1502 1324                            l1432 1272                            l1424 1228  
                          l1416 11F0                            l1408 11AC                            l1360 1016  
                          l1440 12A6                            l1280 1670                            l1272 1640  
                          l1328 176A                            l1520 13F8                            l1512 137C  
                          l1504 1328                            l1450 182A                            l1434 127C  
                          l1426 1242                            l1418 1200                            l1370 106A  
                          l1362 1026                            l1274 1650                            l1338 179A  
                          l1530 14B0                            l1522 142C                            l1514 139C  
                          l1506 1338                            l1460 153E                            l1452 183A  
                          l1436 1296                            l1428 1252                            l1380 10C2  
                          l1372 107A                            l1364 1030                            l1356 1002  
                          l1292 169E                            l1284 1678                            l1276 1658  
                          l1348 17C0                            l1540 14E8                            l1532 14BA  
                          l1524 1430                            l1516 13AC                            l1508 134A  
                          l1470 1574                            l1462 154E                            l1454 1844  
                          l1446 180C                            l1390 1116                            l1382 10D2  
                          l1374 1084                            l1366 104A                            l1358 1006  
                          l1294 16AE                            l1286 1688                            l1278 1660  
                          l1542 14EE                            l1534 14C4                            l1526 1444  
                          l1518 13C4                            l1480 15BC                            l1472 1584  
                          l1464 1552                            l1456 152C                            l1448 181C  
                          l1392 1126                            l1384 10DC                            l1376 109E  
                          l1368 105A                            l1288 168C                            l1544 14FE  
                          l1536 14CE                            l1528 14AC                            l1490 1600  
                          l1482 15C6                            l1474 159A                            l1466 1560  
                          l1458 1530                            l1394 112E                            l1386 10F6  
                          l1378 10B2                            l1298 16B6                            l1546 1508  
                          l1538 14D8                            l1484 15E4                            l1476 15A2  
                          l1492 1606                            l1468 1570                            l1396 1148  
                          l1388 1106                            l1548 1518                            l1494 1616  
                          l1486 15F4                            l1478 15AE                            l1398 1158  
                          l1496 1626                            l1488 15F6                            l1584 17DA  
                          l1586 16F4                            l1588 12C0                            u1000 1338  
                          u1001 1334                            u1010 136C                            u1011 1368  
                          u1100 1518                            u1020 139C                            u1101 1514  
                          u1021 1398                            u1030 1444                            u1031 1440  
                          u1045 14B8                            u1046 14BA                            u1055 14C2  
                          u1080 14E8                            u1056 14C4                            u1081 14E4  
                          u1065 14CC                            u1090 14FE                            u1066 14CE  
                          u1091 14FA                            u1075 14D6                            u1076 14D8  
                          i1l97 0086                            i2l89 18D0                            _main 12E8  
                          fsr2h 0FDA                            indf2 0FDF                            fsr2l 0FD9  
                          _pulz 0009                            btemp 0033                            start 0096  
             pametFce@dalsiStav 0029                    ___param_bank 0000                 __end_of___aldiv 1638  
                         ?_main 0022                           _T0CON 0FD5                           _TMR0H 0FD7  
                         _TMR0L 0FD6                           _PORTH 0F87                           _TRISD 0F95  
                         _TRISF 0F97                           _TRISH 0F99                           _TRISJ 0F9A  
           ___lmul@multiplicand 0029                           _is1ms 0013                 __end_of_low_isr 0096  
                         ttemp5 0034                           ttemp6 0037                           ttemp7 003B  
                         status 0FD8                           wtemp8 0034                 __initialization 18BA  
                  __end_of_main 152C                          ??_main 0033                   __activetblptr 0003  
                        _ADCON0 0FC2                          _ADCON1 0FC1                          _ADRESH 0FC4  
                        _ADRESL 0FC3                          i1l1210 0040                          i1l1212 0042  
                        i1l1220 005A                          i1l1230 0084                          i1l1222 0068  
                        i1l1214 0044                          i1l1206 0026                          i1l1224 006E  
                        i1l1216 0054                          i1l1208 0034                          i1l1226 0074  
                        i1l1218 0058                          i1l1228 0080                __end_of_high_isr 18D4  
                        _is10ms 0012                          ___lmul 180C                       ??___aldiv 002D  
        _preambleInitialization 1876                __end_of_pametFce 180C                          clear_0 18C0  
                        _mezera 0007                          isa$std 0001                          _vystup 000F  
                  __mediumconst 0000                       ??_low_isr 0022                      __accesstop 0060  
       __end_of__initialization 18C6                   ___rparam_used 0001                  __pcstackCOMRAM 0022  
                    _dekoderFce 1002                         ?___lmul 0025                  ___lmul@product 002D  
            dekoderFce@tlacitko 0025              filterFce@dalsiStav 0029                         _S3Filtr 0016  
                       _S4Filtr 0018                         i1u53_20 0034                         i1u53_21 0030  
                       i1u54_20 0054                         i1u54_21 0050                         i1u55_20 0068  
                       i1u55_21 0064                       ?_high_isr 0022                       ?_pametFce 0025  
                       __Hparam 0000                         __Lparam 0000                         ___aldiv 152C  
             __end_of_filterFce 172E                    __psmallconst 1000                         __pcinit 18BA  
                       __ramtop 1000                         __ptext0 12E8                         __ptext1 1876  
                       __ptext2 172E                         __ptext3 1638                         __ptext4 1002  
                       __ptext5 180C                         __ptext6 152C                       _T0CONbits 0FD5  
                     _ADRhotovo 0011                ___aldiv@dividend 0025                         _low_isr 0018  
                    ??_high_isr 0022                  __pintcode_body 18D0            end_of_initialization 18C6  
                    ??_pametFce 0027                         int_func 18D0                     _adKalkulace 0001  
                   ?_dekoderFce 0025                  filterFce@vstup 0026         ?_preambleInitialization 0022  
              ___aldiv@quotient 002F                         postinc0 0FEE                         postinc2 0FDE  
                     _PORTFbits 0F85                       _PORTJbits 0F88                       _TRISFbits 0F97  
__end_of_preambleInitialization 18BA                  __end_of___lmul 1876             start_initialization 18BA  
              pametFce@tlacitko 0025                        ??___lmul 002D                     __pbssCOMRAM 0001  
                     _dekoderAB 0014                       __pintcode 0008                        ?___aldiv 0025  
                   __pintcodelo 0018                       _filterFce 1638                     __smallconst 1000  
                      ?_low_isr 0022               filterFce@tlacitko 0025                 ___aldiv@divisor 0029  
               ___aldiv@counter 002D                       _komparace 000B                        _LATDbits 0F8C  
                      _IPR1bits 0F9F                        _PIE1bits 0F9D                    ??_dekoderFce 0028  
                      _PIR1bits 0F9E                        _RCONbits 0FD0                      _ADCON0bits 0FC2  
                    ?_filterFce 0025              __end_of_dekoderFce 12E8               ___lmul@multiplier 0025  
                   _INTCON2bits 0FF1                      _ANCON1bits 0FC2                        __Hrparam 0000  
                      __Lrparam 0000                   pametFce@input 0026                        _high_isr 0008  
                      _pametFce 172E                        isa$xinst 0000                        _novyPulz 0010  
                      int$flags 0033                        _pulzBack 0005                     ??_filterFce 0027  
                   dekoderFce@A 0026                     dekoderFce@B 0027                     _OSCTUNEbits 0F9B  
                    _INTCONbits 0FF2                        _vysledek 000D                        intlevel1 0000  
                      intlevel2 0000                      _OSCCONbits 0FD3                    ___aldiv@sign 002E  
                    _WDTCONbits 0FC0        ??_preambleInitialization 0025  
