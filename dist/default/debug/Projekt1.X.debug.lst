

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Nov 17 12:00:01 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F87J11
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    14                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19   000000                     
    20                           ; Generated 23/03/2023 GMT
    21                           ; 
    22                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F87J11 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54   000000                     _T0CONbits	set	4053
    55   000000                     _PORTDbits	set	3971
    56   000000                     _PORTJbits	set	3976
    57   000000                     _OSCTUNEbits	set	3995
    58   000000                     _OSCCONbits	set	4051
    59   000000                     _T0CON	set	4053
    60   000000                     _TMR0L	set	4054
    61   000000                     _TMR0H	set	4055
    62   000000                     _INTCONbits	set	4082
    63   000000                     _INTCON2bits	set	4081
    64   000000                     _RCONbits	set	4048
    65                           
    66                           ; #config settings
    67                           
    68                           	psect	cinit
    69   001150                     __pcinit:
    70                           	callstack 0
    71   001150                     start_initialization:
    72                           	callstack 0
    73   001150                     __initialization:
    74                           	callstack 0
    75                           
    76                           ; Clear objects allocated to COMRAM (6 bytes)
    77   001150  6A0D               	clrf	(__pbssCOMRAM+5)& (0+255),c
    78   001152  6A0C               	clrf	(__pbssCOMRAM+4)& (0+255),c
    79   001154  6A0B               	clrf	(__pbssCOMRAM+3)& (0+255),c
    80   001156  6A0A               	clrf	(__pbssCOMRAM+2)& (0+255),c
    81   001158  6A09               	clrf	(__pbssCOMRAM+1)& (0+255),c
    82   00115A  6A08               	clrf	__pbssCOMRAM& (0+255),c
    83   00115C                     end_of_initialization:
    84                           	callstack 0
    85   00115C                     __end_of__initialization:
    86                           	callstack 0
    87   00115C  900E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    88   00115E  920E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    89   001160  0100               	movlb	0
    90   001162  EF69  F008         	goto	_main	;jump to C main() function
    91                           
    92                           	psect	bssCOMRAM
    93   000008                     __pbssCOMRAM:
    94                           	callstack 0
    95   000008                     _S5B:
    96                           	callstack 0
    97   000008                     	ds	2
    98   00000A                     _S5A:
    99                           	callstack 0
   100   00000A                     	ds	2
   101   00000C                     _S4:
   102                           	callstack 0
   103   00000C                     	ds	2
   104                           
   105                           	psect	cstackCOMRAM
   106   000001                     __pcstackCOMRAM:
   107                           	callstack 0
   108   000001                     ??_low_isr:
   109                           
   110                           ; 1 bytes @ 0x0
   111   000001                     	ds	3
   112   000004                     filterFce@tlacitko:
   113                           	callstack 0
   114                           
   115                           ; 1 bytes @ 0x3
   116   000004                     	ds	1
   117   000005                     filterFce@vstup:
   118                           	callstack 0
   119                           
   120                           ; 1 bytes @ 0x4
   121   000005                     	ds	1
   122   000006                     ??_filterFce:
   123                           
   124                           ; 1 bytes @ 0x5
   125   000006                     	ds	2
   126   000008                     
   127                           ; 1 bytes @ 0x7
   128 ;;
   129 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   130 ;;
   131 ;; *************** function _main *****************
   132 ;; Defined at:
   133 ;;		line 56 in file "source/main.c"
   134 ;; Parameters:    Size  Location     Type
   135 ;;		None
   136 ;; Auto vars:     Size  Location     Type
   137 ;;		None
   138 ;; Return value:  Size  Location     Type
   139 ;;                  1    wreg      void 
   140 ;; Registers used:
   141 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   142 ;; Tracked objects:
   143 ;;		On entry : 0/0
   144 ;;		On exit  : 0/0
   145 ;;		Unchanged: 0/0
   146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   151 ;;Total ram usage:        0 bytes
   152 ;; Hardware stack levels required when called: 3
   153 ;; This function calls:
   154 ;;		_filterFce
   155 ;;		_preambleInitialization
   156 ;; This function is called by:
   157 ;;		Startup code after reset
   158 ;; This function uses a non-reentrant model
   159 ;;
   160                           
   161                           	psect	text0
   162   0010D2                     __ptext0:
   163                           	callstack 0
   164   0010D2                     _main:
   165                           	callstack 28
   166   0010D2                     
   167                           ;source/main.c: 58:     S4.stav = 0;
   168   0010D2  0E00               	movlw	0
   169   0010D4  6E0C               	movwf	_S4^0,c
   170                           
   171                           ;source/main.c: 59:     S4.vystupFilter = 0;
   172   0010D6  0E00               	movlw	0
   173   0010D8  6E0D               	movwf	(_S4+1)^0,c
   174                           
   175                           ;source/main.c: 61:     S5A.stav = 0;
   176   0010DA  0E00               	movlw	0
   177   0010DC  6E0A               	movwf	_S5A^0,c
   178                           
   179                           ;source/main.c: 62:     S5A.vystupFilter = 0;
   180   0010DE  0E00               	movlw	0
   181   0010E0  6E0B               	movwf	(_S5A+1)^0,c
   182                           
   183                           ;source/main.c: 64:     S5B.stav = 0;
   184   0010E2  0E00               	movlw	0
   185   0010E4  6E08               	movwf	_S5B^0,c
   186                           
   187                           ;source/main.c: 65:     S5B.vystupFilter = 0;
   188   0010E6  0E00               	movlw	0
   189   0010E8  6E09               	movwf	(_S5B+1)^0,c
   190   0010EA                     
   191                           ;source/main.c: 68:   preambleInitialization();
   192   0010EA  EC97  F008         	call	_preambleInitialization	;wreg free
   193   0010EE                     l898:
   194                           
   195                           ;source/main.c: 74:   {;source/main.c: 77:    filterFce(&S4, PORTJbits.RJ7);
   196   0010EE  0E0C               	movlw	low _S4
   197   0010F0  6E04               	movwf	filterFce@tlacitko^0,c
   198   0010F2  0E00               	movlw	0
   199   0010F4  BE88               	btfsc	136,7,c	;volatile
   200   0010F6  0E01               	movlw	1
   201   0010F8  6E05               	movwf	filterFce@vstup^0,c
   202   0010FA  EC01  F008         	call	_filterFce	;wreg free
   203   0010FE                     
   204                           ;source/main.c: 78:    filterFce(&S5A, PORTJbits.RJ0);
   205   0010FE  0E0A               	movlw	low _S5A
   206   001100  6E04               	movwf	filterFce@tlacitko^0,c
   207   001102  0E00               	movlw	0
   208   001104  B088               	btfsc	136,0,c	;volatile
   209   001106  0E01               	movlw	1
   210   001108  6E05               	movwf	filterFce@vstup^0,c
   211   00110A  EC01  F008         	call	_filterFce	;wreg free
   212   00110E                     
   213                           ;source/main.c: 79:    filterFce(&S5B, PORTJbits.RJ1);
   214   00110E  0E08               	movlw	low _S5B
   215   001110  6E04               	movwf	filterFce@tlacitko^0,c
   216   001112  0E00               	movlw	0
   217   001114  B288               	btfsc	136,1,c	;volatile
   218   001116  0E01               	movlw	1
   219   001118  6E05               	movwf	filterFce@vstup^0,c
   220   00111A  EC01  F008         	call	_filterFce	;wreg free
   221   00111E                     
   222                           ;source/main.c: 81:    S4.vystupFilter = PORTDbits.RD7;
   223   00111E  0E00               	movlw	0
   224   001120  BE83               	btfsc	131,7,c	;volatile
   225   001122  0E01               	movlw	1
   226   001124  6E0D               	movwf	(_S4+1)^0,c
   227   001126  EF77  F008         	goto	l898
   228   00112A  EF27  F000         	goto	start
   229   00112E                     __end_of_main:
   230                           	callstack 0
   231                           
   232 ;; *************** function _preambleInitialization *****************
   233 ;; Defined at:
   234 ;;		line 16 in file "source/preambleInitialization.c"
   235 ;; Parameters:    Size  Location     Type
   236 ;;		None
   237 ;; Auto vars:     Size  Location     Type
   238 ;;		None
   239 ;; Return value:  Size  Location     Type
   240 ;;                  1    wreg      void 
   241 ;; Registers used:
   242 ;;		wreg, status,2
   243 ;; Tracked objects:
   244 ;;		On entry : 0/0
   245 ;;		On exit  : 0/0
   246 ;;		Unchanged: 0/0
   247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   252 ;;Total ram usage:        0 bytes
   253 ;; Hardware stack levels used: 1
   254 ;; Hardware stack levels required when called: 2
   255 ;; This function calls:
   256 ;;		Nothing
   257 ;; This function is called by:
   258 ;;		_main
   259 ;; This function uses a non-reentrant model
   260 ;;
   261                           
   262                           	psect	text1
   263   00112E                     __ptext1:
   264                           	callstack 0
   265   00112E                     _preambleInitialization:
   266                           	callstack 28
   267   00112E                     
   268                           ;source/preambleInitialization.c: 18:     T0CON = 0b10001000;
   269   00112E  0E88               	movlw	136
   270   001130  6ED5               	movwf	213,c	;volatile
   271   001132                     
   272                           ;source/preambleInitialization.c: 19:     T0CONbits.PSA = 1;
   273   001132  86D5               	bsf	213,3,c	;volatile
   274   001134                     
   275                           ;source/preambleInitialization.c: 20:     T0CONbits.TMR0ON = 1;
   276   001134  8ED5               	bsf	213,7,c	;volatile
   277                           
   278                           ;source/preambleInitialization.c: 22:     TMR0H = 0xB1;
   279   001136  0EB1               	movlw	177
   280   001138  6ED7               	movwf	215,c	;volatile
   281                           
   282                           ;source/preambleInitialization.c: 23:     TMR0L = 0xDF;
   283   00113A  0EDF               	movlw	223
   284   00113C  6ED6               	movwf	214,c	;volatile
   285   00113E                     
   286                           ;source/preambleInitialization.c: 25:     INTCON2bits.TMR0IP = 0;
   287   00113E  94F1               	bcf	241,2,c	;volatile
   288   001140                     
   289                           ;source/preambleInitialization.c: 26:     INTCONbits.TMR0IE = 1;
   290   001140  8AF2               	bsf	242,5,c	;volatile
   291   001142                     
   292                           ;source/preambleInitialization.c: 28:     INTCONbits.GIEH = 1;
   293   001142  8EF2               	bsf	242,7,c	;volatile
   294   001144                     
   295                           ;source/preambleInitialization.c: 29:     INTCONbits.GIEL = 1;
   296   001144  8CF2               	bsf	242,6,c	;volatile
   297                           
   298                           ;source/preambleInitialization.c: 39:     OSCCONbits.SCS = 0;
   299   001146  0EFC               	movlw	-4
   300   001148  16D3               	andwf	211,f,c	;volatile
   301   00114A                     
   302                           ;source/preambleInitialization.c: 41:     OSCTUNEbits.PLLEN = 1;
   303   00114A  8C9B               	bsf	155,6,c	;volatile
   304   00114C                     
   305                           ;source/preambleInitialization.c: 46:     RCONbits.IPEN = 1;
   306   00114C  8ED0               	bsf	208,7,c	;volatile
   307   00114E  0012               	return		;funcret
   308   001150                     __end_of_preambleInitialization:
   309                           	callstack 0
   310                           
   311 ;; *************** function _filterFce *****************
   312 ;; Defined at:
   313 ;;		line 15 in file "source/filter.c"
   314 ;; Parameters:    Size  Location     Type
   315 ;;  tlacitko        1    3[COMRAM] PTR struct .
   316 ;;		 -> S5B(2), S5A(2), S4(2), 
   317 ;;  vstup           1    4[COMRAM] unsigned char 
   318 ;; Auto vars:     Size  Location     Type
   319 ;;  dalsiStav       1    0        unsigned char 
   320 ;; Return value:  Size  Location     Type
   321 ;;                  1    wreg      void 
   322 ;; Registers used:
   323 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   324 ;; Tracked objects:
   325 ;;		On entry : 0/0
   326 ;;		On exit  : 0/0
   327 ;;		Unchanged: 0/0
   328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   329 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   331 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   332 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   333 ;;Total ram usage:        4 bytes
   334 ;; Hardware stack levels used: 1
   335 ;; Hardware stack levels required when called: 2
   336 ;; This function calls:
   337 ;;		Nothing
   338 ;; This function is called by:
   339 ;;		_main
   340 ;; This function uses a non-reentrant model
   341 ;;
   342                           
   343                           	psect	text2
   344   001002                     __ptext2:
   345                           	callstack 0
   346   001002                     _filterFce:
   347                           	callstack 28
   348   001002                     
   349                           ;source/filter.c: 20:   switch(tlacitko->stav){
   350   001002  EF44  F008         	goto	l888
   351   001006                     l852:
   352                           
   353                           ;source/filter.c: 22:           if(vstup == 1){
   354   001006  0405               	decf	filterFce@vstup^0,w,c
   355   001008  A4D8               	btfss	status,2,c
   356   00100A  EF09  F008         	goto	u71
   357   00100E  EF0B  F008         	goto	u70
   358   001012                     u71:
   359   001012  EF0D  F008         	goto	l856
   360   001016                     u70:
   361   001016                     l854:
   362                           
   363                           ;source/filter.c: 24:           }else{
   364   001016  EF68  F008         	goto	l86
   365   00101A                     l856:
   366   00101A  EF68  F008         	goto	l86
   367   00101E                     l858:
   368                           
   369                           ;source/filter.c: 30:           if(vstup == 1){
   370   00101E  0405               	decf	filterFce@vstup^0,w,c
   371   001020  A4D8               	btfss	status,2,c
   372   001022  EF15  F008         	goto	u81
   373   001026  EF17  F008         	goto	u80
   374   00102A                     u81:
   375   00102A  EF0D  F008         	goto	l856
   376   00102E                     u80:
   377   00102E                     
   378                           ;source/filter.c: 32:           }else{
   379   00102E  EF68  F008         	goto	l86
   380   001032                     l864:
   381                           
   382                           ;source/filter.c: 38:           if(vstup == 1){
   383   001032  0405               	decf	filterFce@vstup^0,w,c
   384   001034  A4D8               	btfss	status,2,c
   385   001036  EF1F  F008         	goto	u91
   386   00103A  EF21  F008         	goto	u90
   387   00103E                     u91:
   388   00103E  EF0D  F008         	goto	l856
   389   001042                     u90:
   390   001042                     
   391                           ;source/filter.c: 40:               tlacitko->vystupFilter = 1;
   392   001042  5004               	movf	filterFce@tlacitko^0,w,c
   393   001044  6ED9               	movwf	fsr2l,c
   394   001046  6ADA               	clrf	fsr2h,c
   395   001048  0E01               	movlw	1
   396   00104A  26D9               	addwf	fsr2l,f,c
   397   00104C  0E01               	movlw	1
   398   00104E  6EDF               	movwf	indf2,c
   399                           
   400                           ;source/filter.c: 41:           }else{
   401   001050  EF68  F008         	goto	l86
   402   001054                     l872:
   403                           
   404                           ;source/filter.c: 47:           if(vstup == 0){
   405   001054  5005               	movf	filterFce@vstup^0,w,c
   406   001056  A4D8               	btfss	status,2,c
   407   001058  EF30  F008         	goto	u101
   408   00105C  EF32  F008         	goto	u100
   409   001060                     u101:
   410   001060  EF0B  F008         	goto	l854
   411   001064                     u100:
   412   001064                     
   413                           ;source/filter.c: 49:           }else{
   414   001064  EF68  F008         	goto	l86
   415   001068                     l878:
   416                           
   417                           ;source/filter.c: 56:           if(vstup == 0){
   418   001068  5005               	movf	filterFce@vstup^0,w,c
   419   00106A  A4D8               	btfss	status,2,c
   420   00106C  EF3A  F008         	goto	u111
   421   001070  EF3C  F008         	goto	u110
   422   001074                     u111:
   423   001074  EF0B  F008         	goto	l854
   424   001078                     u110:
   425   001078                     
   426                           ;source/filter.c: 58:               tlacitko->vystupFilter = 0;
   427   001078  5004               	movf	filterFce@tlacitko^0,w,c
   428   00107A  6ED9               	movwf	fsr2l,c
   429   00107C  6ADA               	clrf	fsr2h,c
   430   00107E  0E01               	movlw	1
   431   001080  26D9               	addwf	fsr2l,f,c
   432   001082  6ADF               	clrf	indf2,c
   433                           
   434                           ;source/filter.c: 59:           }else{
   435   001084  EF68  F008         	goto	l86
   436   001088                     l888:
   437   001088  5004               	movf	filterFce@tlacitko^0,w,c
   438   00108A  6ED9               	movwf	fsr2l,c
   439   00108C  6ADA               	clrf	fsr2h,c
   440   00108E  50DF               	movf	indf2,w,c
   441   001090  6E06               	movwf	??_filterFce^0,c
   442   001092  6A07               	clrf	(??_filterFce+1)^0,c
   443                           
   444                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   445                           ; Switch size 1, requested type "simple"
   446                           ; Number of cases is 1, Range of values is 0 to 0
   447                           ; switch strategies available:
   448                           ; Name         Instructions Cycles
   449                           ; simple_byte            4     3 (average)
   450                           ;	Chosen strategy is simple_byte
   451   001094  5007               	movf	(??_filterFce+1)^0,w,c
   452   001096  0A00               	xorlw	0	; case 0
   453   001098  B4D8               	btfsc	status,2,c
   454   00109A  EF51  F008         	goto	l910
   455   00109E  EF68  F008         	goto	l86
   456   0010A2                     l910:
   457                           
   458                           ; Switch size 1, requested type "simple"
   459                           ; Number of cases is 5, Range of values is 0 to 4
   460                           ; switch strategies available:
   461                           ; Name         Instructions Cycles
   462                           ; simple_byte           16     9 (average)
   463                           ;	Chosen strategy is simple_byte
   464   0010A2  5006               	movf	??_filterFce^0,w,c
   465   0010A4  0A00               	xorlw	0	; case 0
   466   0010A6  B4D8               	btfsc	status,2,c
   467   0010A8  EF03  F008         	goto	l852
   468   0010AC  0A01               	xorlw	1	; case 1
   469   0010AE  B4D8               	btfsc	status,2,c
   470   0010B0  EF0F  F008         	goto	l858
   471   0010B4  0A03               	xorlw	3	; case 2
   472   0010B6  B4D8               	btfsc	status,2,c
   473   0010B8  EF19  F008         	goto	l864
   474   0010BC  0A01               	xorlw	1	; case 3
   475   0010BE  B4D8               	btfsc	status,2,c
   476   0010C0  EF2A  F008         	goto	l872
   477   0010C4  0A07               	xorlw	7	; case 4
   478   0010C6  B4D8               	btfsc	status,2,c
   479   0010C8  EF34  F008         	goto	l878
   480   0010CC  EF68  F008         	goto	l86
   481   0010D0                     l86:
   482   0010D0  0012               	return		;funcret
   483   0010D2                     __end_of_filterFce:
   484                           	callstack 0
   485                           
   486 ;; *************** function _low_isr *****************
   487 ;; Defined at:
   488 ;;		line 95 in file "source/main.c"
   489 ;; Parameters:    Size  Location     Type
   490 ;;		None
   491 ;; Auto vars:     Size  Location     Type
   492 ;;		None
   493 ;; Return value:  Size  Location     Type
   494 ;;                  1    wreg      void 
   495 ;; Registers used:
   496 ;;		wreg, status,2
   497 ;; Tracked objects:
   498 ;;		On entry : 0/0
   499 ;;		On exit  : 0/0
   500 ;;		Unchanged: 0/0
   501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   504 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   505 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   506 ;;Total ram usage:        3 bytes
   507 ;; Hardware stack levels used: 1
   508 ;; Hardware stack levels required when called: 1
   509 ;; This function calls:
   510 ;;		Nothing
   511 ;; This function is called by:
   512 ;;		Interrupt level 1
   513 ;; This function uses a non-reentrant model
   514 ;;
   515                           
   516                           	psect	intcodelo
   517   000018                     __pintcodelo:
   518                           	callstack 0
   519   000018                     _low_isr:
   520                           	callstack 28
   521                           
   522                           ;incstack = 0
   523   000018  800E               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   524   00001A  CFD8 F001          	movff	status,??_low_isr
   525   00001E  CFE8 F002          	movff	wreg,??_low_isr+1
   526   000022  CFE0 F003          	movff	bsr,??_low_isr+2
   527   000026                     
   528                           ;source/main.c: 97:     if(INTCONbits.TMR0IF == 1)
   529   000026  A4F2               	btfss	242,2,c	;volatile
   530   000028  EF18  F000         	goto	i1u6_21
   531   00002C  EF1A  F000         	goto	i1u6_20
   532   000030                     i1u6_21:
   533   000030  EF1F  F000         	goto	i1l39
   534   000034                     i1u6_20:
   535   000034                     
   536                           ;source/main.c: 98:     {;source/main.c: 99:         TMR0H = 0xD8;
   537   000034  0ED8               	movlw	216
   538   000036  6ED7               	movwf	215,c	;volatile
   539                           
   540                           ;source/main.c: 100:         TMR0L = 0xEF;
   541   000038  0EEF               	movlw	239
   542   00003A  6ED6               	movwf	214,c	;volatile
   543   00003C                     
   544                           ;source/main.c: 101:         INTCONbits.TMR0IF = 0;
   545   00003C  94F2               	bcf	242,2,c	;volatile
   546   00003E                     i1l39:
   547   00003E  C003  FFE0         	movff	??_low_isr+2,bsr
   548   000042  C002  FFE8         	movff	??_low_isr+1,wreg
   549   000046  C001  FFD8         	movff	??_low_isr,status
   550   00004A  900E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   551   00004C  0010               	retfie	
   552   00004E                     __end_of_low_isr:
   553                           	callstack 0
   554                           
   555 ;; *************** function _high_isr *****************
   556 ;; Defined at:
   557 ;;		line 89 in file "source/main.c"
   558 ;; Parameters:    Size  Location     Type
   559 ;;		None
   560 ;; Auto vars:     Size  Location     Type
   561 ;;		None
   562 ;; Return value:  Size  Location     Type
   563 ;;                  1    wreg      void 
   564 ;; Registers used:
   565 ;;		None
   566 ;; Tracked objects:
   567 ;;		On entry : 0/0
   568 ;;		On exit  : 0/0
   569 ;;		Unchanged: 0/0
   570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   575 ;;Total ram usage:        0 bytes
   576 ;; Hardware stack levels used: 1
   577 ;; This function calls:
   578 ;;		Nothing
   579 ;; This function is called by:
   580 ;;		Interrupt level 2
   581 ;; This function uses a non-reentrant model
   582 ;;
   583                           
   584                           	psect	intcode
   585   000008                     __pintcode:
   586                           	callstack 0
   587   000008                     _high_isr:
   588                           	callstack 28
   589                           
   590                           ;incstack = 0
   591   000008  820E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   592   00000A  EFB3  F008         	goto	int_func
   593                           
   594                           	psect	intcode_body
   595   001166                     __pintcode_body:
   596                           	callstack 28
   597   001166                     int_func:
   598                           	callstack 28
   599   001166  920E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   600   001168  0011               	retfie		f
   601   00116A                     __end_of_high_isr:
   602                           	callstack 0
   603                           
   604                           	psect	smallconst
   605   001000                     __psmallconst:
   606                           	callstack 0
   607   001000  00                 	db	0
   608   001001  00                 	db	0	; dummy byte at the end
   609   000000                     
   610                           	psect	rparam
   611   000000                     
   612                           	psect	temp
   613   00000E                     btemp:
   614                           	callstack 0
   615   00000E                     	ds	1
   616   000000                     int$flags	set	btemp
   617   000000                     wtemp8	set	btemp+1
   618   000000                     ttemp5	set	btemp+1
   619   000000                     ttemp6	set	btemp+4
   620   000000                     ttemp7	set	btemp+8
   621                           
   622                           	psect	config
   623                           
   624                           ;Config register CONFIG1L @ 0x1FFF8
   625                           ;	Watchdog Timer Enable bit
   626                           ;	WDTEN = OFF, WDT disabled (control is placed on SWDTEN bit)
   627                           ;	Stack Overflow/Underflow Reset Enable bit
   628                           ;	STVREN = ON, Reset on stack overflow/underflow enabled
   629                           ;	Extended Instruction Set Enable bit
   630                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   631                           ;	Background Debugger Enable bit
   632                           ;	DEBUG = 0x1, unprogrammed default
   633   01FFF8                     	org	131064
   634   01FFF8  A0                 	db	160
   635                           
   636                           ;Config register CONFIG1H @ 0x1FFF9
   637                           ;	Code Protection bit
   638                           ;	CP0 = OFF, Program memory is not code-protected
   639   01FFF9                     	org	131065
   640   01FFF9  F4                 	db	244
   641                           
   642                           ;Config register CONFIG2L @ 0x1FFFA
   643                           ;	Oscillator Selection bits
   644                           ;	FOSC = HSPLL, HS oscillator, PLL enabled
   645                           ;	Fail-Safe Clock Monitor Enable bit
   646                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   647                           ;	Two-Speed Start-up (Internal/External Oscillator Switchover) Control bit
   648                           ;	IESO = OFF, Two-Speed Start-up disabled
   649   01FFFA                     	org	131066
   650   01FFFA  05                 	db	5
   651                           
   652                           ;Config register CONFIG2H @ 0x1FFFB
   653                           ;	Watchdog Timer Postscaler Select bits
   654                           ;	WDTPS = 32768, 1:32768
   655   01FFFB                     	org	131067
   656   01FFFB  FF                 	db	255
   657                           
   658                           ;Config register CONFIG3L @ 0x1FFFC
   659                           ;	External Address Bus Shift Enable bit
   660                           ;	EASHFT = 0x1, unprogrammed default
   661                           ;	External Memory Bus Configuration bits
   662                           ;	MODE = MM, Microcontroller mode - External bus disabled
   663                           ;	Data Bus Width Select bit
   664                           ;	BW = 0x1, unprogrammed default
   665                           ;	External Bus Wait Enable bit
   666                           ;	WAIT = 0x1, unprogrammed default
   667   01FFFC                     	org	131068
   668   01FFFC  F8                 	db	248
   669                           
   670                           ;Config register CONFIG3H @ 0x1FFFD
   671                           ;	unspecified, using default values
   672                           ;	ECCP2 MUX bit
   673                           ;	CCP2MX = 0x1, unprogrammed default
   674                           ;	ECCPx MUX bit
   675                           ;	ECCPMX = 0x1, unprogrammed default
   676                           ;	PMP Pin Multiplex bit
   677                           ;	PMPMX = 0x1, unprogrammed default
   678                           ;	MSSP Address Masking Mode Select bit
   679                           ;	MSSPMSK = 0x1, unprogrammed default
   680   01FFFD                     	org	131069
   681   01FFFD  FF                 	db	255
   682                           tosu	equ	0xFFF
   683                           tosh	equ	0xFFE
   684                           tosl	equ	0xFFD
   685                           stkptr	equ	0xFFC
   686                           pclatu	equ	0xFFB
   687                           pclath	equ	0xFFA
   688                           pcl	equ	0xFF9
   689                           tblptru	equ	0xFF8
   690                           tblptrh	equ	0xFF7
   691                           tblptrl	equ	0xFF6
   692                           tablat	equ	0xFF5
   693                           prodh	equ	0xFF4
   694                           prodl	equ	0xFF3
   695                           indf0	equ	0xFEF
   696                           postinc0	equ	0xFEE
   697                           postdec0	equ	0xFED
   698                           preinc0	equ	0xFEC
   699                           plusw0	equ	0xFEB
   700                           fsr0h	equ	0xFEA
   701                           fsr0l	equ	0xFE9
   702                           wreg	equ	0xFE8
   703                           indf1	equ	0xFE7
   704                           postinc1	equ	0xFE6
   705                           postdec1	equ	0xFE5
   706                           preinc1	equ	0xFE4
   707                           plusw1	equ	0xFE3
   708                           fsr1h	equ	0xFE2
   709                           fsr1l	equ	0xFE1
   710                           bsr	equ	0xFE0
   711                           indf2	equ	0xFDF
   712                           postinc2	equ	0xFDE
   713                           postdec2	equ	0xFDD
   714                           preinc2	equ	0xFDC
   715                           plusw2	equ	0xFDB
   716                           fsr2h	equ	0xFDA
   717                           fsr2l	equ	0xFD9
   718                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      7      13
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           64      0       0

Pointer List with Targets:

    filterFce@tlacitko	PTR struct . size(1) Largest target is 2
		 -> S4(COMRAM[2]), S5A(COMRAM[2]), S5B(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_filterFce

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _low_isr in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     643
                          _filterFce
             _preambleInitialization
 ---------------------------------------------------------------------------------
 (1) _preambleInitialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _filterFce                                            5     3      2     643
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _low_isr                                              3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _high_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _filterFce
   _preambleInitialization

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F3F      0       0      45        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      7       D       1       13.8%
BITBANK15           40      0       0      34        0.0%
BANK15              40      0       0      35        0.0%
BITBIGSFRhlllhl     34      0       0      40        0.0%
BITBIGSFRll         29      0       0      43        0.0%
BITBIGSFRhlh        19      0       0      37        0.0%
BITBIGSFRhllll      12      0       0      41        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRlh          4      0       0      42        0.0%
BITBIGSFRhlllhh      2      0       0      39        0.0%
BITBIGSFRhllh        1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       D      44        0.0%
DATA                 0      0       D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Nov 17 12:00:01 2023

                            l60 114E                              l86 10D0                              _S4 000C  
                            u70 1016                              u71 1012                              u80 102E  
                            u81 102A                              u90 1042                              u91 103E  
                            bsr 0FE0                             l900 10FE                             l910 10A2  
                           l902 110E                             l904 111E                             l850 1002  
                           l770 1140                             l762 112E                             l860 102E  
                           l852 1006                             l772 1142                             l764 1132  
                           l854 1016                             l774 1144                             l766 1134  
                           l880 1078                             l872 1054                             l864 1032  
                           l856 101A                             l776 114A                             l768 113E  
                           l882 1078                             l874 1064                             l866 1042  
                           l858 101E                             l778 114C                             l868 1042  
                           l878 1068                             l894 10D2                             l888 1088  
                           l896 10EA                             l898 10EE                             _S5A 000A  
                           _S5B 0008                             u100 1064                             u101 1060  
                           u110 1078                             u111 1074                             wreg 0FE8  
                          i1l39 003E                            i2l33 1166                            _main 10D2  
                          fsr2h 0FDA                            indf2 0FDF                            fsr2l 0FD9  
                          btemp 000E                            start 004E                    ___param_bank 0000  
                         ?_main 0001                           _T0CON 0FD5                           i1l840 003C  
                         i1l836 0026                           i1l838 0034                           _TMR0H 0FD7  
                         _TMR0L 0FD6                 __end_of_low_isr 004E                           ttemp5 000F  
                         ttemp6 0012                           ttemp7 0016                           status 0FD8  
                         wtemp8 000F                 __initialization 1150                    __end_of_main 112E  
                        ??_main 0008                   __activetblptr 0003                          i1u6_20 0034  
                        i1u6_21 0030                __end_of_high_isr 116A          _preambleInitialization 112E  
                        isa$std 0001                    __mediumconst 0000                       ??_low_isr 0001  
                    __accesstop 0060         __end_of__initialization 115C                   ___rparam_used 0001  
                __pcstackCOMRAM 0001                       ?_high_isr 0001                         __Hparam 0000  
                       __Lparam 0000               __end_of_filterFce 10D2                    __psmallconst 1000  
                       __pcinit 1150                         __ramtop 1000                         __ptext0 10D2  
                       __ptext1 112E                         __ptext2 1002                       _T0CONbits 0FD5  
                       _low_isr 0018                      ??_high_isr 0001                  __pintcode_body 1166  
          end_of_initialization 115C                         int_func 1166                  filterFce@vstup 0005  
       ?_preambleInitialization 0001                       _PORTDbits 0F83                       _PORTJbits 0F88  
__end_of_preambleInitialization 1150             start_initialization 1150                     __pbssCOMRAM 0008  
                     __pintcode 0008                     __pintcodelo 0018                       _filterFce 1002  
                   __smallconst 1000                        ?_low_isr 0001               filterFce@tlacitko 0004  
                      _RCONbits 0FD0                      ?_filterFce 0004                     _INTCON2bits 0FF1  
                      __Hrparam 0000                        __Lrparam 0000                        _high_isr 0008  
                      isa$xinst 0000                        int$flags 000E                     ??_filterFce 0006  
                   _OSCTUNEbits 0F9B                      _INTCONbits 0FF2                        intlevel1 0000  
                      intlevel2 0000                      _OSCCONbits 0FD3        ??_preambleInitialization 0004  
