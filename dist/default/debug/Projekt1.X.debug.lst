

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Dec 19 16:36:28 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F87J11
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    18                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Generated 23/03/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F87J11 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000000                     _ADCON1	set	4033
    59   000000                     _ADRESL	set	4035
    60   000000                     _ADRESH	set	4036
    61   000000                     _ADCON0	set	4034
    62   000000                     _ANCON1bits	set	4034
    63   000000                     _TRISFbits	set	3991
    64   000000                     _T0CONbits	set	4053
    65   000000                     _PORTFbits	set	3973
    66   000000                     _PORTJbits	set	3976
    67   000000                     _LATDbits	set	3980
    68   000000                     _TRISD	set	3989
    69   000000                     _TRISJ	set	3994
    70   000000                     _PIR1bits	set	3998
    71   000000                     _ADCON0bits	set	4034
    72   000000                     _TMR0L	set	4054
    73   000000                     _TMR0H	set	4055
    74   000000                     _INTCONbits	set	4082
    75   000000                     _PORTH	set	3975
    76   000000                     _INTCON2bits	set	4081
    77   000000                     _IPR1bits	set	3999
    78   000000                     _WDTCONbits	set	4032
    79   000000                     _RCONbits	set	4048
    80   000000                     _OSCCONbits	set	4051
    81   000000                     _T0CON	set	4053
    82   000000                     _OSCTUNEbits	set	3995
    83   000000                     _PIE1bits	set	3997
    84   000000                     _TRISF	set	3991
    85   000000                     _TRISH	set	3993
    86                           
    87                           ; #config settings
    88                           
    89                           	psect	cinit
    90   0018BA                     __pcinit:
    91                           	callstack 0
    92   0018BA                     start_initialization:
    93                           	callstack 0
    94   0018BA                     __initialization:
    95                           	callstack 0
    96                           
    97                           ; Clear objects allocated to COMRAM (26 bytes)
    98   0018BA  EE00  F001         	lfsr	0,__pbssCOMRAM
    99   0018BE  0E1A               	movlw	26
   100   0018C0                     clear_0:
   101   0018C0  6AEE               	clrf	postinc0,c
   102   0018C2  06E8               	decf	wreg,f,c
   103   0018C4  E1FD               	bnz	clear_0
   104   0018C6                     end_of_initialization:
   105                           	callstack 0
   106   0018C6                     __end_of__initialization:
   107                           	callstack 0
   108   0018C6  902C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   109   0018C8  922C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   110   0018CA  0100               	movlb	0
   111   0018CC  EF74  F009         	goto	_main	;jump to C main() function
   112                           
   113                           	psect	bssCOMRAM
   114   000001                     __pbssCOMRAM:
   115                           	callstack 0
   116   000001                     _adKalkulace:
   117                           	callstack 0
   118   000001                     	ds	4
   119   000005                     _comp:
   120                           	callstack 0
   121   000005                     	ds	2
   122   000007                     _vysledek:
   123                           	callstack 0
   124   000007                     	ds	2
   125   000009                     _vystup:
   126                           	callstack 0
   127   000009                     	ds	1
   128   00000A                     _ADRhotovo:
   129                           	callstack 0
   130   00000A                     	ds	1
   131   00000B                     _is10ms:
   132                           	callstack 0
   133   00000B                     	ds	1
   134   00000C                     _is1ms:
   135                           	callstack 0
   136   00000C                     	ds	1
   137   00000D                     _dekoderAB:
   138                           	callstack 0
   139   00000D                     	ds	2
   140   00000F                     _S3Filtr:
   141                           	callstack 0
   142   00000F                     	ds	2
   143   000011                     _S4Filtr:
   144                           	callstack 0
   145   000011                     	ds	2
   146   000013                     _S5B:
   147                           	callstack 0
   148   000013                     	ds	2
   149   000015                     _S5A:
   150                           	callstack 0
   151   000015                     	ds	2
   152   000017                     _S3:
   153                           	callstack 0
   154   000017                     	ds	2
   155   000019                     _S4:
   156                           	callstack 0
   157   000019                     	ds	2
   158                           
   159                           	psect	cstackCOMRAM
   160   00001B                     __pcstackCOMRAM:
   161                           	callstack 0
   162   00001B                     ??_low_isr:
   163                           
   164                           ; 1 bytes @ 0x0
   165   00001B                     	ds	3
   166   00001E                     ?___lmul:
   167                           	callstack 0
   168   00001E                     ?___aldiv:
   169                           	callstack 0
   170   00001E                     filterFce@tlacitko:
   171                           	callstack 0
   172   00001E                     pametFce@tlacitko:
   173                           	callstack 0
   174   00001E                     dekoderFce@tlacitko:
   175                           	callstack 0
   176   00001E                     ___lmul@multiplier:
   177                           	callstack 0
   178   00001E                     ___aldiv@dividend:
   179                           	callstack 0
   180                           
   181                           ; 4 bytes @ 0x3
   182   00001E                     	ds	1
   183   00001F                     filterFce@vstup:
   184                           	callstack 0
   185   00001F                     pametFce@input:
   186                           	callstack 0
   187   00001F                     dekoderFce@A:
   188                           	callstack 0
   189                           
   190                           ; 1 bytes @ 0x4
   191   00001F                     	ds	1
   192   000020                     ??_filterFce:
   193   000020                     ??_pametFce:
   194   000020                     dekoderFce@B:
   195                           	callstack 0
   196                           
   197                           ; 1 bytes @ 0x5
   198   000020                     	ds	1
   199   000021                     ??_dekoderFce:
   200                           
   201                           ; 1 bytes @ 0x6
   202   000021                     	ds	1
   203   000022                     filterFce@dalsiStav:
   204                           	callstack 0
   205   000022                     pametFce@dalsiStav:
   206                           	callstack 0
   207   000022                     ___lmul@multiplicand:
   208                           	callstack 0
   209   000022                     ___aldiv@divisor:
   210                           	callstack 0
   211                           
   212                           ; 4 bytes @ 0x7
   213   000022                     	ds	4
   214   000026                     ___aldiv@counter:
   215                           	callstack 0
   216   000026                     ___lmul@product:
   217                           	callstack 0
   218                           
   219                           ; 4 bytes @ 0xB
   220   000026                     	ds	1
   221   000027                     ___aldiv@sign:
   222                           	callstack 0
   223                           
   224                           ; 1 bytes @ 0xC
   225   000027                     	ds	1
   226   000028                     ___aldiv@quotient:
   227                           	callstack 0
   228                           
   229                           ; 4 bytes @ 0xD
   230   000028                     	ds	4
   231   00002C                     
   232                           ; 1 bytes @ 0x11
   233 ;;
   234 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   235 ;;
   236 ;; *************** function _main *****************
   237 ;; Defined at:
   238 ;;		line 70 in file "source/main.c"
   239 ;; Parameters:    Size  Location     Type
   240 ;;		None
   241 ;; Auto vars:     Size  Location     Type
   242 ;;		None
   243 ;; Return value:  Size  Location     Type
   244 ;;                  1    wreg      void 
   245 ;; Registers used:
   246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   247 ;; Tracked objects:
   248 ;;		On entry : 0/0
   249 ;;		On exit  : 0/0
   250 ;;		Unchanged: 0/0
   251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   256 ;;Total ram usage:        0 bytes
   257 ;; Hardware stack levels required when called: 3
   258 ;; This function calls:
   259 ;;		___aldiv
   260 ;;		___lmul
   261 ;;		_dekoderFce
   262 ;;		_filterFce
   263 ;;		_pametFce
   264 ;;		_preambleInitialization
   265 ;; This function is called by:
   266 ;;		Startup code after reset
   267 ;; This function uses a non-reentrant model
   268 ;;
   269                           
   270                           	psect	text0
   271   0012E8                     __ptext0:
   272                           	callstack 0
   273   0012E8                     _main:
   274                           	callstack 28
   275   0012E8                     
   276                           ;source/main.c: 73:     S4.stav = 0;
   277   0012E8  0E00               	movlw	0
   278   0012EA  6E19               	movwf	_S4^0,c
   279                           
   280                           ;source/main.c: 74:     S4.vystup = 0;
   281   0012EC  0E00               	movlw	0
   282   0012EE  6E1A               	movwf	(_S4+1)^0,c
   283                           
   284                           ;source/main.c: 76:     S3.stav = 0;
   285   0012F0  0E00               	movlw	0
   286   0012F2  6E17               	movwf	_S3^0,c
   287                           
   288                           ;source/main.c: 77:     S3.vystup = 0;
   289   0012F4  0E00               	movlw	0
   290   0012F6  6E18               	movwf	(_S3+1)^0,c
   291                           
   292                           ;source/main.c: 79:     S5A.stav = 0;
   293   0012F8  0E00               	movlw	0
   294   0012FA  6E15               	movwf	_S5A^0,c
   295                           
   296                           ;source/main.c: 80:     S5A.vystup = 0;
   297   0012FC  0E00               	movlw	0
   298   0012FE  6E16               	movwf	(_S5A+1)^0,c
   299                           
   300                           ;source/main.c: 82:     S5B.stav = 0;
   301   001300  0E00               	movlw	0
   302   001302  6E13               	movwf	_S5B^0,c
   303                           
   304                           ;source/main.c: 83:     S5B.vystup = 0;
   305   001304  0E00               	movlw	0
   306   001306  6E14               	movwf	(_S5B+1)^0,c
   307                           
   308                           ;source/main.c: 85:     S4Filtr.stav = 0;
   309   001308  0E00               	movlw	0
   310   00130A  6E11               	movwf	_S4Filtr^0,c
   311                           
   312                           ;source/main.c: 86:     S4Filtr.vystup = 0;
   313   00130C  0E00               	movlw	0
   314   00130E  6E12               	movwf	(_S4Filtr+1)^0,c
   315                           
   316                           ;source/main.c: 88:     S3Filtr.stav = 0;
   317   001310  0E00               	movlw	0
   318   001312  6E0F               	movwf	_S3Filtr^0,c
   319                           
   320                           ;source/main.c: 89:     S3Filtr.vystup = 0;
   321   001314  0E00               	movlw	0
   322   001316  6E10               	movwf	(_S3Filtr+1)^0,c
   323                           
   324                           ;source/main.c: 91:     dekoderAB.stav = 0;
   325   001318  0E00               	movlw	0
   326   00131A  6E0D               	movwf	_dekoderAB^0,c
   327                           
   328                           ;source/main.c: 92:     dekoderAB.vystup = 0;
   329   00131C  0E00               	movlw	0
   330   00131E  6E0E               	movwf	(_dekoderAB+1)^0,c
   331                           
   332                           ;source/main.c: 94:     ADRhotovo = 0;
   333   001320  0E00               	movlw	0
   334   001322  6E0A               	movwf	_ADRhotovo^0,c
   335   001324                     
   336                           ;source/main.c: 98:   preambleInitialization();
   337   001324  EC3B  F00C         	call	_preambleInitialization	;wreg free
   338   001328                     l1496:
   339                           
   340                           ;source/main.c: 104:   {;source/main.c: 107:     if(ADRhotovo == 1){
   341   001328  040A               	decf	_ADRhotovo^0,w,c
   342   00132A  A4D8               	btfss	status,2,c
   343   00132C  EF9A  F009         	goto	u1001
   344   001330  EF9C  F009         	goto	u1000
   345   001334                     u1001:
   346   001334  EF1A  F00A         	goto	l62
   347   001338                     u1000:
   348   001338                     
   349                           ;source/main.c: 108:         adKalkulace = (long)vysledek;
   350   001338  C007  F001         	movff	_vysledek,_adKalkulace
   351   00133C  C008  F002         	movff	_vysledek+1,_adKalkulace+1
   352   001340  0E00               	movlw	0
   353   001342  BE02               	btfsc	(_adKalkulace+1)^0,7,c
   354   001344  0EFF               	movlw	-1
   355   001346  6E03               	movwf	(_adKalkulace+2)^0,c
   356   001348  6E04               	movwf	(_adKalkulace+3)^0,c
   357   00134A                     
   358                           ;source/main.c: 109:         if(adKalkulace >= 1000){
   359   00134A  BE04               	btfsc	(_adKalkulace+3)^0,7,c
   360   00134C  EFB4  F009         	goto	u1011
   361   001350  5004               	movf	(_adKalkulace+3)^0,w,c
   362   001352  1003               	iorwf	(_adKalkulace+2)^0,w,c
   363   001354  E10B               	bnz	u1010
   364   001356  0EE8               	movlw	232
   365   001358  5C01               	subwf	_adKalkulace^0,w,c
   366   00135A  0E03               	movlw	3
   367   00135C  5802               	subwfb	(_adKalkulace+1)^0,w,c
   368   00135E  A0D8               	btfss	status,0,c
   369   001360  EFB4  F009         	goto	u1011
   370   001364  EFB6  F009         	goto	u1010
   371   001368                     u1011:
   372   001368  EFBE  F009         	goto	l1504
   373   00136C                     u1010:
   374   00136C                     
   375                           ;source/main.c: 110:             adKalkulace = 1000;
   376   00136C  0EE8               	movlw	232
   377   00136E  6E01               	movwf	_adKalkulace^0,c
   378   001370  0E03               	movlw	3
   379   001372  6E02               	movwf	(_adKalkulace+1)^0,c
   380   001374  0E00               	movlw	0
   381   001376  6E03               	movwf	(_adKalkulace+2)^0,c
   382   001378  0E00               	movlw	0
   383   00137A  6E04               	movwf	(_adKalkulace+3)^0,c
   384   00137C                     l1504:
   385                           
   386                           ;source/main.c: 112:         if(adKalkulace <= 50){
   387   00137C  BE04               	btfsc	(_adKalkulace+3)^0,7,c
   388   00137E  EFCE  F009         	goto	u1020
   389   001382  5004               	movf	(_adKalkulace+3)^0,w,c
   390   001384  1003               	iorwf	(_adKalkulace+2)^0,w,c
   391   001386  1002               	iorwf	(_adKalkulace+1)^0,w,c
   392   001388  E107               	bnz	u1021
   393   00138A  0E33               	movlw	51
   394   00138C  5C01               	subwf	_adKalkulace^0,w,c
   395   00138E  B0D8               	btfsc	status,0,c
   396   001390  EFCC  F009         	goto	u1021
   397   001394  EFCE  F009         	goto	u1020
   398   001398                     u1021:
   399   001398  EFD6  F009         	goto	l1508
   400   00139C                     u1020:
   401   00139C                     
   402                           ;source/main.c: 113:             adKalkulace = 50;
   403   00139C  0E32               	movlw	50
   404   00139E  6E01               	movwf	_adKalkulace^0,c
   405   0013A0  0E00               	movlw	0
   406   0013A2  6E02               	movwf	(_adKalkulace+1)^0,c
   407   0013A4  0E00               	movlw	0
   408   0013A6  6E03               	movwf	(_adKalkulace+2)^0,c
   409   0013A8  0E00               	movlw	0
   410   0013AA  6E04               	movwf	(_adKalkulace+3)^0,c
   411   0013AC                     l1508:
   412                           
   413                           ;source/main.c: 115:         adKalkulace = adKalkulace - 50;
   414   0013AC  0ECE               	movlw	206
   415   0013AE  2401               	addwf	_adKalkulace^0,w,c
   416   0013B0  6E01               	movwf	_adKalkulace^0,c
   417   0013B2  0EFF               	movlw	255
   418   0013B4  2002               	addwfc	(_adKalkulace+1)^0,w,c
   419   0013B6  6E02               	movwf	(_adKalkulace+1)^0,c
   420   0013B8  0EFF               	movlw	255
   421   0013BA  2003               	addwfc	(_adKalkulace+2)^0,w,c
   422   0013BC  6E03               	movwf	(_adKalkulace+2)^0,c
   423   0013BE  0EFF               	movlw	255
   424   0013C0  2004               	addwfc	(_adKalkulace+3)^0,w,c
   425   0013C2  6E04               	movwf	(_adKalkulace+3)^0,c
   426   0013C4                     
   427                           ;source/main.c: 116:         adKalkulace = adKalkulace * 255;
   428   0013C4  C001  F01E         	movff	_adKalkulace,___lmul@multiplier
   429   0013C8  C002  F01F         	movff	_adKalkulace+1,___lmul@multiplier+1
   430   0013CC  C003  F020         	movff	_adKalkulace+2,___lmul@multiplier+2
   431   0013D0  C004  F021         	movff	_adKalkulace+3,___lmul@multiplier+3
   432   0013D4  0EFF               	movlw	255
   433   0013D6  6E22               	movwf	___lmul@multiplicand^0,c
   434   0013D8  0E00               	movlw	0
   435   0013DA  6E23               	movwf	(___lmul@multiplicand+1)^0,c
   436   0013DC  0E00               	movlw	0
   437   0013DE  6E24               	movwf	(___lmul@multiplicand+2)^0,c
   438   0013E0  0E00               	movlw	0
   439   0013E2  6E25               	movwf	(___lmul@multiplicand+3)^0,c
   440   0013E4  EC06  F00C         	call	___lmul	;wreg free
   441   0013E8  C01E  F001         	movff	?___lmul,_adKalkulace
   442   0013EC  C01F  F002         	movff	?___lmul+1,_adKalkulace+1
   443   0013F0  C020  F003         	movff	?___lmul+2,_adKalkulace+2
   444   0013F4  C021  F004         	movff	?___lmul+3,_adKalkulace+3
   445   0013F8                     
   446                           ;source/main.c: 117:         adKalkulace = adKalkulace / (1000-50);
   447   0013F8  C001  F01E         	movff	_adKalkulace,___aldiv@dividend
   448   0013FC  C002  F01F         	movff	_adKalkulace+1,___aldiv@dividend+1
   449   001400  C003  F020         	movff	_adKalkulace+2,___aldiv@dividend+2
   450   001404  C004  F021         	movff	_adKalkulace+3,___aldiv@dividend+3
   451   001408  0EB6               	movlw	182
   452   00140A  6E22               	movwf	___aldiv@divisor^0,c
   453   00140C  0E03               	movlw	3
   454   00140E  6E23               	movwf	(___aldiv@divisor+1)^0,c
   455   001410  0E00               	movlw	0
   456   001412  6E24               	movwf	(___aldiv@divisor+2)^0,c
   457   001414  0E00               	movlw	0
   458   001416  6E25               	movwf	(___aldiv@divisor+3)^0,c
   459   001418  EC96  F00A         	call	___aldiv	;wreg free
   460   00141C  C01E  F001         	movff	?___aldiv,_adKalkulace
   461   001420  C01F  F002         	movff	?___aldiv+1,_adKalkulace+1
   462   001424  C020  F003         	movff	?___aldiv+2,_adKalkulace+2
   463   001428  C021  F004         	movff	?___aldiv+3,_adKalkulace+3
   464   00142C                     
   465                           ;source/main.c: 119:         vystup = (unsigned char)adKalkulace;
   466   00142C  C001  F009         	movff	_adKalkulace,_vystup
   467   001430                     
   468                           ;source/main.c: 120:         ADRhotovo = 0;
   469   001430  0E00               	movlw	0
   470   001432  6E0A               	movwf	_ADRhotovo^0,c
   471   001434                     l62:
   472                           
   473                           ;source/main.c: 123:       if(is1ms == 1){
   474   001434  040C               	decf	_is1ms^0,w,c
   475   001436  A4D8               	btfss	status,2,c
   476   001438  EF20  F00A         	goto	u1031
   477   00143C  EF22  F00A         	goto	u1030
   478   001440                     u1031:
   479   001440  EF58  F00A         	goto	l1522
   480   001444                     u1030:
   481   001444                     
   482                           ;source/main.c: 126:    filterFce(&S4, PORTJbits.RJ7);
   483   001444  0E19               	movlw	low _S4
   484   001446  6E1E               	movwf	filterFce@tlacitko^0,c
   485   001448  0E00               	movlw	0
   486   00144A  BE88               	btfsc	136,7,c	;volatile
   487   00144C  0E01               	movlw	1
   488   00144E  6E1F               	movwf	filterFce@vstup^0,c
   489   001450  EC1C  F00B         	call	_filterFce	;wreg free
   490                           
   491                           ;source/main.c: 127:    filterFce(&S3, PORTJbits.RJ6);
   492   001454  0E17               	movlw	low _S3
   493   001456  6E1E               	movwf	filterFce@tlacitko^0,c
   494   001458  0E00               	movlw	0
   495   00145A  BC88               	btfsc	136,6,c	;volatile
   496   00145C  0E01               	movlw	1
   497   00145E  6E1F               	movwf	filterFce@vstup^0,c
   498   001460  EC1C  F00B         	call	_filterFce	;wreg free
   499                           
   500                           ;source/main.c: 128:   pametFce(&S4Filtr, S4.vystup);
   501   001464  0E11               	movlw	low _S4Filtr
   502   001466  6E1E               	movwf	pametFce@tlacitko^0,c
   503   001468  C01A  F01F         	movff	_S4+1,pametFce@input
   504   00146C  EC97  F00B         	call	_pametFce	;wreg free
   505                           
   506                           ;source/main.c: 129:   pametFce(&S3Filtr, S3.vystup);
   507   001470  0E0F               	movlw	low _S3Filtr
   508   001472  6E1E               	movwf	pametFce@tlacitko^0,c
   509   001474  C018  F01F         	movff	_S3+1,pametFce@input
   510   001478  EC97  F00B         	call	_pametFce	;wreg free
   511                           
   512                           ;source/main.c: 130:   filterFce(&S5A, PORTJbits.RJ0);
   513   00147C  0E15               	movlw	low _S5A
   514   00147E  6E1E               	movwf	filterFce@tlacitko^0,c
   515   001480  0E00               	movlw	0
   516   001482  B088               	btfsc	136,0,c	;volatile
   517   001484  0E01               	movlw	1
   518   001486  6E1F               	movwf	filterFce@vstup^0,c
   519   001488  EC1C  F00B         	call	_filterFce	;wreg free
   520                           
   521                           ;source/main.c: 131:   filterFce(&S5B, PORTJbits.RJ1);
   522   00148C  0E13               	movlw	low _S5B
   523   00148E  6E1E               	movwf	filterFce@tlacitko^0,c
   524   001490  0E00               	movlw	0
   525   001492  B288               	btfsc	136,1,c	;volatile
   526   001494  0E01               	movlw	1
   527   001496  6E1F               	movwf	filterFce@vstup^0,c
   528   001498  EC1C  F00B         	call	_filterFce	;wreg free
   529                           
   530                           ;source/main.c: 132:   dekoderFce(&dekoderAB, S5A.vystup, S5B.vystup);
   531   00149C  0E0D               	movlw	low _dekoderAB
   532   00149E  6E1E               	movwf	dekoderFce@tlacitko^0,c
   533   0014A0  C016  F01F         	movff	_S5A+1,dekoderFce@A
   534   0014A4  C014  F020         	movff	_S5B+1,dekoderFce@B
   535   0014A8  EC01  F008         	call	_dekoderFce	;wreg free
   536   0014AC                     
   537                           ;source/main.c: 135:    is1ms = 0;
   538   0014AC  0E00               	movlw	0
   539   0014AE  6E0C               	movwf	_is1ms^0,c
   540   0014B0                     l1522:
   541                           
   542                           ;source/main.c: 137:   LATDbits.LATD7 = S4Filtr.vystup;
   543   0014B0  B012               	btfsc	(_S4Filtr+1)^0,0,c
   544   0014B2  D002               	bra	u1045
   545   0014B4  9E8C               	bcf	140,7,c	;volatile
   546   0014B6  D001               	bra	u1046
   547   0014B8                     u1045:
   548   0014B8  8E8C               	bsf	140,7,c	;volatile
   549   0014BA                     u1046:
   550   0014BA                     
   551                           ;source/main.c: 138:   LATDbits.LATD4 = S3Filtr.vystup;
   552   0014BA  B010               	btfsc	(_S3Filtr+1)^0,0,c
   553   0014BC  D002               	bra	u1055
   554   0014BE  988C               	bcf	140,4,c	;volatile
   555   0014C0  D001               	bra	u1056
   556   0014C2                     u1055:
   557   0014C2  888C               	bsf	140,4,c	;volatile
   558   0014C4                     u1056:
   559   0014C4                     
   560                           ;source/main.c: 139:   LATDbits.LATD5 = S5A.vystup;
   561   0014C4  B016               	btfsc	(_S5A+1)^0,0,c
   562   0014C6  D002               	bra	u1065
   563   0014C8  9A8C               	bcf	140,5,c	;volatile
   564   0014CA  D001               	bra	u1066
   565   0014CC                     u1065:
   566   0014CC  8A8C               	bsf	140,5,c	;volatile
   567   0014CE                     u1066:
   568   0014CE                     
   569                           ;source/main.c: 140:   LATDbits.LATD4 = S5B.vystup;
   570   0014CE  B014               	btfsc	(_S5B+1)^0,0,c
   571   0014D0  D002               	bra	u1075
   572   0014D2  988C               	bcf	140,4,c	;volatile
   573   0014D4  D001               	bra	u1076
   574   0014D6                     u1075:
   575   0014D6  888C               	bsf	140,4,c	;volatile
   576   0014D8                     u1076:
   577   0014D8                     
   578                           ;source/main.c: 143:  if(dekoderAB.vystup == 255){
   579   0014D8  280E               	incf	(_dekoderAB+1)^0,w,c
   580   0014DA  A4D8               	btfss	status,2,c
   581   0014DC  EF72  F00A         	goto	u1081
   582   0014E0  EF74  F00A         	goto	u1080
   583   0014E4                     u1081:
   584   0014E4  EF77  F00A         	goto	l1534
   585   0014E8                     u1080:
   586   0014E8                     
   587                           ;source/main.c: 144:      PORTFbits.RF1 = 1;
   588   0014E8  8285               	bsf	133,1,c	;volatile
   589                           
   590                           ;source/main.c: 145:  }
   591   0014EA  EF84  F00A         	goto	l1538
   592   0014EE                     l1534:
   593   0014EE  500E               	movf	(_dekoderAB+1)^0,w,c
   594   0014F0  A4D8               	btfss	status,2,c
   595   0014F2  EF7D  F00A         	goto	u1091
   596   0014F6  EF7F  F00A         	goto	u1090
   597   0014FA                     u1091:
   598   0014FA  EF82  F00A         	goto	l68
   599   0014FE                     u1090:
   600   0014FE                     
   601                           ;source/main.c: 147:      PORTFbits.RF2 = 1;
   602   0014FE  8485               	bsf	133,2,c	;volatile
   603                           
   604                           ;source/main.c: 148:  }
   605   001500  EF84  F00A         	goto	l1538
   606   001504                     l68:
   607                           
   608                           ;source/main.c: 150:      PORTFbits.RF1 = 0;
   609   001504  9285               	bcf	133,1,c	;volatile
   610                           
   611                           ;source/main.c: 151:      PORTFbits.RF2 = 0;
   612   001506  9485               	bcf	133,2,c	;volatile
   613   001508                     l1538:
   614                           
   615                           ;source/main.c: 155:      if(S4Filtr.vystup == 1){
   616   001508  0412               	decf	(_S4Filtr+1)^0,w,c
   617   00150A  A4D8               	btfss	status,2,c
   618   00150C  EF8A  F00A         	goto	u1101
   619   001510  EF8C  F00A         	goto	u1100
   620   001514                     u1101:
   621   001514  EF90  F00A         	goto	l70
   622   001518                     u1100:
   623   001518                     
   624                           ;source/main.c: 156:          PORTH = vystup;
   625   001518  C009  FF87         	movff	_vystup,3975	;volatile
   626                           
   627                           ;source/main.c: 157:      }
   628   00151C  EF94  F009         	goto	l1496
   629   001520                     l70:
   630                           
   631                           ;source/main.c: 160:          PORTH = dekoderAB.vystup;
   632   001520  C00E  FF87         	movff	_dekoderAB+1,3975	;volatile
   633   001524  EF94  F009         	goto	l1496
   634   001528  EF4B  F000         	goto	start
   635   00152C                     __end_of_main:
   636                           	callstack 0
   637                           
   638 ;; *************** function _preambleInitialization *****************
   639 ;; Defined at:
   640 ;;		line 19 in file "source/preambleInitialization.c"
   641 ;; Parameters:    Size  Location     Type
   642 ;;		None
   643 ;; Auto vars:     Size  Location     Type
   644 ;;		None
   645 ;; Return value:  Size  Location     Type
   646 ;;                  1    wreg      void 
   647 ;; Registers used:
   648 ;;		wreg, status,2
   649 ;; Tracked objects:
   650 ;;		On entry : 0/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   658 ;;Total ram usage:        0 bytes
   659 ;; Hardware stack levels used: 1
   660 ;; Hardware stack levels required when called: 2
   661 ;; This function calls:
   662 ;;		Nothing
   663 ;; This function is called by:
   664 ;;		_main
   665 ;; This function uses a non-reentrant model
   666 ;;
   667                           
   668                           	psect	text1
   669   001876                     __ptext1:
   670                           	callstack 0
   671   001876                     _preambleInitialization:
   672                           	callstack 28
   673   001876                     
   674                           ;source/preambleInitialization.c: 21:     T0CON = 0b10001000;
   675   001876  0E88               	movlw	136
   676   001878  6ED5               	movwf	213,c	;volatile
   677   00187A                     
   678                           ;source/preambleInitialization.c: 22:     T0CONbits.PSA = 1;
   679   00187A  86D5               	bsf	213,3,c	;volatile
   680   00187C                     
   681                           ;source/preambleInitialization.c: 23:     T0CONbits.TMR0ON = 1;
   682   00187C  8ED5               	bsf	213,7,c	;volatile
   683                           
   684                           ;source/preambleInitialization.c: 25:     TMR0H = 0xB1;
   685   00187E  0EB1               	movlw	177
   686   001880  6ED7               	movwf	215,c	;volatile
   687                           
   688                           ;source/preambleInitialization.c: 26:     TMR0L = 0xDF;
   689   001882  0EDF               	movlw	223
   690   001884  6ED6               	movwf	214,c	;volatile
   691   001886                     
   692                           ;source/preambleInitialization.c: 28:     INTCON2bits.TMR0IP = 0;
   693   001886  94F1               	bcf	241,2,c	;volatile
   694   001888                     
   695                           ;source/preambleInitialization.c: 29:     INTCONbits.TMR0IE = 1;
   696   001888  8AF2               	bsf	242,5,c	;volatile
   697   00188A                     
   698                           ;source/preambleInitialization.c: 31:     INTCONbits.GIEH = 1;
   699   00188A  8EF2               	bsf	242,7,c	;volatile
   700   00188C                     
   701                           ;source/preambleInitialization.c: 32:     INTCONbits.GIEL = 1;
   702   00188C  8CF2               	bsf	242,6,c	;volatile
   703   00188E                     
   704                           ;source/preambleInitialization.c: 34:     TRISJ = 0xFF;
   705   00188E  689A               	setf	154,c	;volatile
   706                           
   707                           ;source/preambleInitialization.c: 35:     TRISD = 0x00;
   708   001890  0E00               	movlw	0
   709   001892  6E95               	movwf	149,c	;volatile
   710                           
   711                           ;source/preambleInitialization.c: 36:     TRISH = 0x00;
   712   001894  0E00               	movlw	0
   713   001896  6E99               	movwf	153,c	;volatile
   714                           
   715                           ;source/preambleInitialization.c: 37:     TRISF = 0x00;
   716   001898  0E00               	movlw	0
   717   00189A  6E97               	movwf	151,c	;volatile
   718   00189C                     
   719                           ;source/preambleInitialization.c: 40:     TRISFbits.RF3 = 1;
   720   00189C  8697               	bsf	151,3,c	;volatile
   721   00189E                     
   722                           ;source/preambleInitialization.c: 41:     WDTCONbits.ADSHR = 1;
   723   00189E  88C0               	bsf	192,4,c	;volatile
   724   0018A0                     
   725                           ;source/preambleInitialization.c: 42:     ANCON1bits.PCFG8 = 0;
   726   0018A0  90C2               	bcf	194,0,c	;volatile
   727   0018A2                     
   728                           ;source/preambleInitialization.c: 43:     WDTCONbits.ADSHR = 0;
   729   0018A2  98C0               	bcf	192,4,c	;volatile
   730                           
   731                           ;source/preambleInitialization.c: 45:     ADCON1 = 0b10101010;
   732   0018A4  0EAA               	movlw	170
   733   0018A6  6EC1               	movwf	193,c	;volatile
   734                           
   735                           ;source/preambleInitialization.c: 46:     ADCON0 = 0b00100001;
   736   0018A8  0E21               	movlw	33
   737   0018AA  6EC2               	movwf	194,c	;volatile
   738   0018AC                     
   739                           ;source/preambleInitialization.c: 48:     PIE1bits.ADIE = 1;
   740   0018AC  8C9D               	bsf	157,6,c	;volatile
   741   0018AE                     
   742                           ;source/preambleInitialization.c: 49:     IPR1bits.ADIP = 0;
   743   0018AE  9C9F               	bcf	159,6,c	;volatile
   744                           
   745                           ;source/preambleInitialization.c: 72:     OSCCONbits.SCS = 0;
   746   0018B0  0EFC               	movlw	-4
   747   0018B2  16D3               	andwf	211,f,c	;volatile
   748   0018B4                     
   749                           ;source/preambleInitialization.c: 74:     OSCTUNEbits.PLLEN = 1;
   750   0018B4  8C9B               	bsf	155,6,c	;volatile
   751   0018B6                     
   752                           ;source/preambleInitialization.c: 79:     RCONbits.IPEN = 1;
   753   0018B6  8ED0               	bsf	208,7,c	;volatile
   754   0018B8  0012               	return		;funcret
   755   0018BA                     __end_of_preambleInitialization:
   756                           	callstack 0
   757                           
   758 ;; *************** function _pametFce *****************
   759 ;; Defined at:
   760 ;;		line 14 in file "header/pamet.c"
   761 ;; Parameters:    Size  Location     Type
   762 ;;  tlacitko        1    3[COMRAM] PTR struct .
   763 ;;		 -> S3Filtr(2), S4Filtr(2), 
   764 ;;  input           1    4[COMRAM] unsigned char 
   765 ;; Auto vars:     Size  Location     Type
   766 ;;  dalsiStav       1    7[COMRAM] unsigned char 
   767 ;; Return value:  Size  Location     Type
   768 ;;                  1    wreg      void 
   769 ;; Registers used:
   770 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   771 ;; Tracked objects:
   772 ;;		On entry : 0/0
   773 ;;		On exit  : 0/0
   774 ;;		Unchanged: 0/0
   775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   776 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   777 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   778 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   779 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   780 ;;Total ram usage:        5 bytes
   781 ;; Hardware stack levels used: 1
   782 ;; Hardware stack levels required when called: 2
   783 ;; This function calls:
   784 ;;		Nothing
   785 ;; This function is called by:
   786 ;;		_main
   787 ;; This function uses a non-reentrant model
   788 ;;
   789                           
   790                           	psect	text2
   791   00172E                     __ptext2:
   792                           	callstack 0
   793   00172E                     _pametFce:
   794                           	callstack 28
   795   00172E                     
   796                           ;header/pamet.c: 15:     char dalsiStav = s0;
   797   00172E  0E00               	movlw	0
   798   001730  6E22               	movwf	pametFce@dalsiStav^0,c
   799                           
   800                           ;header/pamet.c: 17:     switch(tlacitko->stav){
   801   001732  EFE0  F00B         	goto	l1340
   802   001736                     l1310:
   803                           
   804                           ;header/pamet.c: 19:             if(input == 0){
   805   001736  501F               	movf	pametFce@input^0,w,c
   806   001738  A4D8               	btfss	status,2,c
   807   00173A  EFA1  F00B         	goto	u641
   808   00173E  EFA3  F00B         	goto	u640
   809   001742                     u641:
   810   001742  EFA7  F00B         	goto	l1314
   811   001746                     u640:
   812   001746                     
   813                           ;header/pamet.c: 20:                 dalsiStav = s1;
   814   001746  0E01               	movlw	1
   815   001748  6E22               	movwf	pametFce@dalsiStav^0,c
   816                           
   817                           ;header/pamet.c: 21:             }else{
   818   00174A  EF00  F00C         	goto	l1342
   819   00174E                     l1314:
   820                           
   821                           ;header/pamet.c: 22:                 dalsiStav = s0;
   822   00174E  0E00               	movlw	0
   823   001750  6E22               	movwf	pametFce@dalsiStav^0,c
   824   001752  EF00  F00C         	goto	l1342
   825   001756                     l1316:
   826                           
   827                           ;header/pamet.c: 27:             if(input == 0){
   828   001756  501F               	movf	pametFce@input^0,w,c
   829   001758  A4D8               	btfss	status,2,c
   830   00175A  EFB1  F00B         	goto	u651
   831   00175E  EFB3  F00B         	goto	u650
   832   001762                     u651:
   833   001762  EFBD  F00B         	goto	l1322
   834   001766                     u650:
   835   001766                     
   836                           ;header/pamet.c: 28:                 dalsiStav = s1;
   837   001766  0E01               	movlw	1
   838   001768  6E22               	movwf	pametFce@dalsiStav^0,c
   839   00176A                     
   840                           ;header/pamet.c: 29:                tlacitko->vystup = 0;
   841   00176A  501E               	movf	pametFce@tlacitko^0,w,c
   842   00176C  6ED9               	movwf	fsr2l,c
   843   00176E  6ADA               	clrf	fsr2h,c
   844   001770  0E01               	movlw	1
   845   001772  26D9               	addwf	fsr2l,f,c
   846   001774  6ADF               	clrf	indf2,c
   847                           
   848                           ;header/pamet.c: 30:             }else{
   849   001776  EF00  F00C         	goto	l1342
   850   00177A                     l1322:
   851                           
   852                           ;header/pamet.c: 31:                 dalsiStav = s2;
   853   00177A  0E02               	movlw	2
   854   00177C  6E22               	movwf	pametFce@dalsiStav^0,c
   855   00177E  EF00  F00C         	goto	l1342
   856   001782                     l1324:
   857                           
   858                           ;header/pamet.c: 36:             if(input == 0){
   859   001782  501F               	movf	pametFce@input^0,w,c
   860   001784  A4D8               	btfss	status,2,c
   861   001786  EFC7  F00B         	goto	u661
   862   00178A  EFC9  F00B         	goto	u660
   863   00178E                     u661:
   864   00178E  EFBD  F00B         	goto	l1322
   865   001792                     u660:
   866   001792                     
   867                           ;header/pamet.c: 37:                 dalsiStav = s3;
   868   001792  0E03               	movlw	3
   869   001794  6E22               	movwf	pametFce@dalsiStav^0,c
   870                           
   871                           ;header/pamet.c: 38:             }else{
   872   001796  EF00  F00C         	goto	l1342
   873   00179A                     l1330:
   874                           
   875                           ;header/pamet.c: 44:             if(input == 0){
   876   00179A  501F               	movf	pametFce@input^0,w,c
   877   00179C  A4D8               	btfss	status,2,c
   878   00179E  EFD3  F00B         	goto	u671
   879   0017A2  EFD5  F00B         	goto	u670
   880   0017A6                     u671:
   881   0017A6  EFA7  F00B         	goto	l1314
   882   0017AA                     u670:
   883   0017AA                     
   884                           ;header/pamet.c: 45:                 dalsiStav = s3;
   885   0017AA  0E03               	movlw	3
   886   0017AC  6E22               	movwf	pametFce@dalsiStav^0,c
   887   0017AE                     
   888                           ;header/pamet.c: 46:                 tlacitko->vystup = 1;
   889   0017AE  501E               	movf	pametFce@tlacitko^0,w,c
   890   0017B0  6ED9               	movwf	fsr2l,c
   891   0017B2  6ADA               	clrf	fsr2h,c
   892   0017B4  0E01               	movlw	1
   893   0017B6  26D9               	addwf	fsr2l,f,c
   894   0017B8  0E01               	movlw	1
   895   0017BA  6EDF               	movwf	indf2,c
   896                           
   897                           ;header/pamet.c: 47:             }else{
   898   0017BC  EF00  F00C         	goto	l1342
   899   0017C0                     l1340:
   900   0017C0  501E               	movf	pametFce@tlacitko^0,w,c
   901   0017C2  6ED9               	movwf	fsr2l,c
   902   0017C4  6ADA               	clrf	fsr2h,c
   903   0017C6  50DF               	movf	indf2,w,c
   904   0017C8  6E20               	movwf	??_pametFce^0,c
   905   0017CA  6A21               	clrf	(??_pametFce+1)^0,c
   906                           
   907                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   908                           ; Switch size 1, requested type "simple"
   909                           ; Number of cases is 1, Range of values is 0 to 0
   910                           ; switch strategies available:
   911                           ; Name         Instructions Cycles
   912                           ; simple_byte            4     3 (average)
   913                           ;	Chosen strategy is simple_byte
   914   0017CC  5021               	movf	(??_pametFce+1)^0,w,c
   915   0017CE  0A00               	xorlw	0	; case 0
   916   0017D0  B4D8               	btfsc	status,2,c
   917   0017D2  EFED  F00B         	goto	l1576
   918   0017D6  EF00  F00C         	goto	l1342
   919   0017DA                     l1576:
   920                           
   921                           ; Switch size 1, requested type "simple"
   922                           ; Number of cases is 4, Range of values is 0 to 3
   923                           ; switch strategies available:
   924                           ; Name         Instructions Cycles
   925                           ; simple_byte           13     7 (average)
   926                           ;	Chosen strategy is simple_byte
   927   0017DA  5020               	movf	??_pametFce^0,w,c
   928   0017DC  0A00               	xorlw	0	; case 0
   929   0017DE  B4D8               	btfsc	status,2,c
   930   0017E0  EF9B  F00B         	goto	l1310
   931   0017E4  0A01               	xorlw	1	; case 1
   932   0017E6  B4D8               	btfsc	status,2,c
   933   0017E8  EFAB  F00B         	goto	l1316
   934   0017EC  0A03               	xorlw	3	; case 2
   935   0017EE  B4D8               	btfsc	status,2,c
   936   0017F0  EFC1  F00B         	goto	l1324
   937   0017F4  0A01               	xorlw	1	; case 3
   938   0017F6  B4D8               	btfsc	status,2,c
   939   0017F8  EFCD  F00B         	goto	l1330
   940   0017FC  EF00  F00C         	goto	l1342
   941   001800                     l1342:
   942                           
   943                           ;header/pamet.c: 54:       tlacitko->stav = dalsiStav;
   944   001800  501E               	movf	pametFce@tlacitko^0,w,c
   945   001802  6ED9               	movwf	fsr2l,c
   946   001804  6ADA               	clrf	fsr2h,c
   947   001806  C022  FFDF         	movff	pametFce@dalsiStav,indf2
   948   00180A  0012               	return		;funcret
   949   00180C                     __end_of_pametFce:
   950                           	callstack 0
   951                           
   952 ;; *************** function _filterFce *****************
   953 ;; Defined at:
   954 ;;		line 15 in file "source/filter.c"
   955 ;; Parameters:    Size  Location     Type
   956 ;;  tlacitko        1    3[COMRAM] PTR struct .
   957 ;;		 -> S5B(2), S5A(2), S3(2), S4(2), 
   958 ;;  vstup           1    4[COMRAM] unsigned char 
   959 ;; Auto vars:     Size  Location     Type
   960 ;;  dalsiStav       1    7[COMRAM] unsigned char 
   961 ;; Return value:  Size  Location     Type
   962 ;;                  1    wreg      void 
   963 ;; Registers used:
   964 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   970 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   971 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   972 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   973 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   974 ;;Total ram usage:        5 bytes
   975 ;; Hardware stack levels used: 1
   976 ;; Hardware stack levels required when called: 2
   977 ;; This function calls:
   978 ;;		Nothing
   979 ;; This function is called by:
   980 ;;		_main
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           	psect	text3
   985   001638                     __ptext3:
   986                           	callstack 0
   987   001638                     _filterFce:
   988                           	callstack 28
   989   001638                     
   990                           ;source/filter.c: 15: void filterFce(typeFilter*tlacitko, char vstup);source/filter.c: 1
      +                          6: {;source/filter.c: 17: char dalsiStav = s0;
   991   001638  0E00               	movlw	0
   992   00163A  6E22               	movwf	filterFce@dalsiStav^0,c
   993                           
   994                           ;source/filter.c: 20:   switch(tlacitko->stav){
   995   00163C  EF6D  F00B         	goto	l1300
   996   001640                     l1264:
   997                           
   998                           ;source/filter.c: 22:           if(vstup == 1){
   999   001640  041F               	decf	filterFce@vstup^0,w,c
  1000   001642  A4D8               	btfss	status,2,c
  1001   001644  EF26  F00B         	goto	u591
  1002   001648  EF28  F00B         	goto	u590
  1003   00164C                     u591:
  1004   00164C  EF2C  F00B         	goto	l1268
  1005   001650                     u590:
  1006   001650                     l1266:
  1007                           
  1008                           ;source/filter.c: 23:               dalsiStav = s1;
  1009   001650  0E01               	movlw	1
  1010   001652  6E22               	movwf	filterFce@dalsiStav^0,c
  1011                           
  1012                           ;source/filter.c: 24:           }else{
  1013   001654  EF91  F00B         	goto	l1302
  1014   001658                     l1268:
  1015                           
  1016                           ;source/filter.c: 25:               dalsiStav = s3;
  1017   001658  0E03               	movlw	3
  1018   00165A  6E22               	movwf	filterFce@dalsiStav^0,c
  1019   00165C  EF91  F00B         	goto	l1302
  1020   001660                     l1270:
  1021                           
  1022                           ;source/filter.c: 30:           if(vstup == 1){
  1023   001660  041F               	decf	filterFce@vstup^0,w,c
  1024   001662  A4D8               	btfss	status,2,c
  1025   001664  EF36  F00B         	goto	u601
  1026   001668  EF38  F00B         	goto	u600
  1027   00166C                     u601:
  1028   00166C  EF2C  F00B         	goto	l1268
  1029   001670                     u600:
  1030   001670                     
  1031                           ;source/filter.c: 31:               dalsiStav = s2;
  1032   001670  0E02               	movlw	2
  1033   001672  6E22               	movwf	filterFce@dalsiStav^0,c
  1034                           
  1035                           ;source/filter.c: 32:           }else{
  1036   001674  EF91  F00B         	goto	l1302
  1037   001678                     l1276:
  1038                           
  1039                           ;source/filter.c: 38:           if(vstup == 1){
  1040   001678  041F               	decf	filterFce@vstup^0,w,c
  1041   00167A  A4D8               	btfss	status,2,c
  1042   00167C  EF42  F00B         	goto	u611
  1043   001680  EF44  F00B         	goto	u610
  1044   001684                     u611:
  1045   001684  EF2C  F00B         	goto	l1268
  1046   001688                     u610:
  1047   001688                     
  1048                           ;source/filter.c: 39:               dalsiStav = s2;
  1049   001688  0E02               	movlw	2
  1050   00168A  6E22               	movwf	filterFce@dalsiStav^0,c
  1051   00168C                     
  1052                           ;source/filter.c: 40:               tlacitko->vystup = 1;
  1053   00168C  501E               	movf	filterFce@tlacitko^0,w,c
  1054   00168E  6ED9               	movwf	fsr2l,c
  1055   001690  6ADA               	clrf	fsr2h,c
  1056   001692  0E01               	movlw	1
  1057   001694  26D9               	addwf	fsr2l,f,c
  1058   001696  0E01               	movlw	1
  1059   001698  6EDF               	movwf	indf2,c
  1060                           
  1061                           ;source/filter.c: 41:           }else{
  1062   00169A  EF91  F00B         	goto	l1302
  1063   00169E                     l1284:
  1064                           
  1065                           ;source/filter.c: 47:           if(vstup == 0){
  1066   00169E  501F               	movf	filterFce@vstup^0,w,c
  1067   0016A0  A4D8               	btfss	status,2,c
  1068   0016A2  EF55  F00B         	goto	u621
  1069   0016A6  EF57  F00B         	goto	u620
  1070   0016AA                     u621:
  1071   0016AA  EF28  F00B         	goto	l1266
  1072   0016AE                     u620:
  1073   0016AE                     
  1074                           ;source/filter.c: 48:               dalsiStav = s4;
  1075   0016AE  0E04               	movlw	4
  1076   0016B0  6E22               	movwf	filterFce@dalsiStav^0,c
  1077                           
  1078                           ;source/filter.c: 49:           }else{
  1079   0016B2  EF91  F00B         	goto	l1302
  1080   0016B6                     l1290:
  1081                           
  1082                           ;source/filter.c: 56:           if(vstup == 0){
  1083   0016B6  501F               	movf	filterFce@vstup^0,w,c
  1084   0016B8  A4D8               	btfss	status,2,c
  1085   0016BA  EF61  F00B         	goto	u631
  1086   0016BE  EF63  F00B         	goto	u630
  1087   0016C2                     u631:
  1088   0016C2  EF28  F00B         	goto	l1266
  1089   0016C6                     u630:
  1090   0016C6                     
  1091                           ;source/filter.c: 57:               dalsiStav = s4;
  1092   0016C6  0E04               	movlw	4
  1093   0016C8  6E22               	movwf	filterFce@dalsiStav^0,c
  1094   0016CA                     
  1095                           ;source/filter.c: 58:               tlacitko->vystup = 0;
  1096   0016CA  501E               	movf	filterFce@tlacitko^0,w,c
  1097   0016CC  6ED9               	movwf	fsr2l,c
  1098   0016CE  6ADA               	clrf	fsr2h,c
  1099   0016D0  0E01               	movlw	1
  1100   0016D2  26D9               	addwf	fsr2l,f,c
  1101   0016D4  6ADF               	clrf	indf2,c
  1102                           
  1103                           ;source/filter.c: 59:           }else{
  1104   0016D6  EF91  F00B         	goto	l1302
  1105   0016DA                     l1300:
  1106   0016DA  501E               	movf	filterFce@tlacitko^0,w,c
  1107   0016DC  6ED9               	movwf	fsr2l,c
  1108   0016DE  6ADA               	clrf	fsr2h,c
  1109   0016E0  50DF               	movf	indf2,w,c
  1110   0016E2  6E20               	movwf	??_filterFce^0,c
  1111   0016E4  6A21               	clrf	(??_filterFce+1)^0,c
  1112                           
  1113                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1114                           ; Switch size 1, requested type "simple"
  1115                           ; Number of cases is 1, Range of values is 0 to 0
  1116                           ; switch strategies available:
  1117                           ; Name         Instructions Cycles
  1118                           ; simple_byte            4     3 (average)
  1119                           ;	Chosen strategy is simple_byte
  1120   0016E6  5021               	movf	(??_filterFce+1)^0,w,c
  1121   0016E8  0A00               	xorlw	0	; case 0
  1122   0016EA  B4D8               	btfsc	status,2,c
  1123   0016EC  EF7A  F00B         	goto	l1578
  1124   0016F0  EF91  F00B         	goto	l1302
  1125   0016F4                     l1578:
  1126                           
  1127                           ; Switch size 1, requested type "simple"
  1128                           ; Number of cases is 5, Range of values is 0 to 4
  1129                           ; switch strategies available:
  1130                           ; Name         Instructions Cycles
  1131                           ; simple_byte           16     9 (average)
  1132                           ;	Chosen strategy is simple_byte
  1133   0016F4  5020               	movf	??_filterFce^0,w,c
  1134   0016F6  0A00               	xorlw	0	; case 0
  1135   0016F8  B4D8               	btfsc	status,2,c
  1136   0016FA  EF20  F00B         	goto	l1264
  1137   0016FE  0A01               	xorlw	1	; case 1
  1138   001700  B4D8               	btfsc	status,2,c
  1139   001702  EF30  F00B         	goto	l1270
  1140   001706  0A03               	xorlw	3	; case 2
  1141   001708  B4D8               	btfsc	status,2,c
  1142   00170A  EF3C  F00B         	goto	l1276
  1143   00170E  0A01               	xorlw	1	; case 3
  1144   001710  B4D8               	btfsc	status,2,c
  1145   001712  EF4F  F00B         	goto	l1284
  1146   001716  0A07               	xorlw	7	; case 4
  1147   001718  B4D8               	btfsc	status,2,c
  1148   00171A  EF5B  F00B         	goto	l1290
  1149   00171E  EF91  F00B         	goto	l1302
  1150   001722                     l1302:
  1151                           
  1152                           ;source/filter.c: 66:   tlacitko->stav = dalsiStav;
  1153   001722  501E               	movf	filterFce@tlacitko^0,w,c
  1154   001724  6ED9               	movwf	fsr2l,c
  1155   001726  6ADA               	clrf	fsr2h,c
  1156   001728  C022  FFDF         	movff	filterFce@dalsiStav,indf2
  1157   00172C  0012               	return		;funcret
  1158   00172E                     __end_of_filterFce:
  1159                           	callstack 0
  1160                           
  1161 ;; *************** function _dekoderFce *****************
  1162 ;; Defined at:
  1163 ;;		line 14 in file "header/dekoder.c"
  1164 ;; Parameters:    Size  Location     Type
  1165 ;;  tlacitko        1    3[COMRAM] PTR struct .
  1166 ;;		 -> dekoderAB(2), 
  1167 ;;  A               1    4[COMRAM] unsigned char 
  1168 ;;  B               1    5[COMRAM] unsigned char 
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;		None
  1171 ;; Return value:  Size  Location     Type
  1172 ;;                  1    wreg      void 
  1173 ;; Registers used:
  1174 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1175 ;; Tracked objects:
  1176 ;;		On entry : 0/0
  1177 ;;		On exit  : 0/0
  1178 ;;		Unchanged: 0/0
  1179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1180 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1182 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1183 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1184 ;;Total ram usage:        5 bytes
  1185 ;; Hardware stack levels used: 1
  1186 ;; Hardware stack levels required when called: 2
  1187 ;; This function calls:
  1188 ;;		Nothing
  1189 ;; This function is called by:
  1190 ;;		_main
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193                           
  1194                           	psect	text4
  1195   001002                     __ptext4:
  1196                           	callstack 0
  1197   001002                     _dekoderFce:
  1198                           	callstack 28
  1199   001002                     
  1200                           ;header/dekoder.c: 15:     switch(tlacitko->stav){
  1201   001002  EF53  F009         	goto	l1432
  1202   001006                     l1350:
  1203                           
  1204                           ;header/dekoder.c: 17:             if((A == 1) && (B == 0)){
  1205   001006  041F               	decf	dekoderFce@A^0,w,c
  1206   001008  A4D8               	btfss	status,2,c
  1207   00100A  EF09  F008         	goto	u681
  1208   00100E  EF0B  F008         	goto	u680
  1209   001012                     u681:
  1210   001012  EF2D  F008         	goto	l1360
  1211   001016                     u680:
  1212   001016  5020               	movf	dekoderFce@B^0,w,c
  1213   001018  A4D8               	btfss	status,2,c
  1214   00101A  EF11  F008         	goto	u691
  1215   00101E  EF13  F008         	goto	u690
  1216   001022                     u691:
  1217   001022  EF2D  F008         	goto	l1360
  1218   001026                     u690:
  1219   001026                     
  1220                           ;header/dekoder.c: 18:                 tlacitko->stav = s1;
  1221   001026  501E               	movf	dekoderFce@tlacitko^0,w,c
  1222   001028  6ED9               	movwf	fsr2l,c
  1223   00102A  6ADA               	clrf	fsr2h,c
  1224   00102C  0E01               	movlw	1
  1225   00102E  6EDF               	movwf	indf2,c
  1226   001030                     
  1227                           ;header/dekoder.c: 19:                 if(tlacitko->vystup < 255){
  1228   001030  501E               	movf	dekoderFce@tlacitko^0,w,c
  1229   001032  6ED9               	movwf	fsr2l,c
  1230   001034  6ADA               	clrf	fsr2h,c
  1231   001036  0E01               	movlw	1
  1232   001038  26D9               	addwf	fsr2l,f,c
  1233   00103A  28DE               	incf	postinc2,w,c
  1234   00103C  B4D8               	btfsc	status,2,c
  1235   00103E  EF23  F008         	goto	u701
  1236   001042  EF25  F008         	goto	u700
  1237   001046                     u701:
  1238   001046  EF73  F009         	goto	l204
  1239   00104A                     u700:
  1240   00104A                     
  1241                           ;header/dekoder.c: 20:                 tlacitko->vystup++;
  1242   00104A  501E               	movf	dekoderFce@tlacitko^0,w,c
  1243   00104C  6ED9               	movwf	fsr2l,c
  1244   00104E  6ADA               	clrf	fsr2h,c
  1245   001050  0E01               	movlw	1
  1246   001052  26D9               	addwf	fsr2l,f,c
  1247   001054  2ADF               	incf	indf2,f,c
  1248   001056  EF73  F009         	goto	l204
  1249   00105A                     l1360:
  1250   00105A  501F               	movf	dekoderFce@A^0,w,c
  1251   00105C  A4D8               	btfss	status,2,c
  1252   00105E  EF33  F008         	goto	u711
  1253   001062  EF35  F008         	goto	u710
  1254   001066                     u711:
  1255   001066  EF73  F009         	goto	l204
  1256   00106A                     u710:
  1257   00106A  0420               	decf	dekoderFce@B^0,w,c
  1258   00106C  A4D8               	btfss	status,2,c
  1259   00106E  EF3B  F008         	goto	u721
  1260   001072  EF3D  F008         	goto	u720
  1261   001076                     u721:
  1262   001076  EF73  F009         	goto	l204
  1263   00107A                     u720:
  1264   00107A                     
  1265                           ;header/dekoder.c: 23:                 tlacitko->stav = s3;
  1266   00107A  501E               	movf	dekoderFce@tlacitko^0,w,c
  1267   00107C  6ED9               	movwf	fsr2l,c
  1268   00107E  6ADA               	clrf	fsr2h,c
  1269   001080  0E03               	movlw	3
  1270   001082  6EDF               	movwf	indf2,c
  1271   001084                     
  1272                           ;header/dekoder.c: 24:                 if(tlacitko->vystup > 0){
  1273   001084  501E               	movf	dekoderFce@tlacitko^0,w,c
  1274   001086  6ED9               	movwf	fsr2l,c
  1275   001088  6ADA               	clrf	fsr2h,c
  1276   00108A  0E01               	movlw	1
  1277   00108C  26D9               	addwf	fsr2l,f,c
  1278   00108E  50DF               	movf	indf2,w,c
  1279   001090  B4D8               	btfsc	status,2,c
  1280   001092  EF4D  F008         	goto	u731
  1281   001096  EF4F  F008         	goto	u730
  1282   00109A                     u731:
  1283   00109A  EF57  F008         	goto	l182
  1284   00109E                     u730:
  1285   00109E                     
  1286                           ;header/dekoder.c: 25:                 tlacitko->vystup--;
  1287   00109E  501E               	movf	dekoderFce@tlacitko^0,w,c
  1288   0010A0  6ED9               	movwf	fsr2l,c
  1289   0010A2  6ADA               	clrf	fsr2h,c
  1290   0010A4  0E01               	movlw	1
  1291   0010A6  26D9               	addwf	fsr2l,f,c
  1292   0010A8  06DF               	decf	indf2,f,c
  1293   0010AA  EF73  F009         	goto	l204
  1294   0010AE                     l182:
  1295                           
  1296                           ;header/dekoder.c: 28:             break;
  1297   0010AE  EF73  F009         	goto	l204
  1298   0010B2                     l1370:
  1299                           
  1300                           ;header/dekoder.c: 31:             if((A == 1) && (B == 1)){
  1301   0010B2  041F               	decf	dekoderFce@A^0,w,c
  1302   0010B4  A4D8               	btfss	status,2,c
  1303   0010B6  EF5F  F008         	goto	u741
  1304   0010BA  EF61  F008         	goto	u740
  1305   0010BE                     u741:
  1306   0010BE  EF83  F008         	goto	l1380
  1307   0010C2                     u740:
  1308   0010C2  0420               	decf	dekoderFce@B^0,w,c
  1309   0010C4  A4D8               	btfss	status,2,c
  1310   0010C6  EF67  F008         	goto	u751
  1311   0010CA  EF69  F008         	goto	u750
  1312   0010CE                     u751:
  1313   0010CE  EF83  F008         	goto	l1380
  1314   0010D2                     u750:
  1315   0010D2                     
  1316                           ;header/dekoder.c: 32:                 tlacitko->stav = s2;
  1317   0010D2  501E               	movf	dekoderFce@tlacitko^0,w,c
  1318   0010D4  6ED9               	movwf	fsr2l,c
  1319   0010D6  6ADA               	clrf	fsr2h,c
  1320   0010D8  0E02               	movlw	2
  1321   0010DA  6EDF               	movwf	indf2,c
  1322   0010DC                     
  1323                           ;header/dekoder.c: 33:                 if(tlacitko->vystup < 255){
  1324   0010DC  501E               	movf	dekoderFce@tlacitko^0,w,c
  1325   0010DE  6ED9               	movwf	fsr2l,c
  1326   0010E0  6ADA               	clrf	fsr2h,c
  1327   0010E2  0E01               	movlw	1
  1328   0010E4  26D9               	addwf	fsr2l,f,c
  1329   0010E6  28DE               	incf	postinc2,w,c
  1330   0010E8  B4D8               	btfsc	status,2,c
  1331   0010EA  EF79  F008         	goto	u761
  1332   0010EE  EF7B  F008         	goto	u760
  1333   0010F2                     u761:
  1334   0010F2  EF73  F009         	goto	l204
  1335   0010F6                     u760:
  1336   0010F6                     
  1337                           ;header/dekoder.c: 34:                tlacitko->vystup++;
  1338   0010F6  501E               	movf	dekoderFce@tlacitko^0,w,c
  1339   0010F8  6ED9               	movwf	fsr2l,c
  1340   0010FA  6ADA               	clrf	fsr2h,c
  1341   0010FC  0E01               	movlw	1
  1342   0010FE  26D9               	addwf	fsr2l,f,c
  1343   001100  2ADF               	incf	indf2,f,c
  1344   001102  EF73  F009         	goto	l204
  1345   001106                     l1380:
  1346   001106  501F               	movf	dekoderFce@A^0,w,c
  1347   001108  A4D8               	btfss	status,2,c
  1348   00110A  EF89  F008         	goto	u771
  1349   00110E  EF8B  F008         	goto	u770
  1350   001112                     u771:
  1351   001112  EF73  F009         	goto	l204
  1352   001116                     u770:
  1353   001116  5020               	movf	dekoderFce@B^0,w,c
  1354   001118  A4D8               	btfss	status,2,c
  1355   00111A  EF91  F008         	goto	u781
  1356   00111E  EF93  F008         	goto	u780
  1357   001122                     u781:
  1358   001122  EF73  F009         	goto	l204
  1359   001126                     u780:
  1360   001126                     
  1361                           ;header/dekoder.c: 37:                 tlacitko->stav = s0;
  1362   001126  501E               	movf	dekoderFce@tlacitko^0,w,c
  1363   001128  6ED9               	movwf	fsr2l,c
  1364   00112A  6ADA               	clrf	fsr2h,c
  1365   00112C  6ADF               	clrf	indf2,c
  1366   00112E                     
  1367                           ;header/dekoder.c: 38:                 if(tlacitko->vystup > 0){
  1368   00112E  501E               	movf	dekoderFce@tlacitko^0,w,c
  1369   001130  6ED9               	movwf	fsr2l,c
  1370   001132  6ADA               	clrf	fsr2h,c
  1371   001134  0E01               	movlw	1
  1372   001136  26D9               	addwf	fsr2l,f,c
  1373   001138  50DF               	movf	indf2,w,c
  1374   00113A  B4D8               	btfsc	status,2,c
  1375   00113C  EFA2  F008         	goto	u791
  1376   001140  EFA4  F008         	goto	u790
  1377   001144                     u791:
  1378   001144  EF73  F009         	goto	l204
  1379   001148                     u790:
  1380   001148                     
  1381                           ;header/dekoder.c: 39:                 tlacitko->vystup--;
  1382   001148  501E               	movf	dekoderFce@tlacitko^0,w,c
  1383   00114A  6ED9               	movwf	fsr2l,c
  1384   00114C  6ADA               	clrf	fsr2h,c
  1385   00114E  0E01               	movlw	1
  1386   001150  26D9               	addwf	fsr2l,f,c
  1387   001152  06DF               	decf	indf2,f,c
  1388   001154  EF73  F009         	goto	l204
  1389   001158                     l1390:
  1390                           
  1391                           ;header/dekoder.c: 45:             if((A == 0) && (B == 1)){
  1392   001158  501F               	movf	dekoderFce@A^0,w,c
  1393   00115A  A4D8               	btfss	status,2,c
  1394   00115C  EFB2  F008         	goto	u801
  1395   001160  EFB4  F008         	goto	u800
  1396   001164                     u801:
  1397   001164  EFD6  F008         	goto	l1400
  1398   001168                     u800:
  1399   001168  0420               	decf	dekoderFce@B^0,w,c
  1400   00116A  A4D8               	btfss	status,2,c
  1401   00116C  EFBA  F008         	goto	u811
  1402   001170  EFBC  F008         	goto	u810
  1403   001174                     u811:
  1404   001174  EFD6  F008         	goto	l1400
  1405   001178                     u810:
  1406   001178                     
  1407                           ;header/dekoder.c: 46:                 tlacitko->stav = s3;
  1408   001178  501E               	movf	dekoderFce@tlacitko^0,w,c
  1409   00117A  6ED9               	movwf	fsr2l,c
  1410   00117C  6ADA               	clrf	fsr2h,c
  1411   00117E  0E03               	movlw	3
  1412   001180  6EDF               	movwf	indf2,c
  1413   001182                     
  1414                           ;header/dekoder.c: 47:                 if(tlacitko->vystup < 255){
  1415   001182  501E               	movf	dekoderFce@tlacitko^0,w,c
  1416   001184  6ED9               	movwf	fsr2l,c
  1417   001186  6ADA               	clrf	fsr2h,c
  1418   001188  0E01               	movlw	1
  1419   00118A  26D9               	addwf	fsr2l,f,c
  1420   00118C  28DE               	incf	postinc2,w,c
  1421   00118E  B4D8               	btfsc	status,2,c
  1422   001190  EFCC  F008         	goto	u821
  1423   001194  EFCE  F008         	goto	u820
  1424   001198                     u821:
  1425   001198  EF73  F009         	goto	l204
  1426   00119C                     u820:
  1427   00119C                     
  1428                           ;header/dekoder.c: 48:                 tlacitko->vystup++;
  1429   00119C  501E               	movf	dekoderFce@tlacitko^0,w,c
  1430   00119E  6ED9               	movwf	fsr2l,c
  1431   0011A0  6ADA               	clrf	fsr2h,c
  1432   0011A2  0E01               	movlw	1
  1433   0011A4  26D9               	addwf	fsr2l,f,c
  1434   0011A6  2ADF               	incf	indf2,f,c
  1435   0011A8  EF73  F009         	goto	l204
  1436   0011AC                     l1400:
  1437   0011AC  041F               	decf	dekoderFce@A^0,w,c
  1438   0011AE  A4D8               	btfss	status,2,c
  1439   0011B0  EFDC  F008         	goto	u831
  1440   0011B4  EFDE  F008         	goto	u830
  1441   0011B8                     u831:
  1442   0011B8  EF73  F009         	goto	l204
  1443   0011BC                     u830:
  1444   0011BC  5020               	movf	dekoderFce@B^0,w,c
  1445   0011BE  A4D8               	btfss	status,2,c
  1446   0011C0  EFE4  F008         	goto	u841
  1447   0011C4  EFE6  F008         	goto	u840
  1448   0011C8                     u841:
  1449   0011C8  EF73  F009         	goto	l204
  1450   0011CC                     u840:
  1451   0011CC                     
  1452                           ;header/dekoder.c: 51:                 tlacitko->stav = s1;
  1453   0011CC  501E               	movf	dekoderFce@tlacitko^0,w,c
  1454   0011CE  6ED9               	movwf	fsr2l,c
  1455   0011D0  6ADA               	clrf	fsr2h,c
  1456   0011D2  0E01               	movlw	1
  1457   0011D4  6EDF               	movwf	indf2,c
  1458   0011D6                     
  1459                           ;header/dekoder.c: 52:                 if(tlacitko->vystup > 0){
  1460   0011D6  501E               	movf	dekoderFce@tlacitko^0,w,c
  1461   0011D8  6ED9               	movwf	fsr2l,c
  1462   0011DA  6ADA               	clrf	fsr2h,c
  1463   0011DC  0E01               	movlw	1
  1464   0011DE  26D9               	addwf	fsr2l,f,c
  1465   0011E0  50DF               	movf	indf2,w,c
  1466   0011E2  B4D8               	btfsc	status,2,c
  1467   0011E4  EFF6  F008         	goto	u851
  1468   0011E8  EFF8  F008         	goto	u850
  1469   0011EC                     u851:
  1470   0011EC  EF73  F009         	goto	l204
  1471   0011F0                     u850:
  1472   0011F0                     
  1473                           ;header/dekoder.c: 53:                 tlacitko->vystup--;
  1474   0011F0  501E               	movf	dekoderFce@tlacitko^0,w,c
  1475   0011F2  6ED9               	movwf	fsr2l,c
  1476   0011F4  6ADA               	clrf	fsr2h,c
  1477   0011F6  0E01               	movlw	1
  1478   0011F8  26D9               	addwf	fsr2l,f,c
  1479   0011FA  06DF               	decf	indf2,f,c
  1480   0011FC  EF73  F009         	goto	l204
  1481   001200                     l1410:
  1482                           
  1483                           ;header/dekoder.c: 59:             if((A == 0) && (B == 0)){
  1484   001200  501F               	movf	dekoderFce@A^0,w,c
  1485   001202  A4D8               	btfss	status,2,c
  1486   001204  EF06  F009         	goto	u861
  1487   001208  EF08  F009         	goto	u860
  1488   00120C                     u861:
  1489   00120C  EF29  F009         	goto	l1420
  1490   001210                     u860:
  1491   001210  5020               	movf	dekoderFce@B^0,w,c
  1492   001212  A4D8               	btfss	status,2,c
  1493   001214  EF0E  F009         	goto	u871
  1494   001218  EF10  F009         	goto	u870
  1495   00121C                     u871:
  1496   00121C  EF29  F009         	goto	l1420
  1497   001220                     u870:
  1498   001220                     
  1499                           ;header/dekoder.c: 60:                 tlacitko->stav = s0;
  1500   001220  501E               	movf	dekoderFce@tlacitko^0,w,c
  1501   001222  6ED9               	movwf	fsr2l,c
  1502   001224  6ADA               	clrf	fsr2h,c
  1503   001226  6ADF               	clrf	indf2,c
  1504   001228                     
  1505                           ;header/dekoder.c: 61:                 if(tlacitko->vystup < 255){
  1506   001228  501E               	movf	dekoderFce@tlacitko^0,w,c
  1507   00122A  6ED9               	movwf	fsr2l,c
  1508   00122C  6ADA               	clrf	fsr2h,c
  1509   00122E  0E01               	movlw	1
  1510   001230  26D9               	addwf	fsr2l,f,c
  1511   001232  28DE               	incf	postinc2,w,c
  1512   001234  B4D8               	btfsc	status,2,c
  1513   001236  EF1F  F009         	goto	u881
  1514   00123A  EF21  F009         	goto	u880
  1515   00123E                     u881:
  1516   00123E  EF73  F009         	goto	l204
  1517   001242                     u880:
  1518   001242                     
  1519                           ;header/dekoder.c: 62:                 tlacitko->vystup++;
  1520   001242  501E               	movf	dekoderFce@tlacitko^0,w,c
  1521   001244  6ED9               	movwf	fsr2l,c
  1522   001246  6ADA               	clrf	fsr2h,c
  1523   001248  0E01               	movlw	1
  1524   00124A  26D9               	addwf	fsr2l,f,c
  1525   00124C  2ADF               	incf	indf2,f,c
  1526   00124E  EF73  F009         	goto	l204
  1527   001252                     l1420:
  1528   001252  041F               	decf	dekoderFce@A^0,w,c
  1529   001254  A4D8               	btfss	status,2,c
  1530   001256  EF2F  F009         	goto	u891
  1531   00125A  EF31  F009         	goto	u890
  1532   00125E                     u891:
  1533   00125E  EF73  F009         	goto	l204
  1534   001262                     u890:
  1535   001262  0420               	decf	dekoderFce@B^0,w,c
  1536   001264  A4D8               	btfss	status,2,c
  1537   001266  EF37  F009         	goto	u901
  1538   00126A  EF39  F009         	goto	u900
  1539   00126E                     u901:
  1540   00126E  EF73  F009         	goto	l204
  1541   001272                     u900:
  1542   001272                     
  1543                           ;header/dekoder.c: 65:                 tlacitko->stav = s2;
  1544   001272  501E               	movf	dekoderFce@tlacitko^0,w,c
  1545   001274  6ED9               	movwf	fsr2l,c
  1546   001276  6ADA               	clrf	fsr2h,c
  1547   001278  0E02               	movlw	2
  1548   00127A  6EDF               	movwf	indf2,c
  1549   00127C                     
  1550                           ;header/dekoder.c: 66:             if(tlacitko->vystup > 0){
  1551   00127C  501E               	movf	dekoderFce@tlacitko^0,w,c
  1552   00127E  6ED9               	movwf	fsr2l,c
  1553   001280  6ADA               	clrf	fsr2h,c
  1554   001282  0E01               	movlw	1
  1555   001284  26D9               	addwf	fsr2l,f,c
  1556   001286  50DF               	movf	indf2,w,c
  1557   001288  B4D8               	btfsc	status,2,c
  1558   00128A  EF49  F009         	goto	u911
  1559   00128E  EF4B  F009         	goto	u910
  1560   001292                     u911:
  1561   001292  EF73  F009         	goto	l204
  1562   001296                     u910:
  1563   001296                     
  1564                           ;header/dekoder.c: 67:                 tlacitko->vystup--;
  1565   001296  501E               	movf	dekoderFce@tlacitko^0,w,c
  1566   001298  6ED9               	movwf	fsr2l,c
  1567   00129A  6ADA               	clrf	fsr2h,c
  1568   00129C  0E01               	movlw	1
  1569   00129E  26D9               	addwf	fsr2l,f,c
  1570   0012A0  06DF               	decf	indf2,f,c
  1571   0012A2  EF73  F009         	goto	l204
  1572   0012A6                     l1432:
  1573   0012A6  501E               	movf	dekoderFce@tlacitko^0,w,c
  1574   0012A8  6ED9               	movwf	fsr2l,c
  1575   0012AA  6ADA               	clrf	fsr2h,c
  1576   0012AC  50DF               	movf	indf2,w,c
  1577   0012AE  6E21               	movwf	??_dekoderFce^0,c
  1578   0012B0  6A22               	clrf	(??_dekoderFce+1)^0,c
  1579                           
  1580                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1581                           ; Switch size 1, requested type "simple"
  1582                           ; Number of cases is 1, Range of values is 0 to 0
  1583                           ; switch strategies available:
  1584                           ; Name         Instructions Cycles
  1585                           ; simple_byte            4     3 (average)
  1586                           ;	Chosen strategy is simple_byte
  1587   0012B2  5022               	movf	(??_dekoderFce+1)^0,w,c
  1588   0012B4  0A00               	xorlw	0	; case 0
  1589   0012B6  B4D8               	btfsc	status,2,c
  1590   0012B8  EF60  F009         	goto	l1580
  1591   0012BC  EF73  F009         	goto	l204
  1592   0012C0                     l1580:
  1593                           
  1594                           ; Switch size 1, requested type "simple"
  1595                           ; Number of cases is 4, Range of values is 0 to 3
  1596                           ; switch strategies available:
  1597                           ; Name         Instructions Cycles
  1598                           ; simple_byte           13     7 (average)
  1599                           ;	Chosen strategy is simple_byte
  1600   0012C0  5021               	movf	??_dekoderFce^0,w,c
  1601   0012C2  0A00               	xorlw	0	; case 0
  1602   0012C4  B4D8               	btfsc	status,2,c
  1603   0012C6  EF03  F008         	goto	l1350
  1604   0012CA  0A01               	xorlw	1	; case 1
  1605   0012CC  B4D8               	btfsc	status,2,c
  1606   0012CE  EF59  F008         	goto	l1370
  1607   0012D2  0A03               	xorlw	3	; case 2
  1608   0012D4  B4D8               	btfsc	status,2,c
  1609   0012D6  EFAC  F008         	goto	l1390
  1610   0012DA  0A01               	xorlw	1	; case 3
  1611   0012DC  B4D8               	btfsc	status,2,c
  1612   0012DE  EF00  F009         	goto	l1410
  1613   0012E2  EF73  F009         	goto	l204
  1614   0012E6                     l204:
  1615   0012E6  0012               	return		;funcret
  1616   0012E8                     __end_of_dekoderFce:
  1617                           	callstack 0
  1618                           
  1619 ;; *************** function ___lmul *****************
  1620 ;; Defined at:
  1621 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  multiplier      4    3[COMRAM] unsigned long 
  1624 ;;  multiplicand    4    7[COMRAM] unsigned long 
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;  product         4   11[COMRAM] unsigned long 
  1627 ;; Return value:  Size  Location     Type
  1628 ;;                  4    3[COMRAM] unsigned long 
  1629 ;; Registers used:
  1630 ;;		wreg, status,2, status,0
  1631 ;; Tracked objects:
  1632 ;;		On entry : 0/0
  1633 ;;		On exit  : 0/0
  1634 ;;		Unchanged: 0/0
  1635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1636 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1637 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1639 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1640 ;;Total ram usage:       12 bytes
  1641 ;; Hardware stack levels used: 1
  1642 ;; Hardware stack levels required when called: 2
  1643 ;; This function calls:
  1644 ;;		Nothing
  1645 ;; This function is called by:
  1646 ;;		_main
  1647 ;;		_ADprevodnikFce
  1648 ;; This function uses a non-reentrant model
  1649 ;;
  1650                           
  1651                           	psect	text5
  1652   00180C                     __ptext5:
  1653                           	callstack 0
  1654   00180C                     ___lmul:
  1655                           	callstack 28
  1656   00180C  0E00               	movlw	0
  1657   00180E  6E26               	movwf	___lmul@product^0,c
  1658   001810  0E00               	movlw	0
  1659   001812  6E27               	movwf	(___lmul@product+1)^0,c
  1660   001814  0E00               	movlw	0
  1661   001816  6E28               	movwf	(___lmul@product+2)^0,c
  1662   001818  0E00               	movlw	0
  1663   00181A  6E29               	movwf	(___lmul@product+3)^0,c
  1664   00181C                     l1440:
  1665   00181C  A01E               	btfss	___lmul@multiplier^0,0,c
  1666   00181E  EF13  F00C         	goto	u921
  1667   001822  EF15  F00C         	goto	u920
  1668   001826                     u921:
  1669   001826  EF1D  F00C         	goto	l1444
  1670   00182A                     u920:
  1671   00182A  5022               	movf	___lmul@multiplicand^0,w,c
  1672   00182C  2626               	addwf	___lmul@product^0,f,c
  1673   00182E  5023               	movf	(___lmul@multiplicand+1)^0,w,c
  1674   001830  2227               	addwfc	(___lmul@product+1)^0,f,c
  1675   001832  5024               	movf	(___lmul@multiplicand+2)^0,w,c
  1676   001834  2228               	addwfc	(___lmul@product+2)^0,f,c
  1677   001836  5025               	movf	(___lmul@multiplicand+3)^0,w,c
  1678   001838  2229               	addwfc	(___lmul@product+3)^0,f,c
  1679   00183A                     l1444:
  1680   00183A  90D8               	bcf	status,0,c
  1681   00183C  3622               	rlcf	___lmul@multiplicand^0,f,c
  1682   00183E  3623               	rlcf	(___lmul@multiplicand+1)^0,f,c
  1683   001840  3624               	rlcf	(___lmul@multiplicand+2)^0,f,c
  1684   001842  3625               	rlcf	(___lmul@multiplicand+3)^0,f,c
  1685   001844  90D8               	bcf	status,0,c
  1686   001846  3221               	rrcf	(___lmul@multiplier+3)^0,f,c
  1687   001848  3220               	rrcf	(___lmul@multiplier+2)^0,f,c
  1688   00184A  321F               	rrcf	(___lmul@multiplier+1)^0,f,c
  1689   00184C  321E               	rrcf	___lmul@multiplier^0,f,c
  1690   00184E  501E               	movf	___lmul@multiplier^0,w,c
  1691   001850  101F               	iorwf	(___lmul@multiplier+1)^0,w,c
  1692   001852  1020               	iorwf	(___lmul@multiplier+2)^0,w,c
  1693   001854  1021               	iorwf	(___lmul@multiplier+3)^0,w,c
  1694   001856  A4D8               	btfss	status,2,c
  1695   001858  EF30  F00C         	goto	u931
  1696   00185C  EF32  F00C         	goto	u930
  1697   001860                     u931:
  1698   001860  EF0E  F00C         	goto	l1440
  1699   001864                     u930:
  1700   001864  C026  F01E         	movff	___lmul@product,?___lmul
  1701   001868  C027  F01F         	movff	___lmul@product+1,?___lmul+1
  1702   00186C  C028  F020         	movff	___lmul@product+2,?___lmul+2
  1703   001870  C029  F021         	movff	___lmul@product+3,?___lmul+3
  1704   001874  0012               	return		;funcret
  1705   001876                     __end_of___lmul:
  1706                           	callstack 0
  1707                           
  1708 ;; *************** function ___aldiv *****************
  1709 ;; Defined at:
  1710 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\aldiv.c"
  1711 ;; Parameters:    Size  Location     Type
  1712 ;;  dividend        4    3[COMRAM] long 
  1713 ;;  divisor         4    7[COMRAM] long 
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;  quotient        4   13[COMRAM] long 
  1716 ;;  sign            1   12[COMRAM] unsigned char 
  1717 ;;  counter         1   11[COMRAM] unsigned char 
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  4    3[COMRAM] long 
  1720 ;; Registers used:
  1721 ;;		wreg, status,2, status,0
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1727 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1728 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1730 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1731 ;;Total ram usage:       14 bytes
  1732 ;; Hardware stack levels used: 1
  1733 ;; Hardware stack levels required when called: 2
  1734 ;; This function calls:
  1735 ;;		Nothing
  1736 ;; This function is called by:
  1737 ;;		_main
  1738 ;;		_ADprevodnikFce
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742                           	psect	text6
  1743   00152C                     __ptext6:
  1744                           	callstack 0
  1745   00152C                     ___aldiv:
  1746                           	callstack 28
  1747   00152C  0E00               	movlw	0
  1748   00152E  6E27               	movwf	___aldiv@sign^0,c
  1749   001530  BE25               	btfsc	(___aldiv@divisor+3)^0,7,c
  1750   001532  EF9F  F00A         	goto	u940
  1751   001536  EF9D  F00A         	goto	u941
  1752   00153A                     u941:
  1753   00153A  EFA9  F00A         	goto	l1456
  1754   00153E                     u940:
  1755   00153E  1E25               	comf	(___aldiv@divisor+3)^0,f,c
  1756   001540  1E24               	comf	(___aldiv@divisor+2)^0,f,c
  1757   001542  1E23               	comf	(___aldiv@divisor+1)^0,f,c
  1758   001544  6C22               	negf	___aldiv@divisor^0,c
  1759   001546  0E00               	movlw	0
  1760   001548  2223               	addwfc	(___aldiv@divisor+1)^0,f,c
  1761   00154A  2224               	addwfc	(___aldiv@divisor+2)^0,f,c
  1762   00154C  2225               	addwfc	(___aldiv@divisor+3)^0,f,c
  1763   00154E  0E01               	movlw	1
  1764   001550  6E27               	movwf	___aldiv@sign^0,c
  1765   001552                     l1456:
  1766   001552  BE21               	btfsc	(___aldiv@dividend+3)^0,7,c
  1767   001554  EFB0  F00A         	goto	u950
  1768   001558  EFAE  F00A         	goto	u951
  1769   00155C                     u951:
  1770   00155C  EFBA  F00A         	goto	l1462
  1771   001560                     u950:
  1772   001560  1E21               	comf	(___aldiv@dividend+3)^0,f,c
  1773   001562  1E20               	comf	(___aldiv@dividend+2)^0,f,c
  1774   001564  1E1F               	comf	(___aldiv@dividend+1)^0,f,c
  1775   001566  6C1E               	negf	___aldiv@dividend^0,c
  1776   001568  0E00               	movlw	0
  1777   00156A  221F               	addwfc	(___aldiv@dividend+1)^0,f,c
  1778   00156C  2220               	addwfc	(___aldiv@dividend+2)^0,f,c
  1779   00156E  2221               	addwfc	(___aldiv@dividend+3)^0,f,c
  1780   001570  0E01               	movlw	1
  1781   001572  1A27               	xorwf	___aldiv@sign^0,f,c
  1782   001574                     l1462:
  1783   001574  0E00               	movlw	0
  1784   001576  6E28               	movwf	___aldiv@quotient^0,c
  1785   001578  0E00               	movlw	0
  1786   00157A  6E29               	movwf	(___aldiv@quotient+1)^0,c
  1787   00157C  0E00               	movlw	0
  1788   00157E  6E2A               	movwf	(___aldiv@quotient+2)^0,c
  1789   001580  0E00               	movlw	0
  1790   001582  6E2B               	movwf	(___aldiv@quotient+3)^0,c
  1791   001584  5022               	movf	___aldiv@divisor^0,w,c
  1792   001586  1023               	iorwf	(___aldiv@divisor+1)^0,w,c
  1793   001588  1024               	iorwf	(___aldiv@divisor+2)^0,w,c
  1794   00158A  1025               	iorwf	(___aldiv@divisor+3)^0,w,c
  1795   00158C  B4D8               	btfsc	status,2,c
  1796   00158E  EFCB  F00A         	goto	u961
  1797   001592  EFCD  F00A         	goto	u960
  1798   001596                     u961:
  1799   001596  EF03  F00B         	goto	l1484
  1800   00159A                     u960:
  1801   00159A  0E01               	movlw	1
  1802   00159C  6E26               	movwf	___aldiv@counter^0,c
  1803   00159E  EFD7  F00A         	goto	l1470
  1804   0015A2                     l1468:
  1805   0015A2  90D8               	bcf	status,0,c
  1806   0015A4  3622               	rlcf	___aldiv@divisor^0,f,c
  1807   0015A6  3623               	rlcf	(___aldiv@divisor+1)^0,f,c
  1808   0015A8  3624               	rlcf	(___aldiv@divisor+2)^0,f,c
  1809   0015AA  3625               	rlcf	(___aldiv@divisor+3)^0,f,c
  1810   0015AC  2A26               	incf	___aldiv@counter^0,f,c
  1811   0015AE                     l1470:
  1812   0015AE  AE25               	btfss	(___aldiv@divisor+3)^0,7,c
  1813   0015B0  EFDC  F00A         	goto	u971
  1814   0015B4  EFDE  F00A         	goto	u970
  1815   0015B8                     u971:
  1816   0015B8  EFD1  F00A         	goto	l1468
  1817   0015BC                     u970:
  1818   0015BC                     l1472:
  1819   0015BC  90D8               	bcf	status,0,c
  1820   0015BE  3628               	rlcf	___aldiv@quotient^0,f,c
  1821   0015C0  3629               	rlcf	(___aldiv@quotient+1)^0,f,c
  1822   0015C2  362A               	rlcf	(___aldiv@quotient+2)^0,f,c
  1823   0015C4  362B               	rlcf	(___aldiv@quotient+3)^0,f,c
  1824   0015C6  5022               	movf	___aldiv@divisor^0,w,c
  1825   0015C8  5C1E               	subwf	___aldiv@dividend^0,w,c
  1826   0015CA  5023               	movf	(___aldiv@divisor+1)^0,w,c
  1827   0015CC  581F               	subwfb	(___aldiv@dividend+1)^0,w,c
  1828   0015CE  5024               	movf	(___aldiv@divisor+2)^0,w,c
  1829   0015D0  5820               	subwfb	(___aldiv@dividend+2)^0,w,c
  1830   0015D2  5025               	movf	(___aldiv@divisor+3)^0,w,c
  1831   0015D4  5821               	subwfb	(___aldiv@dividend+3)^0,w,c
  1832   0015D6  A0D8               	btfss	status,0,c
  1833   0015D8  EFF0  F00A         	goto	u981
  1834   0015DC  EFF2  F00A         	goto	u980
  1835   0015E0                     u981:
  1836   0015E0  EFFB  F00A         	goto	l1480
  1837   0015E4                     u980:
  1838   0015E4  5022               	movf	___aldiv@divisor^0,w,c
  1839   0015E6  5E1E               	subwf	___aldiv@dividend^0,f,c
  1840   0015E8  5023               	movf	(___aldiv@divisor+1)^0,w,c
  1841   0015EA  5A1F               	subwfb	(___aldiv@dividend+1)^0,f,c
  1842   0015EC  5024               	movf	(___aldiv@divisor+2)^0,w,c
  1843   0015EE  5A20               	subwfb	(___aldiv@dividend+2)^0,f,c
  1844   0015F0  5025               	movf	(___aldiv@divisor+3)^0,w,c
  1845   0015F2  5A21               	subwfb	(___aldiv@dividend+3)^0,f,c
  1846   0015F4  8028               	bsf	___aldiv@quotient^0,0,c
  1847   0015F6                     l1480:
  1848   0015F6  90D8               	bcf	status,0,c
  1849   0015F8  3225               	rrcf	(___aldiv@divisor+3)^0,f,c
  1850   0015FA  3224               	rrcf	(___aldiv@divisor+2)^0,f,c
  1851   0015FC  3223               	rrcf	(___aldiv@divisor+1)^0,f,c
  1852   0015FE  3222               	rrcf	___aldiv@divisor^0,f,c
  1853   001600  2E26               	decfsz	___aldiv@counter^0,f,c
  1854   001602  EFDE  F00A         	goto	l1472
  1855   001606                     l1484:
  1856   001606  5027               	movf	___aldiv@sign^0,w,c
  1857   001608  B4D8               	btfsc	status,2,c
  1858   00160A  EF09  F00B         	goto	u991
  1859   00160E  EF0B  F00B         	goto	u990
  1860   001612                     u991:
  1861   001612  EF13  F00B         	goto	l1488
  1862   001616                     u990:
  1863   001616  1E2B               	comf	(___aldiv@quotient+3)^0,f,c
  1864   001618  1E2A               	comf	(___aldiv@quotient+2)^0,f,c
  1865   00161A  1E29               	comf	(___aldiv@quotient+1)^0,f,c
  1866   00161C  6C28               	negf	___aldiv@quotient^0,c
  1867   00161E  0E00               	movlw	0
  1868   001620  2229               	addwfc	(___aldiv@quotient+1)^0,f,c
  1869   001622  222A               	addwfc	(___aldiv@quotient+2)^0,f,c
  1870   001624  222B               	addwfc	(___aldiv@quotient+3)^0,f,c
  1871   001626                     l1488:
  1872   001626  C028  F01E         	movff	___aldiv@quotient,?___aldiv
  1873   00162A  C029  F01F         	movff	___aldiv@quotient+1,?___aldiv+1
  1874   00162E  C02A  F020         	movff	___aldiv@quotient+2,?___aldiv+2
  1875   001632  C02B  F021         	movff	___aldiv@quotient+3,?___aldiv+3
  1876   001636  0012               	return		;funcret
  1877   001638                     __end_of___aldiv:
  1878                           	callstack 0
  1879                           
  1880 ;; *************** function _low_isr *****************
  1881 ;; Defined at:
  1882 ;;		line 177 in file "source/main.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;		None
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;		None
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  1    wreg      void 
  1889 ;; Registers used:
  1890 ;;		wreg, status,2, status,0
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1898 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1899 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1900 ;;Total ram usage:        3 bytes
  1901 ;; Hardware stack levels used: 1
  1902 ;; Hardware stack levels required when called: 1
  1903 ;; This function calls:
  1904 ;;		Nothing
  1905 ;; This function is called by:
  1906 ;;		Interrupt level 1
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           	psect	intcodelo
  1911   000018                     __pintcodelo:
  1912                           	callstack 0
  1913   000018                     _low_isr:
  1914                           	callstack 28
  1915                           
  1916                           ;incstack = 0
  1917   000018  802C               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1918   00001A  CFD8 F01B          	movff	status,??_low_isr
  1919   00001E  CFE8 F01C          	movff	wreg,??_low_isr+1
  1920   000022  CFE0 F01D          	movff	bsr,??_low_isr+2
  1921   000026                     
  1922                           ;source/main.c: 179:     if(INTCONbits.TMR0IF == 1)
  1923   000026  A4F2               	btfss	242,2,c	;volatile
  1924   000028  EF18  F000         	goto	i1u53_21
  1925   00002C  EF1A  F000         	goto	i1u53_20
  1926   000030                     i1u53_21:
  1927   000030  EF2D  F000         	goto	i1l1212
  1928   000034                     i1u53_20:
  1929   000034                     
  1930                           ;source/main.c: 180:     {;source/main.c: 181:         is1ms = 1;
  1931   000034  0E01               	movlw	1
  1932   000036  6E0C               	movwf	_is1ms^0,c
  1933                           
  1934                           ;source/main.c: 182:         TMR0H = 0xD8;
  1935   000038  0ED8               	movlw	216
  1936   00003A  6ED7               	movwf	215,c	;volatile
  1937                           
  1938                           ;source/main.c: 183:         TMR0L = 0xEF;
  1939   00003C  0EEF               	movlw	239
  1940   00003E  6ED6               	movwf	214,c	;volatile
  1941   000040                     
  1942                           ;source/main.c: 185:         INTCONbits.TMR0IF = 0;
  1943   000040  94F2               	bcf	242,2,c	;volatile
  1944   000042                     
  1945                           ;source/main.c: 186:         is10ms++;
  1946   000042  2A0B               	incf	_is10ms^0,f,c
  1947   000044                     
  1948                           ;source/main.c: 188:     if(is10ms >= 10){
  1949   000044  0E09               	movlw	9
  1950   000046  640B               	cpfsgt	_is10ms^0,c
  1951   000048  EF28  F000         	goto	i1u54_21
  1952   00004C  EF2A  F000         	goto	i1u54_20
  1953   000050                     i1u54_21:
  1954   000050  EF2D  F000         	goto	i1l1212
  1955   000054                     i1u54_20:
  1956   000054                     
  1957                           ;source/main.c: 189:         is10ms = 0;
  1958   000054  0E00               	movlw	0
  1959   000056  6E0B               	movwf	_is10ms^0,c
  1960   000058                     
  1961                           ;source/main.c: 190:         ADCON0bits.GO = 1;
  1962   000058  82C2               	bsf	194,1,c	;volatile
  1963   00005A                     i1l1212:
  1964                           
  1965                           ;source/main.c: 194:     if(PIR1bits.ADIF == 1){
  1966   00005A  AC9E               	btfss	158,6,c	;volatile
  1967   00005C  EF32  F000         	goto	i1u55_21
  1968   000060  EF34  F000         	goto	i1u55_20
  1969   000064                     i1u55_21:
  1970   000064  EF43  F000         	goto	i1l87
  1971   000068                     i1u55_20:
  1972   000068                     
  1973                           ;source/main.c: 195:         vysledek = ADRESH;
  1974   000068  CFC4 F007          	movff	4036,_vysledek	;volatile
  1975   00006C  6A08               	clrf	(_vysledek+1)^0,c
  1976   00006E                     
  1977                           ;source/main.c: 196:         vysledek = (vysledek << 8);
  1978   00006E  5007               	movf	_vysledek^0,w,c
  1979   000070  6E08               	movwf	(_vysledek+1)^0,c
  1980   000072  6A07               	clrf	_vysledek^0,c
  1981   000074                     
  1982                           ;source/main.c: 197:         vysledek = vysledek + ADRESL;
  1983   000074  50C3               	movf	195,w,c	;volatile
  1984   000076  2407               	addwf	_vysledek^0,w,c
  1985   000078  6E07               	movwf	_vysledek^0,c
  1986   00007A  0E00               	movlw	0
  1987   00007C  2008               	addwfc	(_vysledek+1)^0,w,c
  1988   00007E  6E08               	movwf	(_vysledek+1)^0,c
  1989   000080                     
  1990                           ;source/main.c: 198:         ADRhotovo = 1;
  1991   000080  0E01               	movlw	1
  1992   000082  6E0A               	movwf	_ADRhotovo^0,c
  1993   000084                     
  1994                           ;source/main.c: 199:         PIR1bits.ADIF = 0;
  1995   000084  9C9E               	bcf	158,6,c	;volatile
  1996   000086                     i1l87:
  1997   000086  C01D  FFE0         	movff	??_low_isr+2,bsr
  1998   00008A  C01C  FFE8         	movff	??_low_isr+1,wreg
  1999   00008E  C01B  FFD8         	movff	??_low_isr,status
  2000   000092  902C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2001   000094  0010               	retfie	
  2002   000096                     __end_of_low_isr:
  2003                           	callstack 0
  2004                           
  2005 ;; *************** function _high_isr *****************
  2006 ;; Defined at:
  2007 ;;		line 171 in file "source/main.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;		None
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;		None
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  1    wreg      void 
  2014 ;; Registers used:
  2015 ;;		None
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2025 ;;Total ram usage:        0 bytes
  2026 ;; Hardware stack levels used: 1
  2027 ;; This function calls:
  2028 ;;		Nothing
  2029 ;; This function is called by:
  2030 ;;		Interrupt level 2
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034                           	psect	intcode
  2035   000008                     __pintcode:
  2036                           	callstack 0
  2037   000008                     _high_isr:
  2038                           	callstack 28
  2039                           
  2040                           ;incstack = 0
  2041   000008  822C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2042   00000A  EF68  F00C         	goto	int_func
  2043                           
  2044                           	psect	intcode_body
  2045   0018D0                     __pintcode_body:
  2046                           	callstack 28
  2047   0018D0                     int_func:
  2048                           	callstack 28
  2049   0018D0  922C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2050   0018D2  0011               	retfie		f
  2051   0018D4                     __end_of_high_isr:
  2052                           	callstack 0
  2053                           
  2054                           	psect	smallconst
  2055   001000                     __psmallconst:
  2056                           	callstack 0
  2057   001000  00                 	db	0
  2058   001001  00                 	db	0	; dummy byte at the end
  2059   000000                     
  2060                           	psect	rparam
  2061   000000                     
  2062                           	psect	temp
  2063   00002C                     btemp:
  2064                           	callstack 0
  2065   00002C                     	ds	1
  2066   000000                     int$flags	set	btemp
  2067   000000                     wtemp8	set	btemp+1
  2068   000000                     ttemp5	set	btemp+1
  2069   000000                     ttemp6	set	btemp+4
  2070   000000                     ttemp7	set	btemp+8
  2071                           
  2072                           	psect	config
  2073                           
  2074                           ;Config register CONFIG1L @ 0x1FFF8
  2075                           ;	Watchdog Timer Enable bit
  2076                           ;	WDTEN = OFF, WDT disabled (control is placed on SWDTEN bit)
  2077                           ;	Stack Overflow/Underflow Reset Enable bit
  2078                           ;	STVREN = ON, Reset on stack overflow/underflow enabled
  2079                           ;	Extended Instruction Set Enable bit
  2080                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2081                           ;	Background Debugger Enable bit
  2082                           ;	DEBUG = 0x1, unprogrammed default
  2083   01FFF8                     	org	131064
  2084   01FFF8  A0                 	db	160
  2085                           
  2086                           ;Config register CONFIG1H @ 0x1FFF9
  2087                           ;	Code Protection bit
  2088                           ;	CP0 = OFF, Program memory is not code-protected
  2089   01FFF9                     	org	131065
  2090   01FFF9  F4                 	db	244
  2091                           
  2092                           ;Config register CONFIG2L @ 0x1FFFA
  2093                           ;	Oscillator Selection bits
  2094                           ;	FOSC = HSPLL, HS oscillator, PLL enabled
  2095                           ;	Fail-Safe Clock Monitor Enable bit
  2096                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2097                           ;	Two-Speed Start-up (Internal/External Oscillator Switchover) Control bit
  2098                           ;	IESO = OFF, Two-Speed Start-up disabled
  2099   01FFFA                     	org	131066
  2100   01FFFA  05                 	db	5
  2101                           
  2102                           ;Config register CONFIG2H @ 0x1FFFB
  2103                           ;	Watchdog Timer Postscaler Select bits
  2104                           ;	WDTPS = 32768, 1:32768
  2105   01FFFB                     	org	131067
  2106   01FFFB  FF                 	db	255
  2107                           
  2108                           ;Config register CONFIG3L @ 0x1FFFC
  2109                           ;	External Address Bus Shift Enable bit
  2110                           ;	EASHFT = 0x1, unprogrammed default
  2111                           ;	External Memory Bus Configuration bits
  2112                           ;	MODE = MM, Microcontroller mode - External bus disabled
  2113                           ;	Data Bus Width Select bit
  2114                           ;	BW = 0x1, unprogrammed default
  2115                           ;	External Bus Wait Enable bit
  2116                           ;	WAIT = 0x1, unprogrammed default
  2117   01FFFC                     	org	131068
  2118   01FFFC  F8                 	db	248
  2119                           
  2120                           ;Config register CONFIG3H @ 0x1FFFD
  2121                           ;	unspecified, using default values
  2122                           ;	ECCP2 MUX bit
  2123                           ;	CCP2MX = 0x1, unprogrammed default
  2124                           ;	ECCPx MUX bit
  2125                           ;	ECCPMX = 0x1, unprogrammed default
  2126                           ;	PMP Pin Multiplex bit
  2127                           ;	PMPMX = 0x1, unprogrammed default
  2128                           ;	MSSP Address Masking Mode Select bit
  2129                           ;	MSSPMSK = 0x1, unprogrammed default
  2130   01FFFD                     	org	131069
  2131   01FFFD  FF                 	db	255
  2132                           tosu	equ	0xFFF
  2133                           tosh	equ	0xFFE
  2134                           tosl	equ	0xFFD
  2135                           stkptr	equ	0xFFC
  2136                           pclatu	equ	0xFFB
  2137                           pclath	equ	0xFFA
  2138                           pcl	equ	0xFF9
  2139                           tblptru	equ	0xFF8
  2140                           tblptrh	equ	0xFF7
  2141                           tblptrl	equ	0xFF6
  2142                           tablat	equ	0xFF5
  2143                           prodh	equ	0xFF4
  2144                           prodl	equ	0xFF3
  2145                           indf0	equ	0xFEF
  2146                           postinc0	equ	0xFEE
  2147                           postdec0	equ	0xFED
  2148                           preinc0	equ	0xFEC
  2149                           plusw0	equ	0xFEB
  2150                           fsr0h	equ	0xFEA
  2151                           fsr0l	equ	0xFE9
  2152                           wreg	equ	0xFE8
  2153                           indf1	equ	0xFE7
  2154                           postinc1	equ	0xFE6
  2155                           postdec1	equ	0xFE5
  2156                           preinc1	equ	0xFE4
  2157                           plusw1	equ	0xFE3
  2158                           fsr1h	equ	0xFE2
  2159                           fsr1l	equ	0xFE1
  2160                           bsr	equ	0xFE0
  2161                           indf2	equ	0xFDF
  2162                           postinc2	equ	0xFDE
  2163                           postdec2	equ	0xFDD
  2164                           preinc2	equ	0xFDC
  2165                           plusw2	equ	0xFDB
  2166                           fsr2h	equ	0xFDA
  2167                           fsr2l	equ	0xFD9
  2168                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     17      43
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           64      0       0

Pointer List with Targets:

    dekoderFce@tlacitko	PTR struct . size(1) Largest target is 2
		 -> dekoderAB(COMRAM[2]), 

    filterFce@tlacitko	PTR struct . size(1) Largest target is 2
		 -> S3(COMRAM[2]), S4(COMRAM[2]), S5A(COMRAM[2]), S5B(COMRAM[2]), 

    pametFce@tlacitko	PTR struct . size(1) Largest target is 2
		 -> S3Filtr(COMRAM[2]), S4Filtr(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->___aldiv

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _low_isr in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3606
                            ___aldiv
                             ___lmul
                         _dekoderFce
                          _filterFce
                           _pametFce
             _preambleInitialization
 ---------------------------------------------------------------------------------
 (1) _preambleInitialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pametFce                                             5     3      2     511
                                              3 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _filterFce                                            5     3      2     839
                                              3 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _dekoderFce                                           5     2      3    1130
                                              3 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     522
                                              3 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     604
                                              3 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _low_isr                                              3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _high_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___aldiv
   ___lmul
   _dekoderFce
   _filterFce
   _pametFce
   _preambleInitialization

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F3F      0       0      50        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     11      2B       1       45.7%
BITBANK15           40      0       0      35        0.0%
BANK15              40      0       0      36        0.0%
BITBIGSFRll         2B      0       0      49        0.0%
BITBIGSFRhhlllh     20      0       0      42        0.0%
BITBIGSFRhhlh       19      0       0      38        0.0%
BITBIGSFRhhllhh      B      0       0      41        0.0%
BITBIGSFRhhh         A      0       0      37        0.0%
BITBIGSFRhhllll      8      0       0      46        0.0%
BITBIGSFRhl          3      0       0      47        0.0%
BITBIGSFRhhllhh      2      0       0      40        0.0%
BITBIGSFRhhllhh      1      0       0      39        0.0%
BITBIGSFRhhllll      1      0       0      44        0.0%
BITBIGSFRhhllll      1      0       0      45        0.0%
BITBIGSFRhhllll      1      0       0      43        0.0%
BITBIGSFRlh          1      0       0      48        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2B      32        0.0%
DATA                 0      0      2B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Dec 19 16:36:28 2023

                            l70 1520                              l62 1434                              l68 1504  
                            _S3 0017                              _S4 0019                              bsr 0FE0  
                           l204 12E6                             l132 18B8                             l224 1864  
                           l225 1874                             l182 10AE                             l158 172C  
                           l175 180A                             l292 1636                             l900 188E  
                           l910 18AC                             l902 189C                             l912 18AE  
                           l904 189E                             l914 18B4                             l906 18A0  
                           l916 18B6                             l908 18A2                             l890 187C  
                           l892 1886                             l894 1888                             l886 1876  
                           l896 188A                             l888 187A                             l898 188C  
                           _S5A 0015                             _S5B 0013                             u600 1670  
                           u601 166C                             u610 1688                             u611 1684  
                           u700 104A                             u620 16AE                             u701 1046  
                           u621 16AA                             u710 106A                             u630 16C6  
                           u711 1066                             u631 16C2                             u800 1168  
                           u720 107A                             u640 1746                             u801 1164  
                           u721 1076                             u641 1742                             u810 1178  
                           u730 109E                             u650 1766                             u811 1174  
                           u731 109A                             u651 1762                             u900 1272  
                           u820 119C                             u740 10C2                             u660 1792  
                           u901 126E                             u821 1198                             u741 10BE  
                           u661 178E                             u910 1296                             u830 11BC  
                           u750 10D2                             u590 1650                             u670 17AA  
                           u911 1292                             u831 11B8                             u751 10CE  
                           u591 164C                             u671 17A6                             u920 182A  
                           u840 11CC                             u760 10F6                             u680 1016  
                           u921 1826                             u841 11C8                             u761 10F2  
                           u681 1012                             u930 1864                             u850 11F0  
                           u770 1116                             u690 1026                             u931 1860  
                           u851 11EC                             u771 1112                             u691 1022  
                           u940 153E                             u860 1210                             u780 1126  
                           u941 153A                             u861 120C                             u781 1122  
                           u950 1560                             u870 1220                             u790 1148  
                           u951 155C                             u871 121C                             u791 1144  
                           u960 159A                             u880 1242                             u961 1596  
                           u881 123E                             u970 15BC                             u890 1262  
                           u971 15B8                             u891 125E                             u980 15E4  
                           u981 15E0                             u990 1616                             u991 1612  
                           wreg 0FE8                            l1300 16DA                            l1302 1722  
                          l1310 1736                            l1400 11AC                            l1320 176A  
                          l1312 1746                            l1410 1200                            l1402 11BC  
                          l1330 179A                            l1322 177A                            l1314 174E  
                          l1412 1210                            l1420 1252                            l1404 11CC  
                          l1332 17AA                            l1324 1782                            l1316 1756  
                          l1340 17C0                            l1308 172E                            l1500 134A  
                          l1422 1262                            l1414 1220                            l1406 11D6  
                          l1350 1006                            l1270 1660                            l1262 1638  
                          l1334 17AE                            l1326 1792                            l1318 1766  
                          l1342 1800                            l1510 13C4                            l1502 136C  
                          l1440 181C                            l1424 1272                            l1416 1228  
                          l1408 11F0                            l1352 1016                            l1360 105A  
                          l1432 12A6                            l1280 168C                            l1272 1670  
                          l1264 1640                            l1520 14AC                            l1512 13F8  
                          l1504 137C                            l1450 1530                            l1442 182A  
                          l1426 127C                            l1418 1242                            l1370 10B2  
                          l1362 106A                            l1354 1026                            l1290 16B6  
                          l1266 1650                            l1530 14D8                            l1522 14B0  
                          l1514 142C                            l1506 139C                            l1460 1570  
                          l1452 153E                            l1444 183A                            l1428 1296  
                          l1372 10C2                            l1380 1106                            l1364 107A  
                          l1356 1030                            l1348 1002                            l1292 16C6  
                          l1284 169E                            l1276 1678                            l1268 1658  
                          l1540 1518                            l1532 14E8                            l1524 14BA  
                          l1516 1430                            l1508 13AC                            l1470 15AE  
                          l1462 1574                            l1454 154E                            l1446 1844  
                          l1438 180C                            l1390 1158                            l1382 1116  
                          l1374 10D2                            l1366 1084                            l1358 104A  
                          l1294 16CA                            l1286 16AE                            l1278 1688  
                          l1534 14EE                            l1526 14C4                            l1518 1444  
                          l1480 15F6                            l1472 15BC                            l1464 1584  
                          l1456 1552                            l1448 152C                            l1392 1168  
                          l1384 1126                            l1376 10DC                            l1368 109E  
                          l1536 14FE                            l1528 14CE                            l1482 1600  
                          l1474 15C6                            l1466 159A                            l1458 1560  
                          l1394 1178                            l1386 112E                            l1378 10F6  
                          l1538 1508                            l1476 15E4                            l1468 15A2  
                          l1484 1606                            l1580 12C0                            l1396 1182  
                          l1388 1148                            l1492 12E8                            l1486 1616  
                          l1478 15F4                            l1398 119C                            l1494 1324  
                          l1488 1626                            l1576 17DA                            l1496 1328  
                          l1578 16F4                            l1498 1338                            u1000 1338  
                          u1001 1334                            u1010 136C                            u1011 1368  
                          u1100 1518                            u1020 139C                            u1101 1514  
                          u1021 1398                            u1030 1444                            u1031 1440  
                          u1045 14B8                            u1046 14BA                            u1055 14C2  
                          u1080 14E8                            u1056 14C4                            u1081 14E4  
                          u1065 14CC                            u1090 14FE                            u1066 14CE  
                          u1091 14FA                            u1075 14D6                            u1076 14D8  
                          i1l87 0086                            i2l79 18D0                            _comp 0005  
                          _main 12E8                            fsr2h 0FDA                            indf2 0FDF  
                          fsr2l 0FD9                            btemp 002C                            start 0096  
             pametFce@dalsiStav 0022                    ___param_bank 0000                 __end_of___aldiv 1638  
                         ?_main 001B                           _T0CON 0FD5                           _TMR0H 0FD7  
                         _TMR0L 0FD6                           _PORTH 0F87                           _TRISD 0F95  
                         _TRISF 0F97                           _TRISH 0F99                           _TRISJ 0F9A  
           ___lmul@multiplicand 0022                           _is1ms 000C                 __end_of_low_isr 0096  
                         ttemp5 002D                           ttemp6 0030                           ttemp7 0034  
                         status 0FD8                           wtemp8 002D                 __initialization 18BA  
                  __end_of_main 152C                          ??_main 002C                   __activetblptr 0003  
                        _ADCON0 0FC2                          _ADCON1 0FC1                          _ADRESH 0FC4  
                        _ADRESL 0FC3                          i1l1200 0034                          i1l1210 0058  
                        i1l1202 0040                          i1l1220 0080                          i1l1204 0042  
                        i1l1212 005A                          i1l1222 0084                          i1l1214 0068  
                        i1l1206 0044                          i1l1216 006E                          i1l1208 0054  
                        i1l1218 0074                          i1l1198 0026                __end_of_high_isr 18D4  
                        _is10ms 000B                          ___lmul 180C                       ??___aldiv 0026  
        _preambleInitialization 1876                __end_of_pametFce 180C                          clear_0 18C0  
                        isa$std 0001                          _vystup 0009                    __mediumconst 0000  
                     ??_low_isr 001B                      __accesstop 0060         __end_of__initialization 18C6  
                 ___rparam_used 0001                  __pcstackCOMRAM 001B                      _dekoderFce 1002  
                       ?___lmul 001E                  ___lmul@product 0026              dekoderFce@tlacitko 001E  
            filterFce@dalsiStav 0022                         _S3Filtr 000F                         _S4Filtr 0011  
                       i1u53_20 0034                         i1u53_21 0030                         i1u54_20 0054  
                       i1u54_21 0050                         i1u55_20 0068                         i1u55_21 0064  
                     ?_high_isr 001B                       ?_pametFce 001E                         __Hparam 0000  
                       __Lparam 0000                         ___aldiv 152C               __end_of_filterFce 172E  
                  __psmallconst 1000                         __pcinit 18BA                         __ramtop 1000  
                       __ptext0 12E8                         __ptext1 1876                         __ptext2 172E  
                       __ptext3 1638                         __ptext4 1002                         __ptext5 180C  
                       __ptext6 152C                       _T0CONbits 0FD5                       _ADRhotovo 000A  
              ___aldiv@dividend 001E                         _low_isr 0018                      ??_high_isr 001B  
                __pintcode_body 18D0            end_of_initialization 18C6                      ??_pametFce 0020  
                       int_func 18D0                     _adKalkulace 0001                     ?_dekoderFce 001E  
                filterFce@vstup 001F         ?_preambleInitialization 001B                ___aldiv@quotient 0028  
                       postinc0 0FEE                         postinc2 0FDE                       _PORTFbits 0F85  
                     _PORTJbits 0F88                       _TRISFbits 0F97  __end_of_preambleInitialization 18BA  
                __end_of___lmul 1876             start_initialization 18BA                pametFce@tlacitko 001E  
                      ??___lmul 0026                     __pbssCOMRAM 0001                       _dekoderAB 000D  
                     __pintcode 0008                        ?___aldiv 001E                     __pintcodelo 0018  
                     _filterFce 1638                     __smallconst 1000                        ?_low_isr 001B  
             filterFce@tlacitko 001E                 ___aldiv@divisor 0022                 ___aldiv@counter 0026  
                      _LATDbits 0F8C                        _IPR1bits 0F9F                        _PIE1bits 0F9D  
                  ??_dekoderFce 0021                        _PIR1bits 0F9E                        _RCONbits 0FD0  
                    _ADCON0bits 0FC2                      ?_filterFce 001E              __end_of_dekoderFce 12E8  
             ___lmul@multiplier 001E                     _INTCON2bits 0FF1                      _ANCON1bits 0FC2  
                      __Hrparam 0000                        __Lrparam 0000                   pametFce@input 001F  
                      _high_isr 0008                        _pametFce 172E                        isa$xinst 0000  
                      int$flags 002C                     ??_filterFce 0020                     dekoderFce@A 001F  
                   dekoderFce@B 0020                     _OSCTUNEbits 0F9B                      _INTCONbits 0FF2  
                      _vysledek 0007                        intlevel1 0000                        intlevel2 0000  
                    _OSCCONbits 0FD3                    ___aldiv@sign 0027                      _WDTCONbits 0FC0  
      ??_preambleInitialization 001E  
