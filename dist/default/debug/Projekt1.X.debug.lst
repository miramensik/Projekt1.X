

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Jan 03 02:03:10 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F87J11
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    20                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25   000000                     
    26                           ; Generated 23/03/2023 GMT
    27                           ; 
    28                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F87J11 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60   000000                     
    61                           	psect	idataCOMRAM
    62   0019D6                     __pidataCOMRAM:
    63                           	callstack 0
    64                           
    65                           ;initializer for high_isr@pocHodnota
    66   0019D6  01                 	db	1
    67   000000                     _ADCON1	set	4033
    68   000000                     _ADRESL	set	4035
    69   000000                     _ADRESH	set	4036
    70   000000                     _ADCON0	set	4034
    71   000000                     _ANCON1bits	set	4034
    72   000000                     _TRISFbits	set	3991
    73   000000                     _T0CONbits	set	4053
    74   000000                     _CCPR1L	set	4028
    75   000000                     _CCPR1H	set	4029
    76   000000                     _PORTCbits	set	3970
    77   000000                     _PORTDbits	set	3971
    78   000000                     _PORTJbits	set	3976
    79   000000                     _LATDbits	set	3980
    80   000000                     _LATH	set	3984
    81   000000                     _PORTFbits	set	3973
    82   000000                     _PORTH	set	3975
    83   000000                     _TRISCbits	set	3988
    84   000000                     _TRISD	set	3989
    85   000000                     _TRISJ	set	3994
    86   000000                     _PIR1bits	set	3998
    87   000000                     _CCPR1	set	4028
    88   000000                     _IPR1bits	set	3999
    89   000000                     _CCP1CON	set	4027
    90   000000                     _WDTCONbits	set	4032
    91   000000                     _ADCON0bits	set	4034
    92   000000                     _TMR0L	set	4054
    93   000000                     _TMR0H	set	4055
    94   000000                     _INTCONbits	set	4082
    95   000000                     _INTCON2bits	set	4081
    96   000000                     _T1CON	set	4045
    97   000000                     _T0CON	set	4053
    98   000000                     _OSCTUNEbits	set	3995
    99   000000                     _PIE1bits	set	3997
   100   000000                     _TRISF	set	3991
   101   000000                     _TRISH	set	3993
   102   000000                     _RCONbits	set	4048
   103   000000                     _OSCCONbits	set	4051
   104                           
   105                           ; #config settings
   106                           
   107                           	psect	cinit
   108   0019AE                     __pcinit:
   109                           	callstack 0
   110   0019AE                     start_initialization:
   111                           	callstack 0
   112   0019AE                     __initialization:
   113                           	callstack 0
   114                           
   115                           ; Initialize objects allocated to COMRAM (1 bytes)
   116                           ; load TBLPTR registers with __pidataCOMRAM
   117   0019AE  0ED6               	movlw	low __pidataCOMRAM
   118   0019B0  6EF6               	movwf	tblptrl,c
   119   0019B2  0E19               	movlw	high __pidataCOMRAM
   120   0019B4  6EF7               	movwf	tblptrh,c
   121   0019B6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   122   0019B8  6EF8               	movwf	tblptru,c
   123   0019BA  0009               	tblrd		*+	;fetch initializer
   124   0019BC  CFF5 F033          	movff	tablat,__pdataCOMRAM
   125                           
   126                           ; Clear objects allocated to COMRAM (33 bytes)
   127   0019C0  EE00  F001         	lfsr	0,__pbssCOMRAM
   128   0019C4  0E21               	movlw	33
   129   0019C6                     clear_0:
   130   0019C6  6AEE               	clrf	postinc0,c
   131   0019C8  06E8               	decf	wreg,f,c
   132   0019CA  E1FD               	bnz	clear_0
   133   0019CC                     end_of_initialization:
   134                           	callstack 0
   135   0019CC                     __end_of__initialization:
   136                           	callstack 0
   137   0019CC  9034               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   138   0019CE  9234               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   139   0019D0  0100               	movlb	0
   140   0019D2  EF74  F009         	goto	_main	;jump to C main() function
   141                           
   142                           	psect	bssCOMRAM
   143   000001                     __pbssCOMRAM:
   144                           	callstack 0
   145   000001                     _adKalkulace:
   146                           	callstack 0
   147   000001                     	ds	4
   148   000005                     _pulzBack:
   149                           	callstack 0
   150   000005                     	ds	2
   151   000007                     _mezera:
   152                           	callstack 0
   153   000007                     	ds	2
   154   000009                     _pulz:
   155                           	callstack 0
   156   000009                     	ds	2
   157   00000B                     _komparace:
   158                           	callstack 0
   159   00000B                     	ds	2
   160   00000D                     _vysledek:
   161                           	callstack 0
   162   00000D                     	ds	2
   163   00000F                     _vystup:
   164                           	callstack 0
   165   00000F                     	ds	1
   166   000010                     _novyPulz:
   167                           	callstack 0
   168   000010                     	ds	1
   169   000011                     _ADRhotovo:
   170                           	callstack 0
   171   000011                     	ds	1
   172   000012                     _is10ms:
   173                           	callstack 0
   174   000012                     	ds	1
   175   000013                     _is1ms:
   176                           	callstack 0
   177   000013                     	ds	1
   178   000014                     _dekoderAB:
   179                           	callstack 0
   180   000014                     	ds	2
   181   000016                     _S3Filtr:
   182                           	callstack 0
   183   000016                     	ds	2
   184   000018                     _S4Filtr:
   185                           	callstack 0
   186   000018                     	ds	2
   187   00001A                     _S5B:
   188                           	callstack 0
   189   00001A                     	ds	2
   190   00001C                     _S5A:
   191                           	callstack 0
   192   00001C                     	ds	2
   193   00001E                     _S3:
   194                           	callstack 0
   195   00001E                     	ds	2
   196   000020                     _S4:
   197                           	callstack 0
   198   000020                     	ds	2
   199                           
   200                           	psect	dataCOMRAM
   201   000033                     __pdataCOMRAM:
   202                           	callstack 0
   203   000033                     high_isr@pocHodnota:
   204                           	callstack 0
   205   000033                     	ds	1
   206                           
   207                           	psect	cstackCOMRAM
   208   000022                     __pcstackCOMRAM:
   209                           	callstack 0
   210   000022                     ??_low_isr:
   211                           
   212                           ; 1 bytes @ 0x0
   213   000022                     	ds	3
   214   000025                     ?___lmul:
   215                           	callstack 0
   216   000025                     ?___aldiv:
   217                           	callstack 0
   218   000025                     filterFce@tlacitko:
   219                           	callstack 0
   220   000025                     pametFce@tlacitko:
   221                           	callstack 0
   222   000025                     dekoderFce@tlacitko:
   223                           	callstack 0
   224   000025                     ___lmul@multiplier:
   225                           	callstack 0
   226   000025                     ___aldiv@dividend:
   227                           	callstack 0
   228                           
   229                           ; 4 bytes @ 0x3
   230   000025                     	ds	1
   231   000026                     filterFce@vstup:
   232                           	callstack 0
   233   000026                     pametFce@input:
   234                           	callstack 0
   235   000026                     dekoderFce@A:
   236                           	callstack 0
   237                           
   238                           ; 1 bytes @ 0x4
   239   000026                     	ds	1
   240   000027                     ??_filterFce:
   241   000027                     ??_pametFce:
   242   000027                     dekoderFce@B:
   243                           	callstack 0
   244                           
   245                           ; 1 bytes @ 0x5
   246   000027                     	ds	1
   247   000028                     ??_dekoderFce:
   248                           
   249                           ; 1 bytes @ 0x6
   250   000028                     	ds	1
   251   000029                     filterFce@dalsiStav:
   252                           	callstack 0
   253   000029                     pametFce@dalsiStav:
   254                           	callstack 0
   255   000029                     ___lmul@multiplicand:
   256                           	callstack 0
   257   000029                     ___aldiv@divisor:
   258                           	callstack 0
   259                           
   260                           ; 4 bytes @ 0x7
   261   000029                     	ds	4
   262   00002D                     ___aldiv@counter:
   263                           	callstack 0
   264   00002D                     ___lmul@product:
   265                           	callstack 0
   266                           
   267                           ; 4 bytes @ 0xB
   268   00002D                     	ds	1
   269   00002E                     ___aldiv@sign:
   270                           	callstack 0
   271                           
   272                           ; 1 bytes @ 0xC
   273   00002E                     	ds	1
   274   00002F                     ___aldiv@quotient:
   275                           	callstack 0
   276                           
   277                           ; 4 bytes @ 0xD
   278   00002F                     	ds	4
   279   000033                     
   280                           ; 1 bytes @ 0x11
   281 ;;
   282 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   283 ;;
   284 ;; *************** function _main *****************
   285 ;; Defined at:
   286 ;;		line 77 in file "source/main.c"
   287 ;; Parameters:    Size  Location     Type
   288 ;;		None
   289 ;; Auto vars:     Size  Location     Type
   290 ;;		None
   291 ;; Return value:  Size  Location     Type
   292 ;;                  1    wreg      void 
   293 ;; Registers used:
   294 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   295 ;; Tracked objects:
   296 ;;		On entry : 0/0
   297 ;;		On exit  : 0/0
   298 ;;		Unchanged: 0/0
   299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   304 ;;Total ram usage:        0 bytes
   305 ;; Hardware stack levels required when called: 3
   306 ;; This function calls:
   307 ;;		___aldiv
   308 ;;		___lmul
   309 ;;		_dekoderFce
   310 ;;		_filterFce
   311 ;;		_pametFce
   312 ;;		_preambleInitialization
   313 ;; This function is called by:
   314 ;;		Startup code after reset
   315 ;; This function uses a non-reentrant model
   316 ;;
   317                           
   318                           	psect	text0
   319   0012E8                     __ptext0:
   320                           	callstack 0
   321   0012E8                     _main:
   322                           	callstack 28
   323   0012E8                     
   324                           ;source/main.c: 80:     S4.stav = 0;
   325   0012E8  0E00               	movlw	0
   326   0012EA  6E20               	movwf	_S4^0,c
   327                           
   328                           ;source/main.c: 81:     S4.vystup = 0;
   329   0012EC  0E00               	movlw	0
   330   0012EE  6E21               	movwf	(_S4+1)^0,c
   331                           
   332                           ;source/main.c: 83:     S3.stav = 0;
   333   0012F0  0E00               	movlw	0
   334   0012F2  6E1E               	movwf	_S3^0,c
   335                           
   336                           ;source/main.c: 84:     S3.vystup = 0;
   337   0012F4  0E00               	movlw	0
   338   0012F6  6E1F               	movwf	(_S3+1)^0,c
   339                           
   340                           ;source/main.c: 86:     S5A.stav = 0;
   341   0012F8  0E00               	movlw	0
   342   0012FA  6E1C               	movwf	_S5A^0,c
   343                           
   344                           ;source/main.c: 87:     S5A.vystup = 0;
   345   0012FC  0E00               	movlw	0
   346   0012FE  6E1D               	movwf	(_S5A+1)^0,c
   347                           
   348                           ;source/main.c: 89:     S5B.stav = 0;
   349   001300  0E00               	movlw	0
   350   001302  6E1A               	movwf	_S5B^0,c
   351                           
   352                           ;source/main.c: 90:     S5B.vystup = 0;
   353   001304  0E00               	movlw	0
   354   001306  6E1B               	movwf	(_S5B+1)^0,c
   355                           
   356                           ;source/main.c: 92:     S4Filtr.stav = 0;
   357   001308  0E00               	movlw	0
   358   00130A  6E18               	movwf	_S4Filtr^0,c
   359                           
   360                           ;source/main.c: 93:     S4Filtr.vystup = 0;
   361   00130C  0E00               	movlw	0
   362   00130E  6E19               	movwf	(_S4Filtr+1)^0,c
   363                           
   364                           ;source/main.c: 95:     S3Filtr.stav = 0;
   365   001310  0E00               	movlw	0
   366   001312  6E16               	movwf	_S3Filtr^0,c
   367                           
   368                           ;source/main.c: 96:     S3Filtr.vystup = 0;
   369   001314  0E00               	movlw	0
   370   001316  6E17               	movwf	(_S3Filtr+1)^0,c
   371                           
   372                           ;source/main.c: 98:     dekoderAB.stav = 0;
   373   001318  0E00               	movlw	0
   374   00131A  6E14               	movwf	_dekoderAB^0,c
   375                           
   376                           ;source/main.c: 99:     dekoderAB.vystup = 0;
   377   00131C  0E00               	movlw	0
   378   00131E  6E15               	movwf	(_dekoderAB+1)^0,c
   379                           
   380                           ;source/main.c: 101:     ADRhotovo = 0;
   381   001320  0E00               	movlw	0
   382   001322  6E11               	movwf	_ADRhotovo^0,c
   383   001324                     
   384                           ;source/main.c: 105:   preambleInitialization();
   385   001324  ECAA  F00C         	call	_preambleInitialization	;wreg free
   386   001328                     l1584:
   387                           
   388                           ;source/main.c: 111:   {;source/main.c: 114:     if(ADRhotovo == 1){
   389   001328  0411               	decf	_ADRhotovo^0,w,c
   390   00132A  A4D8               	btfss	status,2,c
   391   00132C  EF9A  F009         	goto	u1061
   392   001330  EF9C  F009         	goto	u1060
   393   001334                     u1061:
   394   001334  EF17  F00A         	goto	l86
   395   001338                     u1060:
   396   001338                     
   397                           ;source/main.c: 115:         adKalkulace = (long)vysledek;
   398   001338  C00D  F001         	movff	_vysledek,_adKalkulace
   399   00133C  C00E  F002         	movff	_vysledek+1,_adKalkulace+1
   400   001340  6A03               	clrf	(_adKalkulace+2)^0,c
   401   001342  6A04               	clrf	(_adKalkulace+3)^0,c
   402   001344                     
   403                           ;source/main.c: 116:         if(adKalkulace > 1000){
   404   001344  BE04               	btfsc	(_adKalkulace+3)^0,7,c
   405   001346  EFB1  F009         	goto	u1071
   406   00134A  5004               	movf	(_adKalkulace+3)^0,w,c
   407   00134C  1003               	iorwf	(_adKalkulace+2)^0,w,c
   408   00134E  E10B               	bnz	u1070
   409   001350  0EE9               	movlw	233
   410   001352  5C01               	subwf	_adKalkulace^0,w,c
   411   001354  0E03               	movlw	3
   412   001356  5802               	subwfb	(_adKalkulace+1)^0,w,c
   413   001358  A0D8               	btfss	status,0,c
   414   00135A  EFB1  F009         	goto	u1071
   415   00135E  EFB3  F009         	goto	u1070
   416   001362                     u1071:
   417   001362  EFBB  F009         	goto	l1592
   418   001366                     u1070:
   419   001366                     
   420                           ;source/main.c: 117:             adKalkulace = 1000;
   421   001366  0EE8               	movlw	232
   422   001368  6E01               	movwf	_adKalkulace^0,c
   423   00136A  0E03               	movlw	3
   424   00136C  6E02               	movwf	(_adKalkulace+1)^0,c
   425   00136E  0E00               	movlw	0
   426   001370  6E03               	movwf	(_adKalkulace+2)^0,c
   427   001372  0E00               	movlw	0
   428   001374  6E04               	movwf	(_adKalkulace+3)^0,c
   429   001376                     l1592:
   430                           
   431                           ;source/main.c: 119:         if(adKalkulace < 50){
   432   001376  BE04               	btfsc	(_adKalkulace+3)^0,7,c
   433   001378  EFCB  F009         	goto	u1080
   434   00137C  5004               	movf	(_adKalkulace+3)^0,w,c
   435   00137E  1003               	iorwf	(_adKalkulace+2)^0,w,c
   436   001380  1002               	iorwf	(_adKalkulace+1)^0,w,c
   437   001382  E107               	bnz	u1081
   438   001384  0E32               	movlw	50
   439   001386  5C01               	subwf	_adKalkulace^0,w,c
   440   001388  B0D8               	btfsc	status,0,c
   441   00138A  EFC9  F009         	goto	u1081
   442   00138E  EFCB  F009         	goto	u1080
   443   001392                     u1081:
   444   001392  EFD3  F009         	goto	l1596
   445   001396                     u1080:
   446   001396                     
   447                           ;source/main.c: 120:             adKalkulace = 50;
   448   001396  0E32               	movlw	50
   449   001398  6E01               	movwf	_adKalkulace^0,c
   450   00139A  0E00               	movlw	0
   451   00139C  6E02               	movwf	(_adKalkulace+1)^0,c
   452   00139E  0E00               	movlw	0
   453   0013A0  6E03               	movwf	(_adKalkulace+2)^0,c
   454   0013A2  0E00               	movlw	0
   455   0013A4  6E04               	movwf	(_adKalkulace+3)^0,c
   456   0013A6                     l1596:
   457                           
   458                           ;source/main.c: 122:         adKalkulace = adKalkulace - 50;
   459   0013A6  0ECE               	movlw	206
   460   0013A8  2401               	addwf	_adKalkulace^0,w,c
   461   0013AA  6E01               	movwf	_adKalkulace^0,c
   462   0013AC  0EFF               	movlw	255
   463   0013AE  2002               	addwfc	(_adKalkulace+1)^0,w,c
   464   0013B0  6E02               	movwf	(_adKalkulace+1)^0,c
   465   0013B2  0EFF               	movlw	255
   466   0013B4  2003               	addwfc	(_adKalkulace+2)^0,w,c
   467   0013B6  6E03               	movwf	(_adKalkulace+2)^0,c
   468   0013B8  0EFF               	movlw	255
   469   0013BA  2004               	addwfc	(_adKalkulace+3)^0,w,c
   470   0013BC  6E04               	movwf	(_adKalkulace+3)^0,c
   471   0013BE                     
   472                           ;source/main.c: 123:         adKalkulace = adKalkulace * 255;
   473   0013BE  C001  F025         	movff	_adKalkulace,___lmul@multiplier
   474   0013C2  C002  F026         	movff	_adKalkulace+1,___lmul@multiplier+1
   475   0013C6  C003  F027         	movff	_adKalkulace+2,___lmul@multiplier+2
   476   0013CA  C004  F028         	movff	_adKalkulace+3,___lmul@multiplier+3
   477   0013CE  0EFF               	movlw	255
   478   0013D0  6E29               	movwf	___lmul@multiplicand^0,c
   479   0013D2  0E00               	movlw	0
   480   0013D4  6E2A               	movwf	(___lmul@multiplicand+1)^0,c
   481   0013D6  0E00               	movlw	0
   482   0013D8  6E2B               	movwf	(___lmul@multiplicand+2)^0,c
   483   0013DA  0E00               	movlw	0
   484   0013DC  6E2C               	movwf	(___lmul@multiplicand+3)^0,c
   485   0013DE  EC75  F00C         	call	___lmul	;wreg free
   486   0013E2  C025  F001         	movff	?___lmul,_adKalkulace
   487   0013E6  C026  F002         	movff	?___lmul+1,_adKalkulace+1
   488   0013EA  C027  F003         	movff	?___lmul+2,_adKalkulace+2
   489   0013EE  C028  F004         	movff	?___lmul+3,_adKalkulace+3
   490   0013F2                     
   491                           ;source/main.c: 124:         adKalkulace = adKalkulace / (950);
   492   0013F2  C001  F025         	movff	_adKalkulace,___aldiv@dividend
   493   0013F6  C002  F026         	movff	_adKalkulace+1,___aldiv@dividend+1
   494   0013FA  C003  F027         	movff	_adKalkulace+2,___aldiv@dividend+2
   495   0013FE  C004  F028         	movff	_adKalkulace+3,___aldiv@dividend+3
   496   001402  0EB6               	movlw	182
   497   001404  6E29               	movwf	___aldiv@divisor^0,c
   498   001406  0E03               	movlw	3
   499   001408  6E2A               	movwf	(___aldiv@divisor+1)^0,c
   500   00140A  0E00               	movlw	0
   501   00140C  6E2B               	movwf	(___aldiv@divisor+2)^0,c
   502   00140E  0E00               	movlw	0
   503   001410  6E2C               	movwf	(___aldiv@divisor+3)^0,c
   504   001412  ECB8  F00A         	call	___aldiv	;wreg free
   505   001416  C025  F001         	movff	?___aldiv,_adKalkulace
   506   00141A  C026  F002         	movff	?___aldiv+1,_adKalkulace+1
   507   00141E  C027  F003         	movff	?___aldiv+2,_adKalkulace+2
   508   001422  C028  F004         	movff	?___aldiv+3,_adKalkulace+3
   509   001426                     
   510                           ;source/main.c: 126:         vystup = (unsigned char)adKalkulace;
   511   001426  C001  F00F         	movff	_adKalkulace,_vystup
   512   00142A                     
   513                           ;source/main.c: 127:         ADRhotovo = 0;
   514   00142A  0E00               	movlw	0
   515   00142C  6E11               	movwf	_ADRhotovo^0,c
   516   00142E                     l86:
   517                           
   518                           ;source/main.c: 130:       if(is1ms == 1){
   519   00142E  0413               	decf	_is1ms^0,w,c
   520   001430  A4D8               	btfss	status,2,c
   521   001432  EF1D  F00A         	goto	u1091
   522   001436  EF1F  F00A         	goto	u1090
   523   00143A                     u1091:
   524   00143A  EF55  F00A         	goto	l1610
   525   00143E                     u1090:
   526   00143E                     
   527                           ;source/main.c: 133:    filterFce(&S4, PORTJbits.RJ7);
   528   00143E  0E20               	movlw	low _S4
   529   001440  6E25               	movwf	filterFce@tlacitko^0,c
   530   001442  0E00               	movlw	0
   531   001444  BE88               	btfsc	136,7,c	;volatile
   532   001446  0E01               	movlw	1
   533   001448  6E26               	movwf	filterFce@vstup^0,c
   534   00144A  EC3E  F00B         	call	_filterFce	;wreg free
   535                           
   536                           ;source/main.c: 134:    filterFce(&S3, PORTJbits.RJ6);
   537   00144E  0E1E               	movlw	low _S3
   538   001450  6E25               	movwf	filterFce@tlacitko^0,c
   539   001452  0E00               	movlw	0
   540   001454  BC88               	btfsc	136,6,c	;volatile
   541   001456  0E01               	movlw	1
   542   001458  6E26               	movwf	filterFce@vstup^0,c
   543   00145A  EC3E  F00B         	call	_filterFce	;wreg free
   544                           
   545                           ;source/main.c: 135:   pametFce(&S4Filtr, S4.vystup);
   546   00145E  0E18               	movlw	low _S4Filtr
   547   001460  6E25               	movwf	pametFce@tlacitko^0,c
   548   001462  C021  F026         	movff	_S4+1,pametFce@input
   549   001466  ECB9  F00B         	call	_pametFce	;wreg free
   550                           
   551                           ;source/main.c: 136:   pametFce(&S3Filtr, S3.vystup);
   552   00146A  0E16               	movlw	low _S3Filtr
   553   00146C  6E25               	movwf	pametFce@tlacitko^0,c
   554   00146E  C01F  F026         	movff	_S3+1,pametFce@input
   555   001472  ECB9  F00B         	call	_pametFce	;wreg free
   556                           
   557                           ;source/main.c: 137:   filterFce(&S5A, PORTJbits.RJ0);
   558   001476  0E1C               	movlw	low _S5A
   559   001478  6E25               	movwf	filterFce@tlacitko^0,c
   560   00147A  0E00               	movlw	0
   561   00147C  B088               	btfsc	136,0,c	;volatile
   562   00147E  0E01               	movlw	1
   563   001480  6E26               	movwf	filterFce@vstup^0,c
   564   001482  EC3E  F00B         	call	_filterFce	;wreg free
   565                           
   566                           ;source/main.c: 138:   filterFce(&S5B, PORTJbits.RJ1);
   567   001486  0E1A               	movlw	low _S5B
   568   001488  6E25               	movwf	filterFce@tlacitko^0,c
   569   00148A  0E00               	movlw	0
   570   00148C  B288               	btfsc	136,1,c	;volatile
   571   00148E  0E01               	movlw	1
   572   001490  6E26               	movwf	filterFce@vstup^0,c
   573   001492  EC3E  F00B         	call	_filterFce	;wreg free
   574                           
   575                           ;source/main.c: 139:   dekoderFce(&dekoderAB, S5A.vystup, S5B.vystup);
   576   001496  0E14               	movlw	low _dekoderAB
   577   001498  6E25               	movwf	dekoderFce@tlacitko^0,c
   578   00149A  C01D  F026         	movff	_S5A+1,dekoderFce@A
   579   00149E  C01B  F027         	movff	_S5B+1,dekoderFce@B
   580   0014A2  EC01  F008         	call	_dekoderFce	;wreg free
   581   0014A6                     
   582                           ;source/main.c: 142:    is1ms = 0;
   583   0014A6  0E00               	movlw	0
   584   0014A8  6E13               	movwf	_is1ms^0,c
   585   0014AA                     l1610:
   586                           
   587                           ;source/main.c: 146:   LATDbits.LATD7 = S4Filtr.vystup;
   588   0014AA  B019               	btfsc	(_S4Filtr+1)^0,0,c
   589   0014AC  D002               	bra	u1105
   590   0014AE  9E8C               	bcf	140,7,c	;volatile
   591   0014B0  D001               	bra	u1106
   592   0014B2                     u1105:
   593   0014B2  8E8C               	bsf	140,7,c	;volatile
   594   0014B4                     u1106:
   595   0014B4                     
   596                           ;source/main.c: 147:    PORTDbits.RD4 = S3Filtr.vystup;
   597   0014B4  B017               	btfsc	(_S3Filtr+1)^0,0,c
   598   0014B6  D002               	bra	u1115
   599   0014B8  9883               	bcf	131,4,c	;volatile
   600   0014BA  D001               	bra	u1116
   601   0014BC                     u1115:
   602   0014BC  8883               	bsf	131,4,c	;volatile
   603   0014BE                     u1116:
   604   0014BE                     
   605                           ;source/main.c: 148:   PORTDbits.RD6 = S5A.vystup;
   606   0014BE  B01D               	btfsc	(_S5A+1)^0,0,c
   607   0014C0  D002               	bra	u1125
   608   0014C2  9C83               	bcf	131,6,c	;volatile
   609   0014C4  D001               	bra	u1126
   610   0014C6                     u1125:
   611   0014C6  8C83               	bsf	131,6,c	;volatile
   612   0014C8                     u1126:
   613   0014C8                     
   614                           ;source/main.c: 149:   PORTDbits.RD5 = S5B.vystup;
   615   0014C8  B01B               	btfsc	(_S5B+1)^0,0,c
   616   0014CA  D002               	bra	u1135
   617   0014CC  9A83               	bcf	131,5,c	;volatile
   618   0014CE  D001               	bra	u1136
   619   0014D0                     u1135:
   620   0014D0  8A83               	bsf	131,5,c	;volatile
   621   0014D2                     u1136:
   622   0014D2                     
   623                           ;source/main.c: 152:  if(dekoderAB.vystup == 255){
   624   0014D2  2815               	incf	(_dekoderAB+1)^0,w,c
   625   0014D4  A4D8               	btfss	status,2,c
   626   0014D6  EF6F  F00A         	goto	u1141
   627   0014DA  EF71  F00A         	goto	u1140
   628   0014DE                     u1141:
   629   0014DE  EF74  F00A         	goto	l1622
   630   0014E2                     u1140:
   631   0014E2                     
   632                           ;source/main.c: 153:      PORTFbits.RF1 = 1;
   633   0014E2  8285               	bsf	133,1,c	;volatile
   634                           
   635                           ;source/main.c: 154:  }
   636   0014E4  EF81  F00A         	goto	l1626
   637   0014E8                     l1622:
   638   0014E8  5015               	movf	(_dekoderAB+1)^0,w,c
   639   0014EA  A4D8               	btfss	status,2,c
   640   0014EC  EF7A  F00A         	goto	u1151
   641   0014F0  EF7C  F00A         	goto	u1150
   642   0014F4                     u1151:
   643   0014F4  EF7F  F00A         	goto	l92
   644   0014F8                     u1150:
   645   0014F8                     
   646                           ;source/main.c: 156:      PORTFbits.RF2 = 1;
   647   0014F8  8485               	bsf	133,2,c	;volatile
   648                           
   649                           ;source/main.c: 157:  }
   650   0014FA  EF81  F00A         	goto	l1626
   651   0014FE                     l92:
   652                           
   653                           ;source/main.c: 159:      PORTFbits.RF1 = 0;
   654   0014FE  9285               	bcf	133,1,c	;volatile
   655                           
   656                           ;source/main.c: 160:      PORTFbits.RF2 = 0;
   657   001500  9485               	bcf	133,2,c	;volatile
   658   001502                     l1626:
   659                           
   660                           ;source/main.c: 164:      if(S4Filtr.vystup == 1){
   661   001502  0419               	decf	(_S4Filtr+1)^0,w,c
   662   001504  A4D8               	btfss	status,2,c
   663   001506  EF87  F00A         	goto	u1161
   664   00150A  EF89  F00A         	goto	u1160
   665   00150E                     u1161:
   666   00150E  EF8D  F00A         	goto	l94
   667   001512                     u1160:
   668   001512                     
   669                           ;source/main.c: 165:          PORTH = vystup;
   670   001512  C00F  FF87         	movff	_vystup,3975	;volatile
   671                           
   672                           ;source/main.c: 166:      }
   673   001516  EF8F  F00A         	goto	l1630
   674   00151A                     l94:
   675                           
   676                           ;source/main.c: 169:          PORTH = dekoderAB.vystup;
   677   00151A  C015  FF87         	movff	_dekoderAB+1,3975	;volatile
   678   00151E                     l1630:
   679                           
   680                           ;source/main.c: 172:    if(S3Filtr.vystup == 0){
   681   00151E  5017               	movf	(_S3Filtr+1)^0,w,c
   682   001520  A4D8               	btfss	status,2,c
   683   001522  EF95  F00A         	goto	u1171
   684   001526  EF97  F00A         	goto	u1170
   685   00152A                     u1171:
   686   00152A  EFAE  F00A         	goto	l1638
   687   00152E                     u1170:
   688   00152E                     
   689                           ;source/main.c: 173:         pulzBack = (unsigned int)LATH*10;
   690   00152E  5090               	movf	144,w,c	;volatile
   691   001530  0D0A               	mullw	10
   692   001532  CFF3 F005          	movff	prodl,_pulzBack
   693   001536  CFF4 F006          	movff	prodh,_pulzBack+1
   694   00153A                     
   695                           ;source/main.c: 175:         if(pulzBack > 2500){
   696   00153A  0EC5               	movlw	197
   697   00153C  5C05               	subwf	_pulzBack^0,w,c
   698   00153E  0E09               	movlw	9
   699   001540  5806               	subwfb	(_pulzBack+1)^0,w,c
   700   001542  A0D8               	btfss	status,0,c
   701   001544  EFA6  F00A         	goto	u1181
   702   001548  EFA8  F00A         	goto	u1180
   703   00154C                     u1181:
   704   00154C  EFB2  F00A         	goto	l98
   705   001550                     u1180:
   706   001550                     
   707                           ;source/main.c: 176:             pulzBack = 2500;
   708   001550  0E09               	movlw	9
   709   001552  6E06               	movwf	(_pulzBack+1)^0,c
   710   001554  0EC4               	movlw	196
   711   001556  6E05               	movwf	_pulzBack^0,c
   712   001558  EFB2  F00A         	goto	l98
   713   00155C                     l1638:
   714                           
   715                           ;source/main.c: 179:         pulzBack = 0;
   716   00155C  0E00               	movlw	0
   717   00155E  6E06               	movwf	(_pulzBack+1)^0,c
   718   001560  0E00               	movlw	0
   719   001562  6E05               	movwf	_pulzBack^0,c
   720   001564                     l98:
   721                           
   722                           ;source/main.c: 182:    novyPulz = 1;
   723   001564  0E01               	movlw	1
   724   001566  6E10               	movwf	_novyPulz^0,c
   725   001568  EF94  F009         	goto	l1584
   726   00156C  EF4B  F000         	goto	start
   727   001570                     __end_of_main:
   728                           	callstack 0
   729                           
   730 ;; *************** function _preambleInitialization *****************
   731 ;; Defined at:
   732 ;;		line 19 in file "source/preambleInitialization.c"
   733 ;; Parameters:    Size  Location     Type
   734 ;;		None
   735 ;; Auto vars:     Size  Location     Type
   736 ;;		None
   737 ;; Return value:  Size  Location     Type
   738 ;;                  1    wreg      void 
   739 ;; Registers used:
   740 ;;		wreg, status,2
   741 ;; Tracked objects:
   742 ;;		On entry : 0/0
   743 ;;		On exit  : 0/0
   744 ;;		Unchanged: 0/0
   745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   750 ;;Total ram usage:        0 bytes
   751 ;; Hardware stack levels used: 1
   752 ;; Hardware stack levels required when called: 2
   753 ;; This function calls:
   754 ;;		Nothing
   755 ;; This function is called by:
   756 ;;		_main
   757 ;; This function uses a non-reentrant model
   758 ;;
   759                           
   760                           	psect	text1
   761   001954                     __ptext1:
   762                           	callstack 0
   763   001954                     _preambleInitialization:
   764                           	callstack 28
   765   001954                     
   766                           ;source/preambleInitialization.c: 21:     T0CON = 0b10001000;
   767   001954  0E88               	movlw	136
   768   001956  6ED5               	movwf	213,c	;volatile
   769   001958                     
   770                           ;source/preambleInitialization.c: 22:     T0CONbits.PSA = 1;
   771   001958  86D5               	bsf	213,3,c	;volatile
   772   00195A                     
   773                           ;source/preambleInitialization.c: 23:     T0CONbits.TMR0ON = 1;
   774   00195A  8ED5               	bsf	213,7,c	;volatile
   775                           
   776                           ;source/preambleInitialization.c: 25:     TMR0H = 0xB1;
   777   00195C  0EB1               	movlw	177
   778   00195E  6ED7               	movwf	215,c	;volatile
   779                           
   780                           ;source/preambleInitialization.c: 26:     TMR0L = 0xDF;
   781   001960  0EDF               	movlw	223
   782   001962  6ED6               	movwf	214,c	;volatile
   783   001964                     
   784                           ;source/preambleInitialization.c: 28:     INTCON2bits.TMR0IP = 0;
   785   001964  94F1               	bcf	241,2,c	;volatile
   786   001966                     
   787                           ;source/preambleInitialization.c: 29:     INTCONbits.TMR0IE = 1;
   788   001966  8AF2               	bsf	242,5,c	;volatile
   789   001968                     
   790                           ;source/preambleInitialization.c: 31:     INTCONbits.GIEH = 1;
   791   001968  8EF2               	bsf	242,7,c	;volatile
   792   00196A                     
   793                           ;source/preambleInitialization.c: 32:     INTCONbits.GIEL = 1;
   794   00196A  8CF2               	bsf	242,6,c	;volatile
   795   00196C                     
   796                           ;source/preambleInitialization.c: 34:     TRISJ = 0xFF;
   797   00196C  689A               	setf	154,c	;volatile
   798                           
   799                           ;source/preambleInitialization.c: 35:     TRISD = 0x00;
   800   00196E  0E00               	movlw	0
   801   001970  6E95               	movwf	149,c	;volatile
   802                           
   803                           ;source/preambleInitialization.c: 36:     TRISH = 0x00;
   804   001972  0E00               	movlw	0
   805   001974  6E99               	movwf	153,c	;volatile
   806                           
   807                           ;source/preambleInitialization.c: 37:     TRISF = 0x00;
   808   001976  0E00               	movlw	0
   809   001978  6E97               	movwf	151,c	;volatile
   810   00197A                     
   811                           ;source/preambleInitialization.c: 40:     TRISFbits.RF3 = 1;
   812   00197A  8697               	bsf	151,3,c	;volatile
   813   00197C                     
   814                           ;source/preambleInitialization.c: 41:     WDTCONbits.ADSHR = 1;
   815   00197C  88C0               	bsf	192,4,c	;volatile
   816   00197E                     
   817                           ;source/preambleInitialization.c: 42:     ANCON1bits.PCFG8 = 0;
   818   00197E  90C2               	bcf	194,0,c	;volatile
   819   001980                     
   820                           ;source/preambleInitialization.c: 43:     WDTCONbits.ADSHR = 0;
   821   001980  98C0               	bcf	192,4,c	;volatile
   822                           
   823                           ;source/preambleInitialization.c: 45:     ADCON1 = 0b10101010;
   824   001982  0EAA               	movlw	170
   825   001984  6EC1               	movwf	193,c	;volatile
   826                           
   827                           ;source/preambleInitialization.c: 46:     ADCON0 = 0b00100001;
   828   001986  0E21               	movlw	33
   829   001988  6EC2               	movwf	194,c	;volatile
   830   00198A                     
   831                           ;source/preambleInitialization.c: 48:     PIE1bits.ADIE = 1;
   832   00198A  8C9D               	bsf	157,6,c	;volatile
   833   00198C                     
   834                           ;source/preambleInitialization.c: 49:     IPR1bits.ADIP = 0;
   835   00198C  9C9F               	bcf	159,6,c	;volatile
   836   00198E                     
   837                           ;source/preambleInitialization.c: 54:    TRISCbits.RC2 = 0;
   838   00198E  9494               	bcf	148,2,c	;volatile
   839                           
   840                           ;source/preambleInitialization.c: 57:     CCP1CON = 0b00001000;
   841   001990  0E08               	movlw	8
   842   001992  6EBB               	movwf	187,c	;volatile
   843                           
   844                           ;source/preambleInitialization.c: 59:     CCPR1H = (50000 >> 8);
   845   001994  0EC3               	movlw	195
   846   001996  6EBD               	movwf	189,c	;volatile
   847                           
   848                           ;source/preambleInitialization.c: 60:     CCPR1L = (50000 & 0x00FF);
   849   001998  0E50               	movlw	80
   850   00199A  6EBC               	movwf	188,c	;volatile
   851   00199C                     
   852                           ;source/preambleInitialization.c: 61:     PIE1bits.CCP1IE = 1;
   853   00199C  849D               	bsf	157,2,c	;volatile
   854   00199E                     
   855                           ;source/preambleInitialization.c: 62:     IPR1bits.CCP1IP = 1;
   856   00199E  849F               	bsf	159,2,c	;volatile
   857                           
   858                           ;source/preambleInitialization.c: 65:     T1CON = 0b10100001;
   859   0019A0  0EA1               	movlw	161
   860   0019A2  6ECD               	movwf	205,c	;volatile
   861                           
   862                           ;source/preambleInitialization.c: 77:     OSCCONbits.SCS = 0;
   863   0019A4  0EFC               	movlw	-4
   864   0019A6  16D3               	andwf	211,f,c	;volatile
   865   0019A8                     
   866                           ;source/preambleInitialization.c: 79:     OSCTUNEbits.PLLEN = 1;
   867   0019A8  8C9B               	bsf	155,6,c	;volatile
   868   0019AA                     
   869                           ;source/preambleInitialization.c: 84:     RCONbits.IPEN = 1;
   870   0019AA  8ED0               	bsf	208,7,c	;volatile
   871   0019AC  0012               	return		;funcret
   872   0019AE                     __end_of_preambleInitialization:
   873                           	callstack 0
   874                           
   875 ;; *************** function _pametFce *****************
   876 ;; Defined at:
   877 ;;		line 22 in file "header/pamet.c"
   878 ;; Parameters:    Size  Location     Type
   879 ;;  tlacitko        1    3[COMRAM] PTR struct .
   880 ;;		 -> S3Filtr(2), S4Filtr(2), 
   881 ;;  input           1    4[COMRAM] unsigned char 
   882 ;; Auto vars:     Size  Location     Type
   883 ;;  dalsiStav       1    7[COMRAM] unsigned char 
   884 ;; Return value:  Size  Location     Type
   885 ;;                  1    wreg      void 
   886 ;; Registers used:
   887 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   888 ;; Tracked objects:
   889 ;;		On entry : 0/0
   890 ;;		On exit  : 0/0
   891 ;;		Unchanged: 0/0
   892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   893 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   894 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   895 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   896 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   897 ;;Total ram usage:        5 bytes
   898 ;; Hardware stack levels used: 1
   899 ;; Hardware stack levels required when called: 2
   900 ;; This function calls:
   901 ;;		Nothing
   902 ;; This function is called by:
   903 ;;		_main
   904 ;; This function uses a non-reentrant model
   905 ;;
   906                           
   907                           	psect	text2
   908   001772                     __ptext2:
   909                           	callstack 0
   910   001772                     _pametFce:
   911                           	callstack 28
   912   001772                     
   913                           ;header/pamet.c: 23:     char dalsiStav = s0;
   914   001772  0E00               	movlw	0
   915   001774  6E29               	movwf	pametFce@dalsiStav^0,c
   916                           
   917                           ;header/pamet.c: 26:     switch(tlacitko->stav){
   918   001776  EF02  F00C         	goto	l1428
   919   00177A                     l1398:
   920                           
   921                           ;header/pamet.c: 29:             if(input == 0){
   922   00177A  5026               	movf	pametFce@input^0,w,c
   923   00177C  A4D8               	btfss	status,2,c
   924   00177E  EFC3  F00B         	goto	u701
   925   001782  EFC5  F00B         	goto	u700
   926   001786                     u701:
   927   001786  EFC9  F00B         	goto	l1402
   928   00178A                     u700:
   929   00178A                     
   930                           ;header/pamet.c: 30:                 dalsiStav = s1;
   931   00178A  0E01               	movlw	1
   932   00178C  6E29               	movwf	pametFce@dalsiStav^0,c
   933                           
   934                           ;header/pamet.c: 31:             }else{
   935   00178E  EF22  F00C         	goto	l1430
   936   001792                     l1402:
   937                           
   938                           ;header/pamet.c: 32:                 dalsiStav = s0;
   939   001792  0E00               	movlw	0
   940   001794  6E29               	movwf	pametFce@dalsiStav^0,c
   941   001796  EF22  F00C         	goto	l1430
   942   00179A                     l1404:
   943                           
   944                           ;header/pamet.c: 38:             if(input == 0){
   945   00179A  5026               	movf	pametFce@input^0,w,c
   946   00179C  A4D8               	btfss	status,2,c
   947   00179E  EFD3  F00B         	goto	u711
   948   0017A2  EFD5  F00B         	goto	u710
   949   0017A6                     u711:
   950   0017A6  EFDF  F00B         	goto	l1410
   951   0017AA                     u710:
   952   0017AA                     
   953                           ;header/pamet.c: 39:                 dalsiStav = s1;
   954   0017AA  0E01               	movlw	1
   955   0017AC  6E29               	movwf	pametFce@dalsiStav^0,c
   956   0017AE                     
   957                           ;header/pamet.c: 40:                tlacitko->vystup = 0;
   958   0017AE  5025               	movf	pametFce@tlacitko^0,w,c
   959   0017B0  6ED9               	movwf	fsr2l,c
   960   0017B2  6ADA               	clrf	fsr2h,c
   961   0017B4  0E01               	movlw	1
   962   0017B6  26D9               	addwf	fsr2l,f,c
   963   0017B8  6ADF               	clrf	indf2,c
   964                           
   965                           ;header/pamet.c: 41:             }else{
   966   0017BA  EF22  F00C         	goto	l1430
   967   0017BE                     l1410:
   968                           
   969                           ;header/pamet.c: 42:                 dalsiStav = s2;
   970   0017BE  0E02               	movlw	2
   971   0017C0  6E29               	movwf	pametFce@dalsiStav^0,c
   972   0017C2  EF22  F00C         	goto	l1430
   973   0017C6                     l1412:
   974                           
   975                           ;header/pamet.c: 48:             if(input == 0){
   976   0017C6  5026               	movf	pametFce@input^0,w,c
   977   0017C8  A4D8               	btfss	status,2,c
   978   0017CA  EFE9  F00B         	goto	u721
   979   0017CE  EFEB  F00B         	goto	u720
   980   0017D2                     u721:
   981   0017D2  EFDF  F00B         	goto	l1410
   982   0017D6                     u720:
   983   0017D6                     
   984                           ;header/pamet.c: 49:                 dalsiStav = s3;
   985   0017D6  0E03               	movlw	3
   986   0017D8  6E29               	movwf	pametFce@dalsiStav^0,c
   987                           
   988                           ;header/pamet.c: 50:             }else{
   989   0017DA  EF22  F00C         	goto	l1430
   990   0017DE                     l1418:
   991                           
   992                           ;header/pamet.c: 57:             if(input == 0){
   993   0017DE  5026               	movf	pametFce@input^0,w,c
   994   0017E0  A4D8               	btfss	status,2,c
   995   0017E2  EFF5  F00B         	goto	u731
   996   0017E6  EFF7  F00B         	goto	u730
   997   0017EA                     u731:
   998   0017EA  EFC9  F00B         	goto	l1402
   999   0017EE                     u730:
  1000   0017EE                     
  1001                           ;header/pamet.c: 58:                 dalsiStav = s3;
  1002   0017EE  0E03               	movlw	3
  1003   0017F0  6E29               	movwf	pametFce@dalsiStav^0,c
  1004   0017F2                     
  1005                           ;header/pamet.c: 59:                 tlacitko->vystup = 1;
  1006   0017F2  5025               	movf	pametFce@tlacitko^0,w,c
  1007   0017F4  6ED9               	movwf	fsr2l,c
  1008   0017F6  6ADA               	clrf	fsr2h,c
  1009   0017F8  0E01               	movlw	1
  1010   0017FA  26D9               	addwf	fsr2l,f,c
  1011   0017FC  0E01               	movlw	1
  1012   0017FE  6EDF               	movwf	indf2,c
  1013                           
  1014                           ;header/pamet.c: 60:             }else{
  1015   001800  EF22  F00C         	goto	l1430
  1016   001804                     l1428:
  1017   001804  5025               	movf	pametFce@tlacitko^0,w,c
  1018   001806  6ED9               	movwf	fsr2l,c
  1019   001808  6ADA               	clrf	fsr2h,c
  1020   00180A  50DF               	movf	indf2,w,c
  1021   00180C  6E27               	movwf	??_pametFce^0,c
  1022   00180E  6A28               	clrf	(??_pametFce+1)^0,c
  1023                           
  1024                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1025                           ; Switch size 1, requested type "simple"
  1026                           ; Number of cases is 1, Range of values is 0 to 0
  1027                           ; switch strategies available:
  1028                           ; Name         Instructions Cycles
  1029                           ; simple_byte            4     3 (average)
  1030                           ;	Chosen strategy is simple_byte
  1031   001810  5028               	movf	(??_pametFce+1)^0,w,c
  1032   001812  0A00               	xorlw	0	; case 0
  1033   001814  B4D8               	btfsc	status,2,c
  1034   001816  EF0F  F00C         	goto	l1674
  1035   00181A  EF22  F00C         	goto	l1430
  1036   00181E                     l1674:
  1037                           
  1038                           ; Switch size 1, requested type "simple"
  1039                           ; Number of cases is 4, Range of values is 0 to 3
  1040                           ; switch strategies available:
  1041                           ; Name         Instructions Cycles
  1042                           ; simple_byte           13     7 (average)
  1043                           ;	Chosen strategy is simple_byte
  1044   00181E  5027               	movf	??_pametFce^0,w,c
  1045   001820  0A00               	xorlw	0	; case 0
  1046   001822  B4D8               	btfsc	status,2,c
  1047   001824  EFBD  F00B         	goto	l1398
  1048   001828  0A01               	xorlw	1	; case 1
  1049   00182A  B4D8               	btfsc	status,2,c
  1050   00182C  EFCD  F00B         	goto	l1404
  1051   001830  0A03               	xorlw	3	; case 2
  1052   001832  B4D8               	btfsc	status,2,c
  1053   001834  EFE3  F00B         	goto	l1412
  1054   001838  0A01               	xorlw	1	; case 3
  1055   00183A  B4D8               	btfsc	status,2,c
  1056   00183C  EFEF  F00B         	goto	l1418
  1057   001840  EF22  F00C         	goto	l1430
  1058   001844                     l1430:
  1059                           
  1060                           ;header/pamet.c: 68:       tlacitko->stav = dalsiStav;
  1061   001844  5025               	movf	pametFce@tlacitko^0,w,c
  1062   001846  6ED9               	movwf	fsr2l,c
  1063   001848  6ADA               	clrf	fsr2h,c
  1064   00184A  C029  FFDF         	movff	pametFce@dalsiStav,indf2
  1065   00184E  0012               	return		;funcret
  1066   001850                     __end_of_pametFce:
  1067                           	callstack 0
  1068                           
  1069 ;; *************** function _filterFce *****************
  1070 ;; Defined at:
  1071 ;;		line 15 in file "source/filter.c"
  1072 ;; Parameters:    Size  Location     Type
  1073 ;;  tlacitko        1    3[COMRAM] PTR struct .
  1074 ;;		 -> S5B(2), S5A(2), S3(2), S4(2), 
  1075 ;;  vstup           1    4[COMRAM] unsigned char 
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;  dalsiStav       1    7[COMRAM] unsigned char 
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  1    wreg      void 
  1080 ;; Registers used:
  1081 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1087 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1088 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1089 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1090 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1091 ;;Total ram usage:        5 bytes
  1092 ;; Hardware stack levels used: 1
  1093 ;; Hardware stack levels required when called: 2
  1094 ;; This function calls:
  1095 ;;		Nothing
  1096 ;; This function is called by:
  1097 ;;		_main
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101                           	psect	text3
  1102   00167C                     __ptext3:
  1103                           	callstack 0
  1104   00167C                     _filterFce:
  1105                           	callstack 28
  1106   00167C                     
  1107                           ;source/filter.c: 15: void filterFce(typeFilter*tlacitko, char vstup);source/filter.c: 1
      +                          6: {;source/filter.c: 19: char dalsiStav = s0;
  1108   00167C  0E00               	movlw	0
  1109   00167E  6E29               	movwf	filterFce@dalsiStav^0,c
  1110                           
  1111                           ;source/filter.c: 22:   switch(tlacitko->stav){
  1112   001680  EF8F  F00B         	goto	l1388
  1113   001684                     l1352:
  1114                           
  1115                           ;source/filter.c: 25:           if(vstup == 1){
  1116   001684  0426               	decf	filterFce@vstup^0,w,c
  1117   001686  A4D8               	btfss	status,2,c
  1118   001688  EF48  F00B         	goto	u651
  1119   00168C  EF4A  F00B         	goto	u650
  1120   001690                     u651:
  1121   001690  EF4E  F00B         	goto	l1356
  1122   001694                     u650:
  1123   001694                     l1354:
  1124                           
  1125                           ;source/filter.c: 26:               dalsiStav = s1;
  1126   001694  0E01               	movlw	1
  1127   001696  6E29               	movwf	filterFce@dalsiStav^0,c
  1128                           
  1129                           ;source/filter.c: 27:           }else{
  1130   001698  EFB3  F00B         	goto	l1390
  1131   00169C                     l1356:
  1132                           
  1133                           ;source/filter.c: 28:               dalsiStav = s3;
  1134   00169C  0E03               	movlw	3
  1135   00169E  6E29               	movwf	filterFce@dalsiStav^0,c
  1136   0016A0  EFB3  F00B         	goto	l1390
  1137   0016A4                     l1358:
  1138                           
  1139                           ;source/filter.c: 34:           if(vstup == 1){
  1140   0016A4  0426               	decf	filterFce@vstup^0,w,c
  1141   0016A6  A4D8               	btfss	status,2,c
  1142   0016A8  EF58  F00B         	goto	u661
  1143   0016AC  EF5A  F00B         	goto	u660
  1144   0016B0                     u661:
  1145   0016B0  EF4E  F00B         	goto	l1356
  1146   0016B4                     u660:
  1147   0016B4                     
  1148                           ;source/filter.c: 35:               dalsiStav = s2;
  1149   0016B4  0E02               	movlw	2
  1150   0016B6  6E29               	movwf	filterFce@dalsiStav^0,c
  1151                           
  1152                           ;source/filter.c: 36:           }else{
  1153   0016B8  EFB3  F00B         	goto	l1390
  1154   0016BC                     l1364:
  1155                           
  1156                           ;source/filter.c: 43:           if(vstup == 1){
  1157   0016BC  0426               	decf	filterFce@vstup^0,w,c
  1158   0016BE  A4D8               	btfss	status,2,c
  1159   0016C0  EF64  F00B         	goto	u671
  1160   0016C4  EF66  F00B         	goto	u670
  1161   0016C8                     u671:
  1162   0016C8  EF4E  F00B         	goto	l1356
  1163   0016CC                     u670:
  1164   0016CC                     
  1165                           ;source/filter.c: 44:               dalsiStav = s2;
  1166   0016CC  0E02               	movlw	2
  1167   0016CE  6E29               	movwf	filterFce@dalsiStav^0,c
  1168   0016D0                     
  1169                           ;source/filter.c: 45:               tlacitko->vystup = 1;
  1170   0016D0  5025               	movf	filterFce@tlacitko^0,w,c
  1171   0016D2  6ED9               	movwf	fsr2l,c
  1172   0016D4  6ADA               	clrf	fsr2h,c
  1173   0016D6  0E01               	movlw	1
  1174   0016D8  26D9               	addwf	fsr2l,f,c
  1175   0016DA  0E01               	movlw	1
  1176   0016DC  6EDF               	movwf	indf2,c
  1177                           
  1178                           ;source/filter.c: 46:           }else{
  1179   0016DE  EFB3  F00B         	goto	l1390
  1180   0016E2                     l1372:
  1181                           
  1182                           ;source/filter.c: 53:           if(vstup == 0){
  1183   0016E2  5026               	movf	filterFce@vstup^0,w,c
  1184   0016E4  A4D8               	btfss	status,2,c
  1185   0016E6  EF77  F00B         	goto	u681
  1186   0016EA  EF79  F00B         	goto	u680
  1187   0016EE                     u681:
  1188   0016EE  EF4A  F00B         	goto	l1354
  1189   0016F2                     u680:
  1190   0016F2                     
  1191                           ;source/filter.c: 54:               dalsiStav = s4;
  1192   0016F2  0E04               	movlw	4
  1193   0016F4  6E29               	movwf	filterFce@dalsiStav^0,c
  1194                           
  1195                           ;source/filter.c: 55:           }else{
  1196   0016F6  EFB3  F00B         	goto	l1390
  1197   0016FA                     l1378:
  1198                           
  1199                           ;source/filter.c: 63:           if(vstup == 0){
  1200   0016FA  5026               	movf	filterFce@vstup^0,w,c
  1201   0016FC  A4D8               	btfss	status,2,c
  1202   0016FE  EF83  F00B         	goto	u691
  1203   001702  EF85  F00B         	goto	u690
  1204   001706                     u691:
  1205   001706  EF4A  F00B         	goto	l1354
  1206   00170A                     u690:
  1207   00170A                     
  1208                           ;source/filter.c: 64:               dalsiStav = s4;
  1209   00170A  0E04               	movlw	4
  1210   00170C  6E29               	movwf	filterFce@dalsiStav^0,c
  1211   00170E                     
  1212                           ;source/filter.c: 65:               tlacitko->vystup = 0;
  1213   00170E  5025               	movf	filterFce@tlacitko^0,w,c
  1214   001710  6ED9               	movwf	fsr2l,c
  1215   001712  6ADA               	clrf	fsr2h,c
  1216   001714  0E01               	movlw	1
  1217   001716  26D9               	addwf	fsr2l,f,c
  1218   001718  6ADF               	clrf	indf2,c
  1219                           
  1220                           ;source/filter.c: 66:           }else{
  1221   00171A  EFB3  F00B         	goto	l1390
  1222   00171E                     l1388:
  1223   00171E  5025               	movf	filterFce@tlacitko^0,w,c
  1224   001720  6ED9               	movwf	fsr2l,c
  1225   001722  6ADA               	clrf	fsr2h,c
  1226   001724  50DF               	movf	indf2,w,c
  1227   001726  6E27               	movwf	??_filterFce^0,c
  1228   001728  6A28               	clrf	(??_filterFce+1)^0,c
  1229                           
  1230                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1231                           ; Switch size 1, requested type "simple"
  1232                           ; Number of cases is 1, Range of values is 0 to 0
  1233                           ; switch strategies available:
  1234                           ; Name         Instructions Cycles
  1235                           ; simple_byte            4     3 (average)
  1236                           ;	Chosen strategy is simple_byte
  1237   00172A  5028               	movf	(??_filterFce+1)^0,w,c
  1238   00172C  0A00               	xorlw	0	; case 0
  1239   00172E  B4D8               	btfsc	status,2,c
  1240   001730  EF9C  F00B         	goto	l1676
  1241   001734  EFB3  F00B         	goto	l1390
  1242   001738                     l1676:
  1243                           
  1244                           ; Switch size 1, requested type "simple"
  1245                           ; Number of cases is 5, Range of values is 0 to 4
  1246                           ; switch strategies available:
  1247                           ; Name         Instructions Cycles
  1248                           ; simple_byte           16     9 (average)
  1249                           ;	Chosen strategy is simple_byte
  1250   001738  5027               	movf	??_filterFce^0,w,c
  1251   00173A  0A00               	xorlw	0	; case 0
  1252   00173C  B4D8               	btfsc	status,2,c
  1253   00173E  EF42  F00B         	goto	l1352
  1254   001742  0A01               	xorlw	1	; case 1
  1255   001744  B4D8               	btfsc	status,2,c
  1256   001746  EF52  F00B         	goto	l1358
  1257   00174A  0A03               	xorlw	3	; case 2
  1258   00174C  B4D8               	btfsc	status,2,c
  1259   00174E  EF5E  F00B         	goto	l1364
  1260   001752  0A01               	xorlw	1	; case 3
  1261   001754  B4D8               	btfsc	status,2,c
  1262   001756  EF71  F00B         	goto	l1372
  1263   00175A  0A07               	xorlw	7	; case 4
  1264   00175C  B4D8               	btfsc	status,2,c
  1265   00175E  EF7D  F00B         	goto	l1378
  1266   001762  EFB3  F00B         	goto	l1390
  1267   001766                     l1390:
  1268                           
  1269                           ;source/filter.c: 74:   tlacitko->stav = dalsiStav;
  1270   001766  5025               	movf	filterFce@tlacitko^0,w,c
  1271   001768  6ED9               	movwf	fsr2l,c
  1272   00176A  6ADA               	clrf	fsr2h,c
  1273   00176C  C029  FFDF         	movff	filterFce@dalsiStav,indf2
  1274   001770  0012               	return		;funcret
  1275   001772                     __end_of_filterFce:
  1276                           	callstack 0
  1277                           
  1278 ;; *************** function _dekoderFce *****************
  1279 ;; Defined at:
  1280 ;;		line 15 in file "header/dekoder.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;  tlacitko        1    3[COMRAM] PTR struct .
  1283 ;;		 -> dekoderAB(2), 
  1284 ;;  A               1    4[COMRAM] unsigned char 
  1285 ;;  B               1    5[COMRAM] unsigned char 
  1286 ;; Auto vars:     Size  Location     Type
  1287 ;;		None
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  1    wreg      void 
  1290 ;; Registers used:
  1291 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1297 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1299 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1300 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1301 ;;Total ram usage:        5 bytes
  1302 ;; Hardware stack levels used: 1
  1303 ;; Hardware stack levels required when called: 2
  1304 ;; This function calls:
  1305 ;;		Nothing
  1306 ;; This function is called by:
  1307 ;;		_main
  1308 ;; This function uses a non-reentrant model
  1309 ;;
  1310                           
  1311                           	psect	text4
  1312   001002                     __ptext4:
  1313                           	callstack 0
  1314   001002                     _dekoderFce:
  1315                           	callstack 28
  1316   001002                     
  1317                           ;header/dekoder.c: 19:     switch(tlacitko->stav){
  1318   001002  EF53  F009         	goto	l1520
  1319   001006                     l1438:
  1320                           
  1321                           ;header/dekoder.c: 21:             if((A == 1) && (B == 0)){
  1322   001006  0426               	decf	dekoderFce@A^0,w,c
  1323   001008  A4D8               	btfss	status,2,c
  1324   00100A  EF09  F008         	goto	u741
  1325   00100E  EF0B  F008         	goto	u740
  1326   001012                     u741:
  1327   001012  EF2D  F008         	goto	l1448
  1328   001016                     u740:
  1329   001016  5027               	movf	dekoderFce@B^0,w,c
  1330   001018  A4D8               	btfss	status,2,c
  1331   00101A  EF11  F008         	goto	u751
  1332   00101E  EF13  F008         	goto	u750
  1333   001022                     u751:
  1334   001022  EF2D  F008         	goto	l1448
  1335   001026                     u750:
  1336   001026                     
  1337                           ;header/dekoder.c: 22:                 tlacitko->stav = s1;
  1338   001026  5025               	movf	dekoderFce@tlacitko^0,w,c
  1339   001028  6ED9               	movwf	fsr2l,c
  1340   00102A  6ADA               	clrf	fsr2h,c
  1341   00102C  0E01               	movlw	1
  1342   00102E  6EDF               	movwf	indf2,c
  1343   001030                     
  1344                           ;header/dekoder.c: 23:                 if(tlacitko->vystup < 255){
  1345   001030  5025               	movf	dekoderFce@tlacitko^0,w,c
  1346   001032  6ED9               	movwf	fsr2l,c
  1347   001034  6ADA               	clrf	fsr2h,c
  1348   001036  0E01               	movlw	1
  1349   001038  26D9               	addwf	fsr2l,f,c
  1350   00103A  28DE               	incf	postinc2,w,c
  1351   00103C  B4D8               	btfsc	status,2,c
  1352   00103E  EF23  F008         	goto	u761
  1353   001042  EF25  F008         	goto	u760
  1354   001046                     u761:
  1355   001046  EF73  F009         	goto	l246
  1356   00104A                     u760:
  1357   00104A                     
  1358                           ;header/dekoder.c: 24:                 tlacitko->vystup++;
  1359   00104A  5025               	movf	dekoderFce@tlacitko^0,w,c
  1360   00104C  6ED9               	movwf	fsr2l,c
  1361   00104E  6ADA               	clrf	fsr2h,c
  1362   001050  0E01               	movlw	1
  1363   001052  26D9               	addwf	fsr2l,f,c
  1364   001054  2ADF               	incf	indf2,f,c
  1365   001056  EF73  F009         	goto	l246
  1366   00105A                     l1448:
  1367   00105A  5026               	movf	dekoderFce@A^0,w,c
  1368   00105C  A4D8               	btfss	status,2,c
  1369   00105E  EF33  F008         	goto	u771
  1370   001062  EF35  F008         	goto	u770
  1371   001066                     u771:
  1372   001066  EF73  F009         	goto	l246
  1373   00106A                     u770:
  1374   00106A  0427               	decf	dekoderFce@B^0,w,c
  1375   00106C  A4D8               	btfss	status,2,c
  1376   00106E  EF3B  F008         	goto	u781
  1377   001072  EF3D  F008         	goto	u780
  1378   001076                     u781:
  1379   001076  EF73  F009         	goto	l246
  1380   00107A                     u780:
  1381   00107A                     
  1382                           ;header/dekoder.c: 27:                 tlacitko->stav = s3;
  1383   00107A  5025               	movf	dekoderFce@tlacitko^0,w,c
  1384   00107C  6ED9               	movwf	fsr2l,c
  1385   00107E  6ADA               	clrf	fsr2h,c
  1386   001080  0E03               	movlw	3
  1387   001082  6EDF               	movwf	indf2,c
  1388   001084                     
  1389                           ;header/dekoder.c: 28:                 if(tlacitko->vystup > 0){
  1390   001084  5025               	movf	dekoderFce@tlacitko^0,w,c
  1391   001086  6ED9               	movwf	fsr2l,c
  1392   001088  6ADA               	clrf	fsr2h,c
  1393   00108A  0E01               	movlw	1
  1394   00108C  26D9               	addwf	fsr2l,f,c
  1395   00108E  50DF               	movf	indf2,w,c
  1396   001090  B4D8               	btfsc	status,2,c
  1397   001092  EF4D  F008         	goto	u791
  1398   001096  EF4F  F008         	goto	u790
  1399   00109A                     u791:
  1400   00109A  EF57  F008         	goto	l224
  1401   00109E                     u790:
  1402   00109E                     
  1403                           ;header/dekoder.c: 29:                 tlacitko->vystup--;
  1404   00109E  5025               	movf	dekoderFce@tlacitko^0,w,c
  1405   0010A0  6ED9               	movwf	fsr2l,c
  1406   0010A2  6ADA               	clrf	fsr2h,c
  1407   0010A4  0E01               	movlw	1
  1408   0010A6  26D9               	addwf	fsr2l,f,c
  1409   0010A8  06DF               	decf	indf2,f,c
  1410   0010AA  EF73  F009         	goto	l246
  1411   0010AE                     l224:
  1412                           
  1413                           ;header/dekoder.c: 32:             break;
  1414   0010AE  EF73  F009         	goto	l246
  1415   0010B2                     l1458:
  1416                           
  1417                           ;header/dekoder.c: 35:             if((A == 1) && (B == 1)){
  1418   0010B2  0426               	decf	dekoderFce@A^0,w,c
  1419   0010B4  A4D8               	btfss	status,2,c
  1420   0010B6  EF5F  F008         	goto	u801
  1421   0010BA  EF61  F008         	goto	u800
  1422   0010BE                     u801:
  1423   0010BE  EF83  F008         	goto	l1468
  1424   0010C2                     u800:
  1425   0010C2  0427               	decf	dekoderFce@B^0,w,c
  1426   0010C4  A4D8               	btfss	status,2,c
  1427   0010C6  EF67  F008         	goto	u811
  1428   0010CA  EF69  F008         	goto	u810
  1429   0010CE                     u811:
  1430   0010CE  EF83  F008         	goto	l1468
  1431   0010D2                     u810:
  1432   0010D2                     
  1433                           ;header/dekoder.c: 36:                 tlacitko->stav = s2;
  1434   0010D2  5025               	movf	dekoderFce@tlacitko^0,w,c
  1435   0010D4  6ED9               	movwf	fsr2l,c
  1436   0010D6  6ADA               	clrf	fsr2h,c
  1437   0010D8  0E02               	movlw	2
  1438   0010DA  6EDF               	movwf	indf2,c
  1439   0010DC                     
  1440                           ;header/dekoder.c: 37:                 if(tlacitko->vystup < 255){
  1441   0010DC  5025               	movf	dekoderFce@tlacitko^0,w,c
  1442   0010DE  6ED9               	movwf	fsr2l,c
  1443   0010E0  6ADA               	clrf	fsr2h,c
  1444   0010E2  0E01               	movlw	1
  1445   0010E4  26D9               	addwf	fsr2l,f,c
  1446   0010E6  28DE               	incf	postinc2,w,c
  1447   0010E8  B4D8               	btfsc	status,2,c
  1448   0010EA  EF79  F008         	goto	u821
  1449   0010EE  EF7B  F008         	goto	u820
  1450   0010F2                     u821:
  1451   0010F2  EF73  F009         	goto	l246
  1452   0010F6                     u820:
  1453   0010F6                     
  1454                           ;header/dekoder.c: 38:                tlacitko->vystup++;
  1455   0010F6  5025               	movf	dekoderFce@tlacitko^0,w,c
  1456   0010F8  6ED9               	movwf	fsr2l,c
  1457   0010FA  6ADA               	clrf	fsr2h,c
  1458   0010FC  0E01               	movlw	1
  1459   0010FE  26D9               	addwf	fsr2l,f,c
  1460   001100  2ADF               	incf	indf2,f,c
  1461   001102  EF73  F009         	goto	l246
  1462   001106                     l1468:
  1463   001106  5026               	movf	dekoderFce@A^0,w,c
  1464   001108  A4D8               	btfss	status,2,c
  1465   00110A  EF89  F008         	goto	u831
  1466   00110E  EF8B  F008         	goto	u830
  1467   001112                     u831:
  1468   001112  EF73  F009         	goto	l246
  1469   001116                     u830:
  1470   001116  5027               	movf	dekoderFce@B^0,w,c
  1471   001118  A4D8               	btfss	status,2,c
  1472   00111A  EF91  F008         	goto	u841
  1473   00111E  EF93  F008         	goto	u840
  1474   001122                     u841:
  1475   001122  EF73  F009         	goto	l246
  1476   001126                     u840:
  1477   001126                     
  1478                           ;header/dekoder.c: 41:                 tlacitko->stav = s0;
  1479   001126  5025               	movf	dekoderFce@tlacitko^0,w,c
  1480   001128  6ED9               	movwf	fsr2l,c
  1481   00112A  6ADA               	clrf	fsr2h,c
  1482   00112C  6ADF               	clrf	indf2,c
  1483   00112E                     
  1484                           ;header/dekoder.c: 42:                 if(tlacitko->vystup > 0){
  1485   00112E  5025               	movf	dekoderFce@tlacitko^0,w,c
  1486   001130  6ED9               	movwf	fsr2l,c
  1487   001132  6ADA               	clrf	fsr2h,c
  1488   001134  0E01               	movlw	1
  1489   001136  26D9               	addwf	fsr2l,f,c
  1490   001138  50DF               	movf	indf2,w,c
  1491   00113A  B4D8               	btfsc	status,2,c
  1492   00113C  EFA2  F008         	goto	u851
  1493   001140  EFA4  F008         	goto	u850
  1494   001144                     u851:
  1495   001144  EF73  F009         	goto	l246
  1496   001148                     u850:
  1497   001148                     
  1498                           ;header/dekoder.c: 43:                 tlacitko->vystup--;
  1499   001148  5025               	movf	dekoderFce@tlacitko^0,w,c
  1500   00114A  6ED9               	movwf	fsr2l,c
  1501   00114C  6ADA               	clrf	fsr2h,c
  1502   00114E  0E01               	movlw	1
  1503   001150  26D9               	addwf	fsr2l,f,c
  1504   001152  06DF               	decf	indf2,f,c
  1505   001154  EF73  F009         	goto	l246
  1506   001158                     l1478:
  1507                           
  1508                           ;header/dekoder.c: 49:             if((A == 0) && (B == 1)){
  1509   001158  5026               	movf	dekoderFce@A^0,w,c
  1510   00115A  A4D8               	btfss	status,2,c
  1511   00115C  EFB2  F008         	goto	u861
  1512   001160  EFB4  F008         	goto	u860
  1513   001164                     u861:
  1514   001164  EFD6  F008         	goto	l1488
  1515   001168                     u860:
  1516   001168  0427               	decf	dekoderFce@B^0,w,c
  1517   00116A  A4D8               	btfss	status,2,c
  1518   00116C  EFBA  F008         	goto	u871
  1519   001170  EFBC  F008         	goto	u870
  1520   001174                     u871:
  1521   001174  EFD6  F008         	goto	l1488
  1522   001178                     u870:
  1523   001178                     
  1524                           ;header/dekoder.c: 50:                 tlacitko->stav = s3;
  1525   001178  5025               	movf	dekoderFce@tlacitko^0,w,c
  1526   00117A  6ED9               	movwf	fsr2l,c
  1527   00117C  6ADA               	clrf	fsr2h,c
  1528   00117E  0E03               	movlw	3
  1529   001180  6EDF               	movwf	indf2,c
  1530   001182                     
  1531                           ;header/dekoder.c: 51:                 if(tlacitko->vystup < 255){
  1532   001182  5025               	movf	dekoderFce@tlacitko^0,w,c
  1533   001184  6ED9               	movwf	fsr2l,c
  1534   001186  6ADA               	clrf	fsr2h,c
  1535   001188  0E01               	movlw	1
  1536   00118A  26D9               	addwf	fsr2l,f,c
  1537   00118C  28DE               	incf	postinc2,w,c
  1538   00118E  B4D8               	btfsc	status,2,c
  1539   001190  EFCC  F008         	goto	u881
  1540   001194  EFCE  F008         	goto	u880
  1541   001198                     u881:
  1542   001198  EF73  F009         	goto	l246
  1543   00119C                     u880:
  1544   00119C                     
  1545                           ;header/dekoder.c: 52:                 tlacitko->vystup++;
  1546   00119C  5025               	movf	dekoderFce@tlacitko^0,w,c
  1547   00119E  6ED9               	movwf	fsr2l,c
  1548   0011A0  6ADA               	clrf	fsr2h,c
  1549   0011A2  0E01               	movlw	1
  1550   0011A4  26D9               	addwf	fsr2l,f,c
  1551   0011A6  2ADF               	incf	indf2,f,c
  1552   0011A8  EF73  F009         	goto	l246
  1553   0011AC                     l1488:
  1554   0011AC  0426               	decf	dekoderFce@A^0,w,c
  1555   0011AE  A4D8               	btfss	status,2,c
  1556   0011B0  EFDC  F008         	goto	u891
  1557   0011B4  EFDE  F008         	goto	u890
  1558   0011B8                     u891:
  1559   0011B8  EF73  F009         	goto	l246
  1560   0011BC                     u890:
  1561   0011BC  5027               	movf	dekoderFce@B^0,w,c
  1562   0011BE  A4D8               	btfss	status,2,c
  1563   0011C0  EFE4  F008         	goto	u901
  1564   0011C4  EFE6  F008         	goto	u900
  1565   0011C8                     u901:
  1566   0011C8  EF73  F009         	goto	l246
  1567   0011CC                     u900:
  1568   0011CC                     
  1569                           ;header/dekoder.c: 55:                 tlacitko->stav = s1;
  1570   0011CC  5025               	movf	dekoderFce@tlacitko^0,w,c
  1571   0011CE  6ED9               	movwf	fsr2l,c
  1572   0011D0  6ADA               	clrf	fsr2h,c
  1573   0011D2  0E01               	movlw	1
  1574   0011D4  6EDF               	movwf	indf2,c
  1575   0011D6                     
  1576                           ;header/dekoder.c: 56:                 if(tlacitko->vystup > 0){
  1577   0011D6  5025               	movf	dekoderFce@tlacitko^0,w,c
  1578   0011D8  6ED9               	movwf	fsr2l,c
  1579   0011DA  6ADA               	clrf	fsr2h,c
  1580   0011DC  0E01               	movlw	1
  1581   0011DE  26D9               	addwf	fsr2l,f,c
  1582   0011E0  50DF               	movf	indf2,w,c
  1583   0011E2  B4D8               	btfsc	status,2,c
  1584   0011E4  EFF6  F008         	goto	u911
  1585   0011E8  EFF8  F008         	goto	u910
  1586   0011EC                     u911:
  1587   0011EC  EF73  F009         	goto	l246
  1588   0011F0                     u910:
  1589   0011F0                     
  1590                           ;header/dekoder.c: 57:                 tlacitko->vystup--;
  1591   0011F0  5025               	movf	dekoderFce@tlacitko^0,w,c
  1592   0011F2  6ED9               	movwf	fsr2l,c
  1593   0011F4  6ADA               	clrf	fsr2h,c
  1594   0011F6  0E01               	movlw	1
  1595   0011F8  26D9               	addwf	fsr2l,f,c
  1596   0011FA  06DF               	decf	indf2,f,c
  1597   0011FC  EF73  F009         	goto	l246
  1598   001200                     l1498:
  1599                           
  1600                           ;header/dekoder.c: 63:             if((A == 0) && (B == 0)){
  1601   001200  5026               	movf	dekoderFce@A^0,w,c
  1602   001202  A4D8               	btfss	status,2,c
  1603   001204  EF06  F009         	goto	u921
  1604   001208  EF08  F009         	goto	u920
  1605   00120C                     u921:
  1606   00120C  EF29  F009         	goto	l1508
  1607   001210                     u920:
  1608   001210  5027               	movf	dekoderFce@B^0,w,c
  1609   001212  A4D8               	btfss	status,2,c
  1610   001214  EF0E  F009         	goto	u931
  1611   001218  EF10  F009         	goto	u930
  1612   00121C                     u931:
  1613   00121C  EF29  F009         	goto	l1508
  1614   001220                     u930:
  1615   001220                     
  1616                           ;header/dekoder.c: 64:                 tlacitko->stav = s0;
  1617   001220  5025               	movf	dekoderFce@tlacitko^0,w,c
  1618   001222  6ED9               	movwf	fsr2l,c
  1619   001224  6ADA               	clrf	fsr2h,c
  1620   001226  6ADF               	clrf	indf2,c
  1621   001228                     
  1622                           ;header/dekoder.c: 65:                 if(tlacitko->vystup < 255){
  1623   001228  5025               	movf	dekoderFce@tlacitko^0,w,c
  1624   00122A  6ED9               	movwf	fsr2l,c
  1625   00122C  6ADA               	clrf	fsr2h,c
  1626   00122E  0E01               	movlw	1
  1627   001230  26D9               	addwf	fsr2l,f,c
  1628   001232  28DE               	incf	postinc2,w,c
  1629   001234  B4D8               	btfsc	status,2,c
  1630   001236  EF1F  F009         	goto	u941
  1631   00123A  EF21  F009         	goto	u940
  1632   00123E                     u941:
  1633   00123E  EF73  F009         	goto	l246
  1634   001242                     u940:
  1635   001242                     
  1636                           ;header/dekoder.c: 66:                 tlacitko->vystup++;
  1637   001242  5025               	movf	dekoderFce@tlacitko^0,w,c
  1638   001244  6ED9               	movwf	fsr2l,c
  1639   001246  6ADA               	clrf	fsr2h,c
  1640   001248  0E01               	movlw	1
  1641   00124A  26D9               	addwf	fsr2l,f,c
  1642   00124C  2ADF               	incf	indf2,f,c
  1643   00124E  EF73  F009         	goto	l246
  1644   001252                     l1508:
  1645   001252  0426               	decf	dekoderFce@A^0,w,c
  1646   001254  A4D8               	btfss	status,2,c
  1647   001256  EF2F  F009         	goto	u951
  1648   00125A  EF31  F009         	goto	u950
  1649   00125E                     u951:
  1650   00125E  EF73  F009         	goto	l246
  1651   001262                     u950:
  1652   001262  0427               	decf	dekoderFce@B^0,w,c
  1653   001264  A4D8               	btfss	status,2,c
  1654   001266  EF37  F009         	goto	u961
  1655   00126A  EF39  F009         	goto	u960
  1656   00126E                     u961:
  1657   00126E  EF73  F009         	goto	l246
  1658   001272                     u960:
  1659   001272                     
  1660                           ;header/dekoder.c: 69:                 tlacitko->stav = s2;
  1661   001272  5025               	movf	dekoderFce@tlacitko^0,w,c
  1662   001274  6ED9               	movwf	fsr2l,c
  1663   001276  6ADA               	clrf	fsr2h,c
  1664   001278  0E02               	movlw	2
  1665   00127A  6EDF               	movwf	indf2,c
  1666   00127C                     
  1667                           ;header/dekoder.c: 70:             if(tlacitko->vystup > 0){
  1668   00127C  5025               	movf	dekoderFce@tlacitko^0,w,c
  1669   00127E  6ED9               	movwf	fsr2l,c
  1670   001280  6ADA               	clrf	fsr2h,c
  1671   001282  0E01               	movlw	1
  1672   001284  26D9               	addwf	fsr2l,f,c
  1673   001286  50DF               	movf	indf2,w,c
  1674   001288  B4D8               	btfsc	status,2,c
  1675   00128A  EF49  F009         	goto	u971
  1676   00128E  EF4B  F009         	goto	u970
  1677   001292                     u971:
  1678   001292  EF73  F009         	goto	l246
  1679   001296                     u970:
  1680   001296                     
  1681                           ;header/dekoder.c: 71:                 tlacitko->vystup--;
  1682   001296  5025               	movf	dekoderFce@tlacitko^0,w,c
  1683   001298  6ED9               	movwf	fsr2l,c
  1684   00129A  6ADA               	clrf	fsr2h,c
  1685   00129C  0E01               	movlw	1
  1686   00129E  26D9               	addwf	fsr2l,f,c
  1687   0012A0  06DF               	decf	indf2,f,c
  1688   0012A2  EF73  F009         	goto	l246
  1689   0012A6                     l1520:
  1690   0012A6  5025               	movf	dekoderFce@tlacitko^0,w,c
  1691   0012A8  6ED9               	movwf	fsr2l,c
  1692   0012AA  6ADA               	clrf	fsr2h,c
  1693   0012AC  50DF               	movf	indf2,w,c
  1694   0012AE  6E28               	movwf	??_dekoderFce^0,c
  1695   0012B0  6A29               	clrf	(??_dekoderFce+1)^0,c
  1696                           
  1697                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1698                           ; Switch size 1, requested type "simple"
  1699                           ; Number of cases is 1, Range of values is 0 to 0
  1700                           ; switch strategies available:
  1701                           ; Name         Instructions Cycles
  1702                           ; simple_byte            4     3 (average)
  1703                           ;	Chosen strategy is simple_byte
  1704   0012B2  5029               	movf	(??_dekoderFce+1)^0,w,c
  1705   0012B4  0A00               	xorlw	0	; case 0
  1706   0012B6  B4D8               	btfsc	status,2,c
  1707   0012B8  EF60  F009         	goto	l1678
  1708   0012BC  EF73  F009         	goto	l246
  1709   0012C0                     l1678:
  1710                           
  1711                           ; Switch size 1, requested type "simple"
  1712                           ; Number of cases is 4, Range of values is 0 to 3
  1713                           ; switch strategies available:
  1714                           ; Name         Instructions Cycles
  1715                           ; simple_byte           13     7 (average)
  1716                           ;	Chosen strategy is simple_byte
  1717   0012C0  5028               	movf	??_dekoderFce^0,w,c
  1718   0012C2  0A00               	xorlw	0	; case 0
  1719   0012C4  B4D8               	btfsc	status,2,c
  1720   0012C6  EF03  F008         	goto	l1438
  1721   0012CA  0A01               	xorlw	1	; case 1
  1722   0012CC  B4D8               	btfsc	status,2,c
  1723   0012CE  EF59  F008         	goto	l1458
  1724   0012D2  0A03               	xorlw	3	; case 2
  1725   0012D4  B4D8               	btfsc	status,2,c
  1726   0012D6  EFAC  F008         	goto	l1478
  1727   0012DA  0A01               	xorlw	1	; case 3
  1728   0012DC  B4D8               	btfsc	status,2,c
  1729   0012DE  EF00  F009         	goto	l1498
  1730   0012E2  EF73  F009         	goto	l246
  1731   0012E6                     l246:
  1732   0012E6  0012               	return		;funcret
  1733   0012E8                     __end_of_dekoderFce:
  1734                           	callstack 0
  1735                           
  1736 ;; *************** function ___lmul *****************
  1737 ;; Defined at:
  1738 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;  multiplier      4    3[COMRAM] unsigned long 
  1741 ;;  multiplicand    4    7[COMRAM] unsigned long 
  1742 ;; Auto vars:     Size  Location     Type
  1743 ;;  product         4   11[COMRAM] unsigned long 
  1744 ;; Return value:  Size  Location     Type
  1745 ;;                  4    3[COMRAM] unsigned long 
  1746 ;; Registers used:
  1747 ;;		wreg, status,2, status,0
  1748 ;; Tracked objects:
  1749 ;;		On entry : 0/0
  1750 ;;		On exit  : 0/0
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1753 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1754 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1756 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1757 ;;Total ram usage:       12 bytes
  1758 ;; Hardware stack levels used: 1
  1759 ;; Hardware stack levels required when called: 2
  1760 ;; This function calls:
  1761 ;;		Nothing
  1762 ;; This function is called by:
  1763 ;;		_main
  1764 ;;		_ADprevodnikFce
  1765 ;; This function uses a non-reentrant model
  1766 ;;
  1767                           
  1768                           	psect	text5
  1769   0018EA                     __ptext5:
  1770                           	callstack 0
  1771   0018EA                     ___lmul:
  1772                           	callstack 28
  1773   0018EA  0E00               	movlw	0
  1774   0018EC  6E2D               	movwf	___lmul@product^0,c
  1775   0018EE  0E00               	movlw	0
  1776   0018F0  6E2E               	movwf	(___lmul@product+1)^0,c
  1777   0018F2  0E00               	movlw	0
  1778   0018F4  6E2F               	movwf	(___lmul@product+2)^0,c
  1779   0018F6  0E00               	movlw	0
  1780   0018F8  6E30               	movwf	(___lmul@product+3)^0,c
  1781   0018FA                     l1528:
  1782   0018FA  A025               	btfss	___lmul@multiplier^0,0,c
  1783   0018FC  EF82  F00C         	goto	u981
  1784   001900  EF84  F00C         	goto	u980
  1785   001904                     u981:
  1786   001904  EF8C  F00C         	goto	l1532
  1787   001908                     u980:
  1788   001908  5029               	movf	___lmul@multiplicand^0,w,c
  1789   00190A  262D               	addwf	___lmul@product^0,f,c
  1790   00190C  502A               	movf	(___lmul@multiplicand+1)^0,w,c
  1791   00190E  222E               	addwfc	(___lmul@product+1)^0,f,c
  1792   001910  502B               	movf	(___lmul@multiplicand+2)^0,w,c
  1793   001912  222F               	addwfc	(___lmul@product+2)^0,f,c
  1794   001914  502C               	movf	(___lmul@multiplicand+3)^0,w,c
  1795   001916  2230               	addwfc	(___lmul@product+3)^0,f,c
  1796   001918                     l1532:
  1797   001918  90D8               	bcf	status,0,c
  1798   00191A  3629               	rlcf	___lmul@multiplicand^0,f,c
  1799   00191C  362A               	rlcf	(___lmul@multiplicand+1)^0,f,c
  1800   00191E  362B               	rlcf	(___lmul@multiplicand+2)^0,f,c
  1801   001920  362C               	rlcf	(___lmul@multiplicand+3)^0,f,c
  1802   001922  90D8               	bcf	status,0,c
  1803   001924  3228               	rrcf	(___lmul@multiplier+3)^0,f,c
  1804   001926  3227               	rrcf	(___lmul@multiplier+2)^0,f,c
  1805   001928  3226               	rrcf	(___lmul@multiplier+1)^0,f,c
  1806   00192A  3225               	rrcf	___lmul@multiplier^0,f,c
  1807   00192C  5025               	movf	___lmul@multiplier^0,w,c
  1808   00192E  1026               	iorwf	(___lmul@multiplier+1)^0,w,c
  1809   001930  1027               	iorwf	(___lmul@multiplier+2)^0,w,c
  1810   001932  1028               	iorwf	(___lmul@multiplier+3)^0,w,c
  1811   001934  A4D8               	btfss	status,2,c
  1812   001936  EF9F  F00C         	goto	u991
  1813   00193A  EFA1  F00C         	goto	u990
  1814   00193E                     u991:
  1815   00193E  EF7D  F00C         	goto	l1528
  1816   001942                     u990:
  1817   001942  C02D  F025         	movff	___lmul@product,?___lmul
  1818   001946  C02E  F026         	movff	___lmul@product+1,?___lmul+1
  1819   00194A  C02F  F027         	movff	___lmul@product+2,?___lmul+2
  1820   00194E  C030  F028         	movff	___lmul@product+3,?___lmul+3
  1821   001952  0012               	return		;funcret
  1822   001954                     __end_of___lmul:
  1823                           	callstack 0
  1824                           
  1825 ;; *************** function ___aldiv *****************
  1826 ;; Defined at:
  1827 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\aldiv.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;  dividend        4    3[COMRAM] long 
  1830 ;;  divisor         4    7[COMRAM] long 
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;  quotient        4   13[COMRAM] long 
  1833 ;;  sign            1   12[COMRAM] unsigned char 
  1834 ;;  counter         1   11[COMRAM] unsigned char 
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  4    3[COMRAM] long 
  1837 ;; Registers used:
  1838 ;;		wreg, status,2, status,0
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1844 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1845 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1847 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1848 ;;Total ram usage:       14 bytes
  1849 ;; Hardware stack levels used: 1
  1850 ;; Hardware stack levels required when called: 2
  1851 ;; This function calls:
  1852 ;;		Nothing
  1853 ;; This function is called by:
  1854 ;;		_main
  1855 ;;		_ADprevodnikFce
  1856 ;; This function uses a non-reentrant model
  1857 ;;
  1858                           
  1859                           	psect	text6
  1860   001570                     __ptext6:
  1861                           	callstack 0
  1862   001570                     ___aldiv:
  1863                           	callstack 28
  1864   001570  0E00               	movlw	0
  1865   001572  6E2E               	movwf	___aldiv@sign^0,c
  1866   001574  BE2C               	btfsc	(___aldiv@divisor+3)^0,7,c
  1867   001576  EFC1  F00A         	goto	u1000
  1868   00157A  EFBF  F00A         	goto	u1001
  1869   00157E                     u1001:
  1870   00157E  EFCB  F00A         	goto	l1544
  1871   001582                     u1000:
  1872   001582  1E2C               	comf	(___aldiv@divisor+3)^0,f,c
  1873   001584  1E2B               	comf	(___aldiv@divisor+2)^0,f,c
  1874   001586  1E2A               	comf	(___aldiv@divisor+1)^0,f,c
  1875   001588  6C29               	negf	___aldiv@divisor^0,c
  1876   00158A  0E00               	movlw	0
  1877   00158C  222A               	addwfc	(___aldiv@divisor+1)^0,f,c
  1878   00158E  222B               	addwfc	(___aldiv@divisor+2)^0,f,c
  1879   001590  222C               	addwfc	(___aldiv@divisor+3)^0,f,c
  1880   001592  0E01               	movlw	1
  1881   001594  6E2E               	movwf	___aldiv@sign^0,c
  1882   001596                     l1544:
  1883   001596  BE28               	btfsc	(___aldiv@dividend+3)^0,7,c
  1884   001598  EFD2  F00A         	goto	u1010
  1885   00159C  EFD0  F00A         	goto	u1011
  1886   0015A0                     u1011:
  1887   0015A0  EFDC  F00A         	goto	l1550
  1888   0015A4                     u1010:
  1889   0015A4  1E28               	comf	(___aldiv@dividend+3)^0,f,c
  1890   0015A6  1E27               	comf	(___aldiv@dividend+2)^0,f,c
  1891   0015A8  1E26               	comf	(___aldiv@dividend+1)^0,f,c
  1892   0015AA  6C25               	negf	___aldiv@dividend^0,c
  1893   0015AC  0E00               	movlw	0
  1894   0015AE  2226               	addwfc	(___aldiv@dividend+1)^0,f,c
  1895   0015B0  2227               	addwfc	(___aldiv@dividend+2)^0,f,c
  1896   0015B2  2228               	addwfc	(___aldiv@dividend+3)^0,f,c
  1897   0015B4  0E01               	movlw	1
  1898   0015B6  1A2E               	xorwf	___aldiv@sign^0,f,c
  1899   0015B8                     l1550:
  1900   0015B8  0E00               	movlw	0
  1901   0015BA  6E2F               	movwf	___aldiv@quotient^0,c
  1902   0015BC  0E00               	movlw	0
  1903   0015BE  6E30               	movwf	(___aldiv@quotient+1)^0,c
  1904   0015C0  0E00               	movlw	0
  1905   0015C2  6E31               	movwf	(___aldiv@quotient+2)^0,c
  1906   0015C4  0E00               	movlw	0
  1907   0015C6  6E32               	movwf	(___aldiv@quotient+3)^0,c
  1908   0015C8  5029               	movf	___aldiv@divisor^0,w,c
  1909   0015CA  102A               	iorwf	(___aldiv@divisor+1)^0,w,c
  1910   0015CC  102B               	iorwf	(___aldiv@divisor+2)^0,w,c
  1911   0015CE  102C               	iorwf	(___aldiv@divisor+3)^0,w,c
  1912   0015D0  B4D8               	btfsc	status,2,c
  1913   0015D2  EFED  F00A         	goto	u1021
  1914   0015D6  EFEF  F00A         	goto	u1020
  1915   0015DA                     u1021:
  1916   0015DA  EF25  F00B         	goto	l1572
  1917   0015DE                     u1020:
  1918   0015DE  0E01               	movlw	1
  1919   0015E0  6E2D               	movwf	___aldiv@counter^0,c
  1920   0015E2  EFF9  F00A         	goto	l1558
  1921   0015E6                     l1556:
  1922   0015E6  90D8               	bcf	status,0,c
  1923   0015E8  3629               	rlcf	___aldiv@divisor^0,f,c
  1924   0015EA  362A               	rlcf	(___aldiv@divisor+1)^0,f,c
  1925   0015EC  362B               	rlcf	(___aldiv@divisor+2)^0,f,c
  1926   0015EE  362C               	rlcf	(___aldiv@divisor+3)^0,f,c
  1927   0015F0  2A2D               	incf	___aldiv@counter^0,f,c
  1928   0015F2                     l1558:
  1929   0015F2  AE2C               	btfss	(___aldiv@divisor+3)^0,7,c
  1930   0015F4  EFFE  F00A         	goto	u1031
  1931   0015F8  EF00  F00B         	goto	u1030
  1932   0015FC                     u1031:
  1933   0015FC  EFF3  F00A         	goto	l1556
  1934   001600                     u1030:
  1935   001600                     l1560:
  1936   001600  90D8               	bcf	status,0,c
  1937   001602  362F               	rlcf	___aldiv@quotient^0,f,c
  1938   001604  3630               	rlcf	(___aldiv@quotient+1)^0,f,c
  1939   001606  3631               	rlcf	(___aldiv@quotient+2)^0,f,c
  1940   001608  3632               	rlcf	(___aldiv@quotient+3)^0,f,c
  1941   00160A  5029               	movf	___aldiv@divisor^0,w,c
  1942   00160C  5C25               	subwf	___aldiv@dividend^0,w,c
  1943   00160E  502A               	movf	(___aldiv@divisor+1)^0,w,c
  1944   001610  5826               	subwfb	(___aldiv@dividend+1)^0,w,c
  1945   001612  502B               	movf	(___aldiv@divisor+2)^0,w,c
  1946   001614  5827               	subwfb	(___aldiv@dividend+2)^0,w,c
  1947   001616  502C               	movf	(___aldiv@divisor+3)^0,w,c
  1948   001618  5828               	subwfb	(___aldiv@dividend+3)^0,w,c
  1949   00161A  A0D8               	btfss	status,0,c
  1950   00161C  EF12  F00B         	goto	u1041
  1951   001620  EF14  F00B         	goto	u1040
  1952   001624                     u1041:
  1953   001624  EF1D  F00B         	goto	l1568
  1954   001628                     u1040:
  1955   001628  5029               	movf	___aldiv@divisor^0,w,c
  1956   00162A  5E25               	subwf	___aldiv@dividend^0,f,c
  1957   00162C  502A               	movf	(___aldiv@divisor+1)^0,w,c
  1958   00162E  5A26               	subwfb	(___aldiv@dividend+1)^0,f,c
  1959   001630  502B               	movf	(___aldiv@divisor+2)^0,w,c
  1960   001632  5A27               	subwfb	(___aldiv@dividend+2)^0,f,c
  1961   001634  502C               	movf	(___aldiv@divisor+3)^0,w,c
  1962   001636  5A28               	subwfb	(___aldiv@dividend+3)^0,f,c
  1963   001638  802F               	bsf	___aldiv@quotient^0,0,c
  1964   00163A                     l1568:
  1965   00163A  90D8               	bcf	status,0,c
  1966   00163C  322C               	rrcf	(___aldiv@divisor+3)^0,f,c
  1967   00163E  322B               	rrcf	(___aldiv@divisor+2)^0,f,c
  1968   001640  322A               	rrcf	(___aldiv@divisor+1)^0,f,c
  1969   001642  3229               	rrcf	___aldiv@divisor^0,f,c
  1970   001644  2E2D               	decfsz	___aldiv@counter^0,f,c
  1971   001646  EF00  F00B         	goto	l1560
  1972   00164A                     l1572:
  1973   00164A  502E               	movf	___aldiv@sign^0,w,c
  1974   00164C  B4D8               	btfsc	status,2,c
  1975   00164E  EF2B  F00B         	goto	u1051
  1976   001652  EF2D  F00B         	goto	u1050
  1977   001656                     u1051:
  1978   001656  EF35  F00B         	goto	l1576
  1979   00165A                     u1050:
  1980   00165A  1E32               	comf	(___aldiv@quotient+3)^0,f,c
  1981   00165C  1E31               	comf	(___aldiv@quotient+2)^0,f,c
  1982   00165E  1E30               	comf	(___aldiv@quotient+1)^0,f,c
  1983   001660  6C2F               	negf	___aldiv@quotient^0,c
  1984   001662  0E00               	movlw	0
  1985   001664  2230               	addwfc	(___aldiv@quotient+1)^0,f,c
  1986   001666  2231               	addwfc	(___aldiv@quotient+2)^0,f,c
  1987   001668  2232               	addwfc	(___aldiv@quotient+3)^0,f,c
  1988   00166A                     l1576:
  1989   00166A  C02F  F025         	movff	___aldiv@quotient,?___aldiv
  1990   00166E  C030  F026         	movff	___aldiv@quotient+1,?___aldiv+1
  1991   001672  C031  F027         	movff	___aldiv@quotient+2,?___aldiv+2
  1992   001676  C032  F028         	movff	___aldiv@quotient+3,?___aldiv+3
  1993   00167A  0012               	return		;funcret
  1994   00167C                     __end_of___aldiv:
  1995                           	callstack 0
  1996                           
  1997 ;; *************** function _low_isr *****************
  1998 ;; Defined at:
  1999 ;;		line 229 in file "source/main.c"
  2000 ;; Parameters:    Size  Location     Type
  2001 ;;		None
  2002 ;; Auto vars:     Size  Location     Type
  2003 ;;		None
  2004 ;; Return value:  Size  Location     Type
  2005 ;;                  1    wreg      void 
  2006 ;; Registers used:
  2007 ;;		wreg, status,2, status,0
  2008 ;; Tracked objects:
  2009 ;;		On entry : 0/0
  2010 ;;		On exit  : 0/0
  2011 ;;		Unchanged: 0/0
  2012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2015 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2016 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2017 ;;Total ram usage:        3 bytes
  2018 ;; Hardware stack levels used: 1
  2019 ;; Hardware stack levels required when called: 1
  2020 ;; This function calls:
  2021 ;;		Nothing
  2022 ;; This function is called by:
  2023 ;;		Interrupt level 1
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027                           	psect	intcodelo
  2028   000018                     __pintcodelo:
  2029                           	callstack 0
  2030   000018                     _low_isr:
  2031                           	callstack 28
  2032                           
  2033                           ;incstack = 0
  2034   000018  8034               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  2035   00001A  CFD8 F022          	movff	status,??_low_isr
  2036   00001E  CFE8 F023          	movff	wreg,??_low_isr+1
  2037   000022  CFE0 F024          	movff	bsr,??_low_isr+2
  2038   000026                     
  2039                           ;source/main.c: 231:     if(INTCONbits.TMR0IF == 1)
  2040   000026  A4F2               	btfss	242,2,c	;volatile
  2041   000028  EF18  F000         	goto	i1u59_21
  2042   00002C  EF1A  F000         	goto	i1u59_20
  2043   000030                     i1u59_21:
  2044   000030  EF2D  F000         	goto	i1l1300
  2045   000034                     i1u59_20:
  2046   000034                     
  2047                           ;source/main.c: 232:     {;source/main.c: 233:         is1ms = 1;
  2048   000034  0E01               	movlw	1
  2049   000036  6E13               	movwf	_is1ms^0,c
  2050                           
  2051                           ;source/main.c: 234:         TMR0H = 0xD8;
  2052   000038  0ED8               	movlw	216
  2053   00003A  6ED7               	movwf	215,c	;volatile
  2054                           
  2055                           ;source/main.c: 235:         TMR0L = 0xEF;
  2056   00003C  0EEF               	movlw	239
  2057   00003E  6ED6               	movwf	214,c	;volatile
  2058   000040                     
  2059                           ;source/main.c: 237:         INTCONbits.TMR0IF = 0;
  2060   000040  94F2               	bcf	242,2,c	;volatile
  2061   000042                     
  2062                           ;source/main.c: 238:         is10ms++;
  2063   000042  2A12               	incf	_is10ms^0,f,c
  2064   000044                     
  2065                           ;source/main.c: 240:     if(is10ms >= 10){
  2066   000044  0E09               	movlw	9
  2067   000046  6412               	cpfsgt	_is10ms^0,c
  2068   000048  EF28  F000         	goto	i1u60_21
  2069   00004C  EF2A  F000         	goto	i1u60_20
  2070   000050                     i1u60_21:
  2071   000050  EF2D  F000         	goto	i1l1300
  2072   000054                     i1u60_20:
  2073   000054                     
  2074                           ;source/main.c: 241:         is10ms = 0;
  2075   000054  0E00               	movlw	0
  2076   000056  6E12               	movwf	_is10ms^0,c
  2077   000058                     
  2078                           ;source/main.c: 242:         ADCON0bits.GO = 1;
  2079   000058  82C2               	bsf	194,1,c	;volatile
  2080   00005A                     i1l1300:
  2081                           
  2082                           ;source/main.c: 246:     if(PIR1bits.ADIF == 1){
  2083   00005A  AC9E               	btfss	158,6,c	;volatile
  2084   00005C  EF32  F000         	goto	i1u61_21
  2085   000060  EF34  F000         	goto	i1u61_20
  2086   000064                     i1u61_21:
  2087   000064  EF43  F000         	goto	i1l121
  2088   000068                     i1u61_20:
  2089   000068                     
  2090                           ;source/main.c: 247:         vysledek = ADRESH;
  2091   000068  CFC4 F00D          	movff	4036,_vysledek	;volatile
  2092   00006C  6A0E               	clrf	(_vysledek+1)^0,c
  2093   00006E                     
  2094                           ;source/main.c: 248:         vysledek = (vysledek << 8);
  2095   00006E  500D               	movf	_vysledek^0,w,c
  2096   000070  6E0E               	movwf	(_vysledek+1)^0,c
  2097   000072  6A0D               	clrf	_vysledek^0,c
  2098   000074                     
  2099                           ;source/main.c: 249:         vysledek = vysledek + ADRESL;
  2100   000074  50C3               	movf	195,w,c	;volatile
  2101   000076  240D               	addwf	_vysledek^0,w,c
  2102   000078  6E0D               	movwf	_vysledek^0,c
  2103   00007A  0E00               	movlw	0
  2104   00007C  200E               	addwfc	(_vysledek+1)^0,w,c
  2105   00007E  6E0E               	movwf	(_vysledek+1)^0,c
  2106   000080                     
  2107                           ;source/main.c: 250:         ADRhotovo = 1;
  2108   000080  0E01               	movlw	1
  2109   000082  6E11               	movwf	_ADRhotovo^0,c
  2110   000084                     
  2111                           ;source/main.c: 251:         PIR1bits.ADIF = 0;
  2112   000084  9C9E               	bcf	158,6,c	;volatile
  2113   000086                     i1l121:
  2114   000086  C024  FFE0         	movff	??_low_isr+2,bsr
  2115   00008A  C023  FFE8         	movff	??_low_isr+1,wreg
  2116   00008E  C022  FFD8         	movff	??_low_isr,status
  2117   000092  9034               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2118   000094  0010               	retfie	
  2119   000096                     __end_of_low_isr:
  2120                           	callstack 0
  2121                           
  2122 ;; *************** function _high_isr *****************
  2123 ;; Defined at:
  2124 ;;		line 190 in file "source/main.c"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;		None
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;		None
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  1    wreg      void 
  2131 ;; Registers used:
  2132 ;;		wreg, status,2, status,0
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2142 ;;Total ram usage:        0 bytes
  2143 ;; Hardware stack levels used: 1
  2144 ;; This function calls:
  2145 ;;		Nothing
  2146 ;; This function is called by:
  2147 ;;		Interrupt level 2
  2148 ;; This function uses a non-reentrant model
  2149 ;;
  2150                           
  2151                           	psect	intcode
  2152   000008                     __pintcode:
  2153                           	callstack 0
  2154   000008                     _high_isr:
  2155                           	callstack 28
  2156                           
  2157                           ;incstack = 0
  2158   000008  8234               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2159   00000A  EF28  F00C         	goto	int_func
  2160                           
  2161                           	psect	intcode_body
  2162   001850                     __pintcode_body:
  2163                           	callstack 28
  2164   001850                     int_func:
  2165                           	callstack 28
  2166   001850                     
  2167                           ;source/main.c: 192:     static _Bool pocHodnota = 1;;source/main.c: 194:     if(PIR1bit
      +                          s.CCP1IF == 1){
  2168   001850  A49E               	btfss	158,2,c	;volatile
  2169   001852  EF2D  F00C         	goto	i2u55_41
  2170   001856  EF2F  F00C         	goto	i2u55_40
  2171   00185A                     i2u55_41:
  2172   00185A  EF73  F00C         	goto	i2l113
  2173   00185E                     i2u55_40:
  2174   00185E                     
  2175                           ;source/main.c: 195:    if(pocHodnota == 1){
  2176   00185E  0433               	decf	high_isr@pocHodnota^0,w,c
  2177   001860  A4D8               	btfss	status,2,c
  2178   001862  EF35  F00C         	goto	i2u56_41
  2179   001866  EF37  F00C         	goto	i2u56_40
  2180   00186A                     i2u56_41:
  2181   00186A  EF3D  F00C         	goto	i2l1264
  2182   00186E                     i2u56_40:
  2183   00186E                     
  2184                           ;source/main.c: 196:        komparace = CCPR1;
  2185   00186E  CFBC F00B          	movff	4028,_komparace	;volatile
  2186   001872  CFBD F00C          	movff	4029,_komparace+1	;volatile
  2187   001876                     
  2188                           ;source/main.c: 197:        pocHodnota = 0;
  2189   001876  0E00               	movlw	0
  2190   001878  6E33               	movwf	high_isr@pocHodnota^0,c
  2191   00187A                     i2l1264:
  2192                           
  2193                           ;source/main.c: 199:       if(PORTCbits.RC2 == 1){
  2194   00187A  A482               	btfss	130,2,c	;volatile
  2195   00187C  EF42  F00C         	goto	i2u57_41
  2196   001880  EF44  F00C         	goto	i2u57_40
  2197   001884                     i2u57_41:
  2198   001884  EF4E  F00C         	goto	i2l1270
  2199   001888                     i2u57_40:
  2200   001888                     
  2201                           ;source/main.c: 203:           CCP1CON = 0b00001001;
  2202   001888  0E09               	movlw	9
  2203   00188A  6EBB               	movwf	187,c	;volatile
  2204   00188C                     
  2205                           ;source/main.c: 204:           komparace = komparace + pulz;
  2206   00188C  5009               	movf	_pulz^0,w,c
  2207   00188E  240B               	addwf	_komparace^0,w,c
  2208   001890  6E0B               	movwf	_komparace^0,c
  2209   001892  500A               	movf	(_pulz+1)^0,w,c
  2210   001894  200C               	addwfc	(_komparace+1)^0,w,c
  2211   001896  6E0C               	movwf	(_komparace+1)^0,c
  2212                           
  2213                           ;source/main.c: 206:           }else{
  2214   001898  EF6E  F00C         	goto	i2l1280
  2215   00189C                     i2l1270:
  2216                           
  2217                           ;source/main.c: 207:               CCP1CON = 0b00001000;
  2218   00189C  0E08               	movlw	8
  2219   00189E  6EBB               	movwf	187,c	;volatile
  2220   0018A0                     
  2221                           ;source/main.c: 208:               mezera = mezera + komparace;
  2222   0018A0  500B               	movf	_komparace^0,w,c
  2223   0018A2  2407               	addwf	_mezera^0,w,c
  2224   0018A4  6E07               	movwf	_mezera^0,c
  2225   0018A6  500C               	movf	(_komparace+1)^0,w,c
  2226   0018A8  2008               	addwfc	(_mezera+1)^0,w,c
  2227   0018AA  6E08               	movwf	(_mezera+1)^0,c
  2228   0018AC                     
  2229                           ;source/main.c: 210:               if(novyPulz == 1){
  2230   0018AC  0410               	decf	_novyPulz^0,w,c
  2231   0018AE  A4D8               	btfss	status,2,c
  2232   0018B0  EF5C  F00C         	goto	i2u58_41
  2233   0018B4  EF5E  F00C         	goto	i2u58_40
  2234   0018B8                     i2u58_41:
  2235   0018B8  EF6E  F00C         	goto	i2l1280
  2236   0018BC                     i2u58_40:
  2237   0018BC                     
  2238                           ;source/main.c: 211:                 pulz = pulzBack + 2500;
  2239   0018BC  0EC4               	movlw	196
  2240   0018BE  2405               	addwf	_pulzBack^0,w,c
  2241   0018C0  6E09               	movwf	_pulz^0,c
  2242   0018C2  0E09               	movlw	9
  2243   0018C4  2006               	addwfc	(_pulzBack+1)^0,w,c
  2244   0018C6  6E0A               	movwf	(_pulz+1)^0,c
  2245                           
  2246                           ;source/main.c: 214:                 mezera = 50000 - pulz;
  2247   0018C8  5009               	movf	_pulz^0,w,c
  2248   0018CA  0850               	sublw	80
  2249   0018CC  6E07               	movwf	_mezera^0,c
  2250   0018CE  500A               	movf	(_pulz+1)^0,w,c
  2251   0018D0  A0D8               	btfss	status,0,c
  2252   0018D2  2AE8               	incf	wreg,f,c
  2253   0018D4  08C3               	sublw	195
  2254   0018D6  6E08               	movwf	(_mezera+1)^0,c
  2255   0018D8                     
  2256                           ;source/main.c: 215:                  novyPulz = 0;
  2257   0018D8  0E00               	movlw	0
  2258   0018DA  6E10               	movwf	_novyPulz^0,c
  2259   0018DC                     i2l1280:
  2260                           
  2261                           ;source/main.c: 221:       CCPR1H = (komparace >> 8);
  2262   0018DC  500C               	movf	(_komparace+1)^0,w,c
  2263   0018DE  6EBD               	movwf	189,c	;volatile
  2264   0018E0                     
  2265                           ;source/main.c: 222:       CCPR1L = (komparace & 0x00FF);
  2266   0018E0  C00B  FFBC         	movff	_komparace,4028	;volatile
  2267   0018E4                     
  2268                           ;source/main.c: 223:       PIR1bits.CCP1IF = 0;
  2269   0018E4  949E               	bcf	158,2,c	;volatile
  2270   0018E6                     i2l113:
  2271   0018E6  9234               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2272   0018E8  0011               	retfie		f
  2273   0018EA                     __end_of_high_isr:
  2274                           	callstack 0
  2275                           
  2276                           	psect	smallconst
  2277   001000                     __psmallconst:
  2278                           	callstack 0
  2279   001000  00                 	db	0
  2280   001001  00                 	db	0	; dummy byte at the end
  2281   000000                     
  2282                           	psect	rparam
  2283   000000                     
  2284                           	psect	temp
  2285   000034                     btemp:
  2286                           	callstack 0
  2287   000034                     	ds	1
  2288   000000                     int$flags	set	btemp
  2289   000000                     wtemp8	set	btemp+1
  2290   000000                     ttemp5	set	btemp+1
  2291   000000                     ttemp6	set	btemp+4
  2292   000000                     ttemp7	set	btemp+8
  2293                           
  2294                           	psect	config
  2295                           
  2296                           ;Config register CONFIG1L @ 0x1FFF8
  2297                           ;	Watchdog Timer Enable bit
  2298                           ;	WDTEN = OFF, WDT disabled (control is placed on SWDTEN bit)
  2299                           ;	Stack Overflow/Underflow Reset Enable bit
  2300                           ;	STVREN = ON, Reset on stack overflow/underflow enabled
  2301                           ;	Extended Instruction Set Enable bit
  2302                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2303                           ;	Background Debugger Enable bit
  2304                           ;	DEBUG = 0x1, unprogrammed default
  2305   01FFF8                     	org	131064
  2306   01FFF8  A0                 	db	160
  2307                           
  2308                           ;Config register CONFIG1H @ 0x1FFF9
  2309                           ;	Code Protection bit
  2310                           ;	CP0 = OFF, Program memory is not code-protected
  2311   01FFF9                     	org	131065
  2312   01FFF9  F4                 	db	244
  2313                           
  2314                           ;Config register CONFIG2L @ 0x1FFFA
  2315                           ;	Oscillator Selection bits
  2316                           ;	FOSC = HSPLL, HS oscillator, PLL enabled
  2317                           ;	Fail-Safe Clock Monitor Enable bit
  2318                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2319                           ;	Two-Speed Start-up (Internal/External Oscillator Switchover) Control bit
  2320                           ;	IESO = OFF, Two-Speed Start-up disabled
  2321   01FFFA                     	org	131066
  2322   01FFFA  05                 	db	5
  2323                           
  2324                           ;Config register CONFIG2H @ 0x1FFFB
  2325                           ;	Watchdog Timer Postscaler Select bits
  2326                           ;	WDTPS = 32768, 1:32768
  2327   01FFFB                     	org	131067
  2328   01FFFB  FF                 	db	255
  2329                           
  2330                           ;Config register CONFIG3L @ 0x1FFFC
  2331                           ;	External Address Bus Shift Enable bit
  2332                           ;	EASHFT = 0x1, unprogrammed default
  2333                           ;	External Memory Bus Configuration bits
  2334                           ;	MODE = MM, Microcontroller mode - External bus disabled
  2335                           ;	Data Bus Width Select bit
  2336                           ;	BW = 0x1, unprogrammed default
  2337                           ;	External Bus Wait Enable bit
  2338                           ;	WAIT = 0x1, unprogrammed default
  2339   01FFFC                     	org	131068
  2340   01FFFC  F8                 	db	248
  2341                           
  2342                           ;Config register CONFIG3H @ 0x1FFFD
  2343                           ;	unspecified, using default values
  2344                           ;	ECCP2 MUX bit
  2345                           ;	CCP2MX = 0x1, unprogrammed default
  2346                           ;	ECCPx MUX bit
  2347                           ;	ECCPMX = 0x1, unprogrammed default
  2348                           ;	PMP Pin Multiplex bit
  2349                           ;	PMPMX = 0x1, unprogrammed default
  2350                           ;	MSSP Address Masking Mode Select bit
  2351                           ;	MSSPMSK = 0x1, unprogrammed default
  2352   01FFFD                     	org	131069
  2353   01FFFD  FF                 	db	255
  2354                           tosu	equ	0xFFF
  2355                           tosh	equ	0xFFE
  2356                           tosl	equ	0xFFD
  2357                           stkptr	equ	0xFFC
  2358                           pclatu	equ	0xFFB
  2359                           pclath	equ	0xFFA
  2360                           pcl	equ	0xFF9
  2361                           tblptru	equ	0xFF8
  2362                           tblptrh	equ	0xFF7
  2363                           tblptrl	equ	0xFF6
  2364                           tablat	equ	0xFF5
  2365                           prodh	equ	0xFF4
  2366                           prodl	equ	0xFF3
  2367                           indf0	equ	0xFEF
  2368                           postinc0	equ	0xFEE
  2369                           postdec0	equ	0xFED
  2370                           preinc0	equ	0xFEC
  2371                           plusw0	equ	0xFEB
  2372                           fsr0h	equ	0xFEA
  2373                           fsr0l	equ	0xFE9
  2374                           wreg	equ	0xFE8
  2375                           indf1	equ	0xFE7
  2376                           postinc1	equ	0xFE6
  2377                           postdec1	equ	0xFE5
  2378                           preinc1	equ	0xFE4
  2379                           plusw1	equ	0xFE3
  2380                           fsr1h	equ	0xFE2
  2381                           fsr1l	equ	0xFE1
  2382                           bsr	equ	0xFE0
  2383                           indf2	equ	0xFDF
  2384                           postinc2	equ	0xFDE
  2385                           postdec2	equ	0xFDD
  2386                           preinc2	equ	0xFDC
  2387                           plusw2	equ	0xFDB
  2388                           fsr2h	equ	0xFDA
  2389                           fsr2l	equ	0xFD9
  2390                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     17      51
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           64      0       0

Pointer List with Targets:

    dekoderFce@tlacitko	PTR struct . size(1) Largest target is 2
		 -> dekoderAB(COMRAM[2]), 

    filterFce@tlacitko	PTR struct . size(1) Largest target is 2
		 -> S3(COMRAM[2]), S4(COMRAM[2]), S5A(COMRAM[2]), S5B(COMRAM[2]), 

    pametFce@tlacitko	PTR struct . size(1) Largest target is 2
		 -> S3Filtr(COMRAM[2]), S4Filtr(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->___aldiv

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _low_isr in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3606
                            ___aldiv
                             ___lmul
                         _dekoderFce
                          _filterFce
                           _pametFce
             _preambleInitialization
 ---------------------------------------------------------------------------------
 (1) _preambleInitialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pametFce                                             5     3      2     511
                                              3 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _filterFce                                            5     3      2     839
                                              3 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _dekoderFce                                           5     2      3    1130
                                              3 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     522
                                              3 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     604
                                              3 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _low_isr                                              3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _high_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___aldiv
   ___lmul
   _dekoderFce
   _filterFce
   _pametFce
   _preambleInitialization

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F3F      0       0      54        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     11      33       1       54.3%
BITBANK15           40      0       0      34        0.0%
BANK15              40      0       0      35        0.0%
BITBIGSFRll         28      0       0      52        0.0%
BITBIGSFRhhhhl      1B      0       0      43        0.0%
BITBIGSFRhhhhhl     19      0       0      37        0.0%
BITBIGSFRhhhhhh      A      0       0      36        0.0%
BITBIGSFRhhhhhl      8      0       0      41        0.0%
BITBIGSFRhhhlll      3      0       0      47        0.0%
BITBIGSFRhhl         3      0       0      48        0.0%
BITBIGSFRhl          3      0       0      49        0.0%
BITBIGSFRhhhhhl      2      0       0      39        0.0%
BITBIGSFRhhhhhl      2      0       0      40        0.0%
BITBIGSFRhhhhhl      2      0       0      42        0.0%
BITBIGSFRhhhhhl      1      0       0      38        0.0%
BITBIGSFRhhhllh      1      0       0      45        0.0%
BITBIGSFRhhhllh      1      0       0      46        0.0%
BITBIGSFRhhhlh       1      0       0      44        0.0%
BITBIGSFRlhh         1      0       0      50        0.0%
BITBIGSFRlhl         1      0       0      51        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      33      53        0.0%
DATA                 0      0      33       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Jan 03 02:03:10 2024

                            l92 14FE                              _S3 001E                              l94 151A  
                            l86 142E                              _S4 0020                              l98 1564  
                            bsr 0FE0                             l200 1770                             l224 10AE  
                           l217 184E                             l334 167A                             l246 12E6  
                           l174 19AC                             l266 1942                             l267 1952  
                           l930 1958                             l940 196A                             l932 195A  
                           l950 1980                             l942 196C                             l934 1964  
                           l960 199E                             l952 198A                             l944 197A  
                           l936 1966                             l928 1954                             l962 19A8  
                           l954 198C                             l946 197C                             l938 1968  
                           l964 19AA                             l956 198E                             l948 197E  
                           l958 199C                             _S5A 001C                             _S5B 001A  
                           u700 178A                             u701 1786                             u710 17AA  
                           u711 17A6                             u800 10C2                             u720 17D6  
                           u801 10BE                             u721 17D2                             u810 10D2  
                           u650 1694                             u730 17EE                             u811 10CE  
                           u651 1690                             u731 17EA                             u900 11CC  
                           u820 10F6                             u740 1016                             u660 16B4  
                           u901 11C8                             u821 10F2                             u741 1012  
                           u661 16B0                             u910 11F0                             u830 1116  
                           u750 1026                             u670 16CC                             u911 11EC  
                           u831 1112                             u751 1022                             u671 16C8  
                           u920 1210                             u840 1126                             u760 104A  
                           u680 16F2                             u921 120C                             u841 1122  
                           u761 1046                             u681 16EE                             u930 1220  
                           u850 1148                             u770 106A                             u690 170A  
                           u931 121C                             u851 1144                             u771 1066  
                           u691 1706                             u940 1242                             u860 1168  
                           u780 107A                             u941 123E                             u861 1164  
                           u781 1076                             u950 1262                             u870 1178  
                           u790 109E                             u951 125E                             u871 1174  
                           u791 109A                             u960 1272                             u880 119C  
                           u961 126E                             u881 1198                             u970 1296  
                           u890 11BC                             u971 1292                             u891 11B8  
                           u980 1908                             u981 1904                             u990 1942  
                           u991 193E                             wreg 0FE8                            l1400 178A  
                          l1410 17BE                            l1402 1792                            l1500 1210  
                          l1420 17EE                            l1412 17C6                            l1404 179A  
                          l1510 1262                            l1502 1220                            l1350 167C  
                          l1422 17F2                            l1414 17D6                            l1406 17AA  
                          l1430 1844                            l1512 1272                            l1504 1228  
                          l1440 1016                            l1520 12A6                            l1360 16B4  
                          l1352 1684                            l1408 17AE                            l1600 13F2  
                          l1530 1908                            l1514 127C                            l1506 1242  
                          l1450 106A                            l1442 1026                            l1354 1694  
                          l1418 17DE                            l1610 14AA                            l1602 1426  
                          l1540 1582                            l1532 1918                            l1516 1296  
                          l1508 1252                            l1460 10C2                            l1452 107A  
                          l1444 1030                            l1436 1002                            l1380 170A  
                          l1372 16E2                            l1364 16BC                            l1356 169C  
                          l1428 1804                            l1620 14E2                            l1612 14B4  
                          l1604 142A                            l1550 15B8                            l1542 1592  
                          l1534 1922                            l1526 18EA                            l1470 1116  
                          l1462 10D2                            l1454 1084                            l1446 104A  
                          l1438 1006                            l1382 170E                            l1374 16F2  
                          l1366 16CC                            l1358 16A4                            l1390 1766  
                          l1630 151E                            l1622 14E8                            l1614 14BE  
                          l1606 143E                            l1560 1600                            l1552 15C8  
                          l1544 1596                            l1536 1570                            l1528 18FA  
                          l1480 1168                            l1472 1126                            l1464 10DC  
                          l1456 109E                            l1448 105A                            l1368 16D0  
                          l1632 152E                            l1624 14F8                            l1616 14C8  
                          l1608 14A6                            l1570 1644                            l1562 160A  
                          l1554 15DE                            l1546 15A4                            l1538 1574  
                          l1490 11BC                            l1482 1178                            l1474 112E  
                          l1466 10F6                            l1458 10B2                            l1378 16FA  
                          l1634 153A                            l1626 1502                            l1618 14D2  
                          l1564 1628                            l1556 15E6                            l1572 164A  
                          l1548 15B4                            l1492 11CC                            l1484 1182  
                          l1476 1148                            l1468 1106                            l1388 171E  
                          l1396 1772                            l1636 1550                            l1628 1512  
                          l1580 12E8                            l1574 165A                            l1566 1638  
                          l1558 15F2                            l1494 11D6                            l1486 119C  
                          l1478 1158                            l1398 177A                            l1638 155C  
                          l1590 1366                            l1582 1324                            l1576 166A  
                          l1568 163A                            l1496 11F0                            l1488 11AC  
                          l1592 1376                            l1584 1328                            l1498 1200  
                          l1674 181E                            l1594 1396                            l1586 1338  
                          l1676 1738                            l1596 13A6                            l1588 1344  
                          l1678 12C0                            l1598 13BE                            u1000 1582  
                          u1001 157E                            u1010 15A4                            u1011 15A0  
                          u1020 15DE                            u1021 15DA                            u1030 1600  
                          u1031 15FC                            u1040 1628                            u1041 1624  
                          u1105 14B2                            u1050 165A                            u1106 14B4  
                          u1051 1656                            u1115 14BC                            u1140 14E2  
                          u1116 14BE                            u1060 1338                            u1141 14DE  
                          u1125 14C6                            u1061 1334                            u1150 14F8  
                          u1126 14C8                            u1070 1366                            u1151 14F4  
                          u1135 14D0                            u1071 1362                            u1160 1512  
                          u1136 14D2                            u1080 1396                            u1161 150E  
                          u1081 1392                            u1170 152E                            u1090 143E  
                          u1171 152A                            u1091 143A                            u1180 1550  
                          u1181 154C                            _LATH 0F90                            _main 12E8  
                          fsr2h 0FDA                            indf2 0FDF                            fsr2l 0FD9  
                          _pulz 0009                            btemp 0034                            prodh 0FF4  
                          prodl 0FF3                            start 0096               pametFce@dalsiStav 0029  
                  ___param_bank 0000                 __end_of___aldiv 167C                           ?_main 0022  
                         _CCPR1 0FBC                           _T0CON 0FD5                           _T1CON 0FCD  
                         i1l121 0086                           i2l113 18E6                           _TMR0H 0FD7  
                         _TMR0L 0FD6                           _PORTH 0F87                           _TRISD 0F95  
                         _TRISF 0F97                           _TRISH 0F99                           _TRISJ 0F9A  
           ___lmul@multiplicand 0029                           _is1ms 0013                 __end_of_low_isr 0096  
                         tablat 0FF5                           ttemp5 0035                           ttemp6 0038  
                         ttemp7 003C                           status 0FD8                           wtemp8 0035  
               __initialization 19AE                    __end_of_main 1570                          ??_main 0033  
                 __activetblptr 0003                          _ADCON0 0FC2                          _ADCON1 0FC1  
                        _ADRESH 0FC4                          _ADRESL 0FC3                          _CCPR1H 0FBD  
                        _CCPR1L 0FBC                          i1l1300 005A                          i1l1310 0084  
                        i1l1302 0068                          i1l1304 006E                          i1l1306 0074  
                        i1l1308 0080                          i1l1290 0040                          i1l1292 0042  
                        i1l1294 0044                          i1l1286 0026                          i1l1296 0054  
                        i1l1288 0034                          i1l1298 0058                          i2l1260 186E  
                        i2l1270 189C                          i2l1262 1876                          i2l1272 18A0  
                        i2l1280 18DC                          i2l1264 187A                          i2l1256 1850  
                        i2l1282 18E0                          i2l1274 18AC                          i2l1266 1888  
                        i2l1258 185E                          i2l1284 18E4                          i2l1276 18BC  
                        i2l1268 188C                          i2l1278 18D8                __end_of_high_isr 18EA  
                        _is10ms 0012                          ___lmul 18EA                       ??___aldiv 002D  
        _preambleInitialization 1954                __end_of_pametFce 1850                          clear_0 19C6  
                        _mezera 0007                          isa$std 0001                          _vystup 000F  
                  __pdataCOMRAM 0033                    __mediumconst 0000                       ??_low_isr 0022  
                        tblptrh 0FF7                          tblptrl 0FF6                          tblptru 0FF8  
                    __accesstop 0060         __end_of__initialization 19CC                   ___rparam_used 0001  
                __pcstackCOMRAM 0022                      _dekoderFce 1002                         ?___lmul 0025  
                       _CCP1CON 0FBB                  ___lmul@product 002D              dekoderFce@tlacitko 0025  
            filterFce@dalsiStav 0029                         _S3Filtr 0016                         _S4Filtr 0018  
                       i1u60_20 0054                         i1u60_21 0050                         i1u61_20 0068  
                       i1u61_21 0064                         i1u59_20 0034                         i1u59_21 0030  
                       i2u55_40 185E                         i2u55_41 185A                         i2u56_40 186E  
                       i2u56_41 186A                         i2u57_40 1888                         i2u57_41 1884  
                       i2u58_40 18BC                         i2u58_41 18B8                       ?_high_isr 0022  
                     ?_pametFce 0025                         __Hparam 0000                         __Lparam 0000  
                       ___aldiv 1570               __end_of_filterFce 1772                    __psmallconst 1000  
                       __pcinit 19AE                         __ramtop 1000                         __ptext0 12E8  
                       __ptext1 1954                         __ptext2 1772                         __ptext3 167C  
                       __ptext4 1002                         __ptext5 18EA                         __ptext6 1570  
                     _T0CONbits 0FD5                       _ADRhotovo 0011                ___aldiv@dividend 0025  
                       _low_isr 0018                      ??_high_isr 0022                  __pintcode_body 1850  
          end_of_initialization 19CC                      ??_pametFce 0027                         int_func 1850  
                   _adKalkulace 0001                     ?_dekoderFce 0025                  filterFce@vstup 0026  
       ?_preambleInitialization 0022                ___aldiv@quotient 002F                         postinc0 0FEE  
                       postinc2 0FDE                       _PORTCbits 0F82                       _PORTDbits 0F83  
                     _PORTFbits 0F85                       _PORTJbits 0F88                       _TRISCbits 0F94  
                     _TRISFbits 0F97  __end_of_preambleInitialization 19AE                  __end_of___lmul 1954  
                 __pidataCOMRAM 19D6             start_initialization 19AE                pametFce@tlacitko 0025  
            high_isr@pocHodnota 0033                        ??___lmul 002D                     __pbssCOMRAM 0001  
                     _dekoderAB 0014                       __pintcode 0008                        ?___aldiv 0025  
                   __pintcodelo 0018                       _filterFce 167C                     __smallconst 1000  
                      ?_low_isr 0022               filterFce@tlacitko 0025                 ___aldiv@divisor 0029  
               ___aldiv@counter 002D                       _komparace 000B                        _LATDbits 0F8C  
                      _IPR1bits 0F9F                        _PIE1bits 0F9D                    ??_dekoderFce 0028  
                      _PIR1bits 0F9E                        _RCONbits 0FD0                      _ADCON0bits 0FC2  
                    ?_filterFce 0025              __end_of_dekoderFce 12E8               ___lmul@multiplier 0025  
                   _INTCON2bits 0FF1                      _ANCON1bits 0FC2                        __Hrparam 0000  
                      __Lrparam 0000                   pametFce@input 0026                        _high_isr 0008  
                      _pametFce 1772                        isa$xinst 0000                        _novyPulz 0010  
                      int$flags 0034                        _pulzBack 0005                     ??_filterFce 0027  
                   dekoderFce@A 0026                     dekoderFce@B 0027                     _OSCTUNEbits 0F9B  
                    _INTCONbits 0FF2                        _vysledek 000D                        intlevel1 0000  
                      intlevel2 0000                      _OSCCONbits 0FD3                    ___aldiv@sign 002E  
                    _WDTCONbits 0FC0        ??_preambleInitialization 0025  
