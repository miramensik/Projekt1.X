

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Nov 27 17:05:00 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F87J11
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20   000000                     
    21                           ; Generated 23/03/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F87J11 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55   000000                     _T0CONbits	set	4053
    56   000000                     _PORTJbits	set	3976
    57   000000                     _LATDbits	set	3980
    58   000000                     _TRISD	set	3989
    59   000000                     _TRISJ	set	3994
    60   000000                     _T0CON	set	4053
    61   000000                     _TMR0L	set	4054
    62   000000                     _TMR0H	set	4055
    63   000000                     _INTCONbits	set	4082
    64   000000                     _INTCON2bits	set	4081
    65   000000                     _RCONbits	set	4048
    66   000000                     _OSCTUNEbits	set	3995
    67   000000                     _OSCCONbits	set	4051
    68   000000                     _TRISH	set	3993
    69                           
    70                           ; #config settings
    71                           
    72                           	psect	cinit
    73   001288                     __pcinit:
    74                           	callstack 0
    75   001288                     start_initialization:
    76                           	callstack 0
    77   001288                     __initialization:
    78                           	callstack 0
    79                           
    80                           ; Clear objects allocated to COMRAM (9 bytes)
    81   001288  EE00  F001         	lfsr	0,__pbssCOMRAM
    82   00128C  0E09               	movlw	9
    83   00128E                     clear_0:
    84   00128E  6AEE               	clrf	postinc0,c
    85   001290  06E8               	decf	wreg,f,c
    86   001292  E1FD               	bnz	clear_0
    87   001294                     end_of_initialization:
    88                           	callstack 0
    89   001294                     __end_of__initialization:
    90                           	callstack 0
    91   001294  9012               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    92   001296  9212               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    93   001298  0100               	movlb	0
    94   00129A  EFEB  F008         	goto	_main	;jump to C main() function
    95                           
    96                           	psect	bssCOMRAM
    97   000001                     __pbssCOMRAM:
    98                           	callstack 0
    99   000001                     _is1ms:
   100                           	callstack 0
   101   000001                     	ds	1
   102   000002                     _S4Filtr:
   103                           	callstack 0
   104   000002                     	ds	2
   105   000004                     _S5B:
   106                           	callstack 0
   107   000004                     	ds	2
   108   000006                     _S5A:
   109                           	callstack 0
   110   000006                     	ds	2
   111   000008                     _S4:
   112                           	callstack 0
   113   000008                     	ds	2
   114                           
   115                           	psect	cstackCOMRAM
   116   00000A                     __pcstackCOMRAM:
   117                           	callstack 0
   118   00000A                     ??_low_isr:
   119                           
   120                           ; 1 bytes @ 0x0
   121   00000A                     	ds	3
   122   00000D                     filterFce@tlacitko:
   123                           	callstack 0
   124   00000D                     pametFce@tlacitko:
   125                           	callstack 0
   126                           
   127                           ; 1 bytes @ 0x3
   128   00000D                     	ds	1
   129   00000E                     filterFce@vstup:
   130                           	callstack 0
   131   00000E                     pametFce@input:
   132                           	callstack 0
   133                           
   134                           ; 1 bytes @ 0x4
   135   00000E                     	ds	1
   136   00000F                     ??_filterFce:
   137   00000F                     ??_pametFce:
   138                           
   139                           ; 1 bytes @ 0x5
   140   00000F                     	ds	2
   141   000011                     filterFce@dalsiStav:
   142                           	callstack 0
   143   000011                     pametFce@dalsiStav:
   144                           	callstack 0
   145                           
   146                           ; 1 bytes @ 0x7
   147   000011                     	ds	1
   148   000012                     
   149                           ; 1 bytes @ 0x8
   150 ;;
   151 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   152 ;;
   153 ;; *************** function _main *****************
   154 ;; Defined at:
   155 ;;		line 60 in file "source/main.c"
   156 ;; Parameters:    Size  Location     Type
   157 ;;		None
   158 ;; Auto vars:     Size  Location     Type
   159 ;;		None
   160 ;; Return value:  Size  Location     Type
   161 ;;                  1    wreg      void 
   162 ;; Registers used:
   163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   164 ;; Tracked objects:
   165 ;;		On entry : 0/0
   166 ;;		On exit  : 0/0
   167 ;;		Unchanged: 0/0
   168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   173 ;;Total ram usage:        0 bytes
   174 ;; Hardware stack levels required when called: 3
   175 ;; This function calls:
   176 ;;		_filterFce
   177 ;;		_pametFce
   178 ;;		_preambleInitialization
   179 ;; This function is called by:
   180 ;;		Startup code after reset
   181 ;; This function uses a non-reentrant model
   182 ;;
   183                           
   184                           	psect	text0
   185   0011D6                     __ptext0:
   186                           	callstack 0
   187   0011D6                     _main:
   188                           	callstack 28
   189   0011D6                     
   190                           ;source/main.c: 62:     S4.stav = 0;
   191   0011D6  0E00               	movlw	0
   192   0011D8  6E08               	movwf	_S4^0,c
   193                           
   194                           ;source/main.c: 63:     S4.vystup = 0;
   195   0011DA  0E00               	movlw	0
   196   0011DC  6E09               	movwf	(_S4+1)^0,c
   197                           
   198                           ;source/main.c: 65:     S5A.stav = 0;
   199   0011DE  0E00               	movlw	0
   200   0011E0  6E06               	movwf	_S5A^0,c
   201                           
   202                           ;source/main.c: 66:     S5A.vystup = 0;
   203   0011E2  0E00               	movlw	0
   204   0011E4  6E07               	movwf	(_S5A+1)^0,c
   205                           
   206                           ;source/main.c: 68:     S5B.stav = 0;
   207   0011E6  0E00               	movlw	0
   208   0011E8  6E04               	movwf	_S5B^0,c
   209                           
   210                           ;source/main.c: 69:     S5B.vystup = 0;
   211   0011EA  0E00               	movlw	0
   212   0011EC  6E05               	movwf	(_S5B+1)^0,c
   213                           
   214                           ;source/main.c: 71:     S4Filtr.stav = 0;
   215   0011EE  0E00               	movlw	0
   216   0011F0  6E02               	movwf	_S4Filtr^0,c
   217                           
   218                           ;source/main.c: 72:     S4Filtr.vystup = 0;
   219   0011F2  0E00               	movlw	0
   220   0011F4  6E03               	movwf	(_S4Filtr+1)^0,c
   221   0011F6                     
   222                           ;source/main.c: 75:   preambleInitialization();
   223   0011F6  EC2E  F009         	call	_preambleInitialization	;wreg free
   224   0011FA                     l1115:
   225                           
   226                           ;source/main.c: 81:   {;source/main.c: 82:       if(is1ms == 1){
   227   0011FA  0401               	decf	_is1ms^0,w,c
   228   0011FC  A4D8               	btfss	status,2,c
   229   0011FE  EF03  F009         	goto	u381
   230   001202  EF05  F009         	goto	u380
   231   001206                     u381:
   232   001206  EF25  F009         	goto	l1121
   233   00120A                     u380:
   234   00120A                     
   235                           ;source/main.c: 85:    filterFce(&S4, PORTJbits.RJ7);
   236   00120A  0E08               	movlw	low _S4
   237   00120C  6E0D               	movwf	filterFce@tlacitko^0,c
   238   00120E  0E00               	movlw	0
   239   001210  BE88               	btfsc	136,7,c	;volatile
   240   001212  0E01               	movlw	1
   241   001214  6E0E               	movwf	filterFce@vstup^0,c
   242   001216  EC01  F008         	call	_filterFce	;wreg free
   243                           
   244                           ;source/main.c: 86:   pametFce(&S4Filtr, S4.vystup);
   245   00121A  0E02               	movlw	low _S4Filtr
   246   00121C  6E0D               	movwf	pametFce@tlacitko^0,c
   247   00121E  C009  F00E         	movff	_S4+1,pametFce@input
   248   001222  EC7C  F008         	call	_pametFce	;wreg free
   249                           
   250                           ;source/main.c: 87:   filterFce(&S5A, PORTJbits.RJ0);
   251   001226  0E06               	movlw	low _S5A
   252   001228  6E0D               	movwf	filterFce@tlacitko^0,c
   253   00122A  0E00               	movlw	0
   254   00122C  B088               	btfsc	136,0,c	;volatile
   255   00122E  0E01               	movlw	1
   256   001230  6E0E               	movwf	filterFce@vstup^0,c
   257   001232  EC01  F008         	call	_filterFce	;wreg free
   258                           
   259                           ;source/main.c: 88:   filterFce(&S5B, PORTJbits.RJ1);
   260   001236  0E04               	movlw	low _S5B
   261   001238  6E0D               	movwf	filterFce@tlacitko^0,c
   262   00123A  0E00               	movlw	0
   263   00123C  B288               	btfsc	136,1,c	;volatile
   264   00123E  0E01               	movlw	1
   265   001240  6E0E               	movwf	filterFce@vstup^0,c
   266   001242  EC01  F008         	call	_filterFce	;wreg free
   267   001246                     
   268                           ;source/main.c: 90:    is1ms = 0;
   269   001246  0E00               	movlw	0
   270   001248  6E01               	movwf	_is1ms^0,c
   271   00124A                     l1121:
   272                           
   273                           ;source/main.c: 92:   LATDbits.LATD7 = S4Filtr.vystup;
   274   00124A  B003               	btfsc	(_S4Filtr+1)^0,0,c
   275   00124C  D002               	bra	u395
   276   00124E  9E8C               	bcf	140,7,c	;volatile
   277   001250  D001               	bra	u396
   278   001252                     u395:
   279   001252  8E8C               	bsf	140,7,c	;volatile
   280   001254                     u396:
   281   001254  EFFD  F008         	goto	l1115
   282   001258  EF29  F000         	goto	start
   283   00125C                     __end_of_main:
   284                           	callstack 0
   285                           
   286 ;; *************** function _preambleInitialization *****************
   287 ;; Defined at:
   288 ;;		line 16 in file "source/preambleInitialization.c"
   289 ;; Parameters:    Size  Location     Type
   290 ;;		None
   291 ;; Auto vars:     Size  Location     Type
   292 ;;		None
   293 ;; Return value:  Size  Location     Type
   294 ;;                  1    wreg      void 
   295 ;; Registers used:
   296 ;;		wreg, status,2
   297 ;; Tracked objects:
   298 ;;		On entry : 0/0
   299 ;;		On exit  : 0/0
   300 ;;		Unchanged: 0/0
   301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   306 ;;Total ram usage:        0 bytes
   307 ;; Hardware stack levels used: 1
   308 ;; Hardware stack levels required when called: 2
   309 ;; This function calls:
   310 ;;		Nothing
   311 ;; This function is called by:
   312 ;;		_main
   313 ;; This function uses a non-reentrant model
   314 ;;
   315                           
   316                           	psect	text1
   317   00125C                     __ptext1:
   318                           	callstack 0
   319   00125C                     _preambleInitialization:
   320                           	callstack 28
   321   00125C                     
   322                           ;source/preambleInitialization.c: 18:     T0CON = 0b10001000;
   323   00125C  0E88               	movlw	136
   324   00125E  6ED5               	movwf	213,c	;volatile
   325   001260                     
   326                           ;source/preambleInitialization.c: 19:     T0CONbits.PSA = 1;
   327   001260  86D5               	bsf	213,3,c	;volatile
   328   001262                     
   329                           ;source/preambleInitialization.c: 20:     T0CONbits.TMR0ON = 1;
   330   001262  8ED5               	bsf	213,7,c	;volatile
   331                           
   332                           ;source/preambleInitialization.c: 22:     TMR0H = 0xB1;
   333   001264  0EB1               	movlw	177
   334   001266  6ED7               	movwf	215,c	;volatile
   335                           
   336                           ;source/preambleInitialization.c: 23:     TMR0L = 0xDF;
   337   001268  0EDF               	movlw	223
   338   00126A  6ED6               	movwf	214,c	;volatile
   339   00126C                     
   340                           ;source/preambleInitialization.c: 25:     INTCON2bits.TMR0IP = 0;
   341   00126C  94F1               	bcf	241,2,c	;volatile
   342   00126E                     
   343                           ;source/preambleInitialization.c: 26:     INTCONbits.TMR0IE = 1;
   344   00126E  8AF2               	bsf	242,5,c	;volatile
   345   001270                     
   346                           ;source/preambleInitialization.c: 28:     INTCONbits.GIEH = 1;
   347   001270  8EF2               	bsf	242,7,c	;volatile
   348   001272                     
   349                           ;source/preambleInitialization.c: 29:     INTCONbits.GIEL = 1;
   350   001272  8CF2               	bsf	242,6,c	;volatile
   351   001274                     
   352                           ;source/preambleInitialization.c: 31:     TRISJ = 0xFF;
   353   001274  689A               	setf	154,c	;volatile
   354                           
   355                           ;source/preambleInitialization.c: 32:     TRISD = 0x00;
   356   001276  0E00               	movlw	0
   357   001278  6E95               	movwf	149,c	;volatile
   358                           
   359                           ;source/preambleInitialization.c: 33:     TRISH = 0x00;
   360   00127A  0E00               	movlw	0
   361   00127C  6E99               	movwf	153,c	;volatile
   362                           
   363                           ;source/preambleInitialization.c: 43:     OSCCONbits.SCS = 0;
   364   00127E  0EFC               	movlw	-4
   365   001280  16D3               	andwf	211,f,c	;volatile
   366   001282                     
   367                           ;source/preambleInitialization.c: 45:     OSCTUNEbits.PLLEN = 1;
   368   001282  8C9B               	bsf	155,6,c	;volatile
   369   001284                     
   370                           ;source/preambleInitialization.c: 50:     RCONbits.IPEN = 1;
   371   001284  8ED0               	bsf	208,7,c	;volatile
   372   001286  0012               	return		;funcret
   373   001288                     __end_of_preambleInitialization:
   374                           	callstack 0
   375                           
   376 ;; *************** function _pametFce *****************
   377 ;; Defined at:
   378 ;;		line 14 in file "header/pamet.c"
   379 ;; Parameters:    Size  Location     Type
   380 ;;  tlacitko        1    3[COMRAM] PTR struct .
   381 ;;		 -> S4Filtr(2), 
   382 ;;  input           1    4[COMRAM] unsigned char 
   383 ;; Auto vars:     Size  Location     Type
   384 ;;  dalsiStav       1    7[COMRAM] unsigned char 
   385 ;; Return value:  Size  Location     Type
   386 ;;                  1    wreg      void 
   387 ;; Registers used:
   388 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   389 ;; Tracked objects:
   390 ;;		On entry : 0/0
   391 ;;		On exit  : 0/0
   392 ;;		Unchanged: 0/0
   393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   394 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   395 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   396 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   397 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   398 ;;Total ram usage:        5 bytes
   399 ;; Hardware stack levels used: 1
   400 ;; Hardware stack levels required when called: 2
   401 ;; This function calls:
   402 ;;		Nothing
   403 ;; This function is called by:
   404 ;;		_main
   405 ;; This function uses a non-reentrant model
   406 ;;
   407                           
   408                           	psect	text2
   409   0010F8                     __ptext2:
   410                           	callstack 0
   411   0010F8                     _pametFce:
   412                           	callstack 28
   413   0010F8                     
   414                           ;header/pamet.c: 15:     char dalsiStav = s0;
   415   0010F8  0E00               	movlw	0
   416   0010FA  6E11               	movwf	pametFce@dalsiStav^0,c
   417                           
   418                           ;header/pamet.c: 17:     switch(tlacitko->stav){
   419   0010FC  EFC5  F008         	goto	l1103
   420   001100                     l1073:
   421                           
   422                           ;header/pamet.c: 19:             if(input == 0){
   423   001100  500E               	movf	pametFce@input^0,w,c
   424   001102  A4D8               	btfss	status,2,c
   425   001104  EF86  F008         	goto	u341
   426   001108  EF88  F008         	goto	u340
   427   00110C                     u341:
   428   00110C  EF8C  F008         	goto	l1077
   429   001110                     u340:
   430   001110                     
   431                           ;header/pamet.c: 20:                 dalsiStav = s1;
   432   001110  0E01               	movlw	1
   433   001112  6E11               	movwf	pametFce@dalsiStav^0,c
   434                           
   435                           ;header/pamet.c: 21:             }else{
   436   001114  EFE5  F008         	goto	l1105
   437   001118                     l1077:
   438                           
   439                           ;header/pamet.c: 22:                 dalsiStav = s0;
   440   001118  0E00               	movlw	0
   441   00111A  6E11               	movwf	pametFce@dalsiStav^0,c
   442   00111C  EFE5  F008         	goto	l1105
   443   001120                     l1079:
   444                           
   445                           ;header/pamet.c: 27:             if(input == 0){
   446   001120  500E               	movf	pametFce@input^0,w,c
   447   001122  A4D8               	btfss	status,2,c
   448   001124  EF96  F008         	goto	u351
   449   001128  EF98  F008         	goto	u350
   450   00112C                     u351:
   451   00112C  EFA2  F008         	goto	l1085
   452   001130                     u350:
   453   001130                     
   454                           ;header/pamet.c: 28:                 dalsiStav = s1;
   455   001130  0E01               	movlw	1
   456   001132  6E11               	movwf	pametFce@dalsiStav^0,c
   457   001134                     
   458                           ;header/pamet.c: 29:                tlacitko->vystup = 0;
   459   001134  500D               	movf	pametFce@tlacitko^0,w,c
   460   001136  6ED9               	movwf	fsr2l,c
   461   001138  6ADA               	clrf	fsr2h,c
   462   00113A  0E01               	movlw	1
   463   00113C  26D9               	addwf	fsr2l,f,c
   464   00113E  6ADF               	clrf	indf2,c
   465                           
   466                           ;header/pamet.c: 30:             }else{
   467   001140  EFE5  F008         	goto	l1105
   468   001144                     l1085:
   469                           
   470                           ;header/pamet.c: 31:                 dalsiStav = s2;
   471   001144  0E02               	movlw	2
   472   001146  6E11               	movwf	pametFce@dalsiStav^0,c
   473   001148  EFE5  F008         	goto	l1105
   474   00114C                     l1087:
   475                           
   476                           ;header/pamet.c: 36:             if(input == 0){
   477   00114C  500E               	movf	pametFce@input^0,w,c
   478   00114E  A4D8               	btfss	status,2,c
   479   001150  EFAC  F008         	goto	u361
   480   001154  EFAE  F008         	goto	u360
   481   001158                     u361:
   482   001158  EFA2  F008         	goto	l1085
   483   00115C                     u360:
   484   00115C                     
   485                           ;header/pamet.c: 37:                 dalsiStav = s3;
   486   00115C  0E03               	movlw	3
   487   00115E  6E11               	movwf	pametFce@dalsiStav^0,c
   488                           
   489                           ;header/pamet.c: 38:             }else{
   490   001160  EFE5  F008         	goto	l1105
   491   001164                     l1093:
   492                           
   493                           ;header/pamet.c: 44:             if(input == 0){
   494   001164  500E               	movf	pametFce@input^0,w,c
   495   001166  A4D8               	btfss	status,2,c
   496   001168  EFB8  F008         	goto	u371
   497   00116C  EFBA  F008         	goto	u370
   498   001170                     u371:
   499   001170  EF8C  F008         	goto	l1077
   500   001174                     u370:
   501   001174                     
   502                           ;header/pamet.c: 45:                 dalsiStav = s3;
   503   001174  0E03               	movlw	3
   504   001176  6E11               	movwf	pametFce@dalsiStav^0,c
   505   001178                     
   506                           ;header/pamet.c: 46:                 tlacitko->vystup = 1;
   507   001178  500D               	movf	pametFce@tlacitko^0,w,c
   508   00117A  6ED9               	movwf	fsr2l,c
   509   00117C  6ADA               	clrf	fsr2h,c
   510   00117E  0E01               	movlw	1
   511   001180  26D9               	addwf	fsr2l,f,c
   512   001182  0E01               	movlw	1
   513   001184  6EDF               	movwf	indf2,c
   514                           
   515                           ;header/pamet.c: 47:             }else{
   516   001186  EFE5  F008         	goto	l1105
   517   00118A                     l1103:
   518   00118A  500D               	movf	pametFce@tlacitko^0,w,c
   519   00118C  6ED9               	movwf	fsr2l,c
   520   00118E  6ADA               	clrf	fsr2h,c
   521   001190  50DF               	movf	indf2,w,c
   522   001192  6E0F               	movwf	??_pametFce^0,c
   523   001194  6A10               	clrf	(??_pametFce+1)^0,c
   524                           
   525                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   526                           ; Switch size 1, requested type "simple"
   527                           ; Number of cases is 1, Range of values is 0 to 0
   528                           ; switch strategies available:
   529                           ; Name         Instructions Cycles
   530                           ; simple_byte            4     3 (average)
   531                           ;	Chosen strategy is simple_byte
   532   001196  5010               	movf	(??_pametFce+1)^0,w,c
   533   001198  0A00               	xorlw	0	; case 0
   534   00119A  B4D8               	btfsc	status,2,c
   535   00119C  EFD2  F008         	goto	l1131
   536   0011A0  EFE5  F008         	goto	l1105
   537   0011A4                     l1131:
   538                           
   539                           ; Switch size 1, requested type "simple"
   540                           ; Number of cases is 4, Range of values is 0 to 3
   541                           ; switch strategies available:
   542                           ; Name         Instructions Cycles
   543                           ; simple_byte           13     7 (average)
   544                           ;	Chosen strategy is simple_byte
   545   0011A4  500F               	movf	??_pametFce^0,w,c
   546   0011A6  0A00               	xorlw	0	; case 0
   547   0011A8  B4D8               	btfsc	status,2,c
   548   0011AA  EF80  F008         	goto	l1073
   549   0011AE  0A01               	xorlw	1	; case 1
   550   0011B0  B4D8               	btfsc	status,2,c
   551   0011B2  EF90  F008         	goto	l1079
   552   0011B6  0A03               	xorlw	3	; case 2
   553   0011B8  B4D8               	btfsc	status,2,c
   554   0011BA  EFA6  F008         	goto	l1087
   555   0011BE  0A01               	xorlw	1	; case 3
   556   0011C0  B4D8               	btfsc	status,2,c
   557   0011C2  EFB2  F008         	goto	l1093
   558   0011C6  EFE5  F008         	goto	l1105
   559   0011CA                     l1105:
   560                           
   561                           ;header/pamet.c: 54:       tlacitko->stav = dalsiStav;
   562   0011CA  500D               	movf	pametFce@tlacitko^0,w,c
   563   0011CC  6ED9               	movwf	fsr2l,c
   564   0011CE  6ADA               	clrf	fsr2h,c
   565   0011D0  C011  FFDF         	movff	pametFce@dalsiStav,indf2
   566   0011D4  0012               	return		;funcret
   567   0011D6                     __end_of_pametFce:
   568                           	callstack 0
   569                           
   570 ;; *************** function _filterFce *****************
   571 ;; Defined at:
   572 ;;		line 15 in file "source/filter.c"
   573 ;; Parameters:    Size  Location     Type
   574 ;;  tlacitko        1    3[COMRAM] PTR struct .
   575 ;;		 -> S5B(2), S5A(2), S4(2), 
   576 ;;  vstup           1    4[COMRAM] unsigned char 
   577 ;; Auto vars:     Size  Location     Type
   578 ;;  dalsiStav       1    7[COMRAM] unsigned char 
   579 ;; Return value:  Size  Location     Type
   580 ;;                  1    wreg      void 
   581 ;; Registers used:
   582 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   583 ;; Tracked objects:
   584 ;;		On entry : 0/0
   585 ;;		On exit  : 0/0
   586 ;;		Unchanged: 0/0
   587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   588 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   589 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   590 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   591 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   592 ;;Total ram usage:        5 bytes
   593 ;; Hardware stack levels used: 1
   594 ;; Hardware stack levels required when called: 2
   595 ;; This function calls:
   596 ;;		Nothing
   597 ;; This function is called by:
   598 ;;		_main
   599 ;; This function uses a non-reentrant model
   600 ;;
   601                           
   602                           	psect	text3
   603   001002                     __ptext3:
   604                           	callstack 0
   605   001002                     _filterFce:
   606                           	callstack 28
   607   001002                     
   608                           ;source/filter.c: 15: void filterFce(typeFilter*tlacitko, char vstup);source/filter.c: 1
      +                          6: {;source/filter.c: 17: char dalsiStav = s0;
   609   001002  0E00               	movlw	0
   610   001004  6E11               	movwf	filterFce@dalsiStav^0,c
   611                           
   612                           ;source/filter.c: 20:   switch(tlacitko->stav){
   613   001006  EF52  F008         	goto	l1063
   614   00100A                     l1027:
   615                           
   616                           ;source/filter.c: 22:           if(vstup == 1){
   617   00100A  040E               	decf	filterFce@vstup^0,w,c
   618   00100C  A4D8               	btfss	status,2,c
   619   00100E  EF0B  F008         	goto	u291
   620   001012  EF0D  F008         	goto	u290
   621   001016                     u291:
   622   001016  EF11  F008         	goto	l1031
   623   00101A                     u290:
   624   00101A                     l1029:
   625                           
   626                           ;source/filter.c: 23:               dalsiStav = s1;
   627   00101A  0E01               	movlw	1
   628   00101C  6E11               	movwf	filterFce@dalsiStav^0,c
   629                           
   630                           ;source/filter.c: 24:           }else{
   631   00101E  EF76  F008         	goto	l1065
   632   001022                     l1031:
   633                           
   634                           ;source/filter.c: 25:               dalsiStav = s3;
   635   001022  0E03               	movlw	3
   636   001024  6E11               	movwf	filterFce@dalsiStav^0,c
   637   001026  EF76  F008         	goto	l1065
   638   00102A                     l1033:
   639                           
   640                           ;source/filter.c: 30:           if(vstup == 1){
   641   00102A  040E               	decf	filterFce@vstup^0,w,c
   642   00102C  A4D8               	btfss	status,2,c
   643   00102E  EF1B  F008         	goto	u301
   644   001032  EF1D  F008         	goto	u300
   645   001036                     u301:
   646   001036  EF11  F008         	goto	l1031
   647   00103A                     u300:
   648   00103A                     
   649                           ;source/filter.c: 31:               dalsiStav = s2;
   650   00103A  0E02               	movlw	2
   651   00103C  6E11               	movwf	filterFce@dalsiStav^0,c
   652                           
   653                           ;source/filter.c: 32:           }else{
   654   00103E  EF76  F008         	goto	l1065
   655   001042                     l1039:
   656                           
   657                           ;source/filter.c: 38:           if(vstup == 1){
   658   001042  040E               	decf	filterFce@vstup^0,w,c
   659   001044  A4D8               	btfss	status,2,c
   660   001046  EF27  F008         	goto	u311
   661   00104A  EF29  F008         	goto	u310
   662   00104E                     u311:
   663   00104E  EF11  F008         	goto	l1031
   664   001052                     u310:
   665   001052                     
   666                           ;source/filter.c: 39:               dalsiStav = s2;
   667   001052  0E02               	movlw	2
   668   001054  6E11               	movwf	filterFce@dalsiStav^0,c
   669   001056                     
   670                           ;source/filter.c: 40:               tlacitko->vystup = 1;
   671   001056  500D               	movf	filterFce@tlacitko^0,w,c
   672   001058  6ED9               	movwf	fsr2l,c
   673   00105A  6ADA               	clrf	fsr2h,c
   674   00105C  0E01               	movlw	1
   675   00105E  26D9               	addwf	fsr2l,f,c
   676   001060  0E01               	movlw	1
   677   001062  6EDF               	movwf	indf2,c
   678                           
   679                           ;source/filter.c: 41:           }else{
   680   001064  EF76  F008         	goto	l1065
   681   001068                     l1047:
   682                           
   683                           ;source/filter.c: 47:           if(vstup == 0){
   684   001068  500E               	movf	filterFce@vstup^0,w,c
   685   00106A  A4D8               	btfss	status,2,c
   686   00106C  EF3A  F008         	goto	u321
   687   001070  EF3C  F008         	goto	u320
   688   001074                     u321:
   689   001074  EF0D  F008         	goto	l1029
   690   001078                     u320:
   691   001078                     
   692                           ;source/filter.c: 48:               dalsiStav = s4;
   693   001078  0E04               	movlw	4
   694   00107A  6E11               	movwf	filterFce@dalsiStav^0,c
   695                           
   696                           ;source/filter.c: 49:           }else{
   697   00107C  EF76  F008         	goto	l1065
   698   001080                     l1053:
   699                           
   700                           ;source/filter.c: 56:           if(vstup == 0){
   701   001080  500E               	movf	filterFce@vstup^0,w,c
   702   001082  A4D8               	btfss	status,2,c
   703   001084  EF46  F008         	goto	u331
   704   001088  EF48  F008         	goto	u330
   705   00108C                     u331:
   706   00108C  EF0D  F008         	goto	l1029
   707   001090                     u330:
   708   001090                     
   709                           ;source/filter.c: 57:               dalsiStav = s4;
   710   001090  0E04               	movlw	4
   711   001092  6E11               	movwf	filterFce@dalsiStav^0,c
   712   001094                     
   713                           ;source/filter.c: 58:               tlacitko->vystup = 0;
   714   001094  500D               	movf	filterFce@tlacitko^0,w,c
   715   001096  6ED9               	movwf	fsr2l,c
   716   001098  6ADA               	clrf	fsr2h,c
   717   00109A  0E01               	movlw	1
   718   00109C  26D9               	addwf	fsr2l,f,c
   719   00109E  6ADF               	clrf	indf2,c
   720                           
   721                           ;source/filter.c: 59:           }else{
   722   0010A0  EF76  F008         	goto	l1065
   723   0010A4                     l1063:
   724   0010A4  500D               	movf	filterFce@tlacitko^0,w,c
   725   0010A6  6ED9               	movwf	fsr2l,c
   726   0010A8  6ADA               	clrf	fsr2h,c
   727   0010AA  50DF               	movf	indf2,w,c
   728   0010AC  6E0F               	movwf	??_filterFce^0,c
   729   0010AE  6A10               	clrf	(??_filterFce+1)^0,c
   730                           
   731                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   732                           ; Switch size 1, requested type "simple"
   733                           ; Number of cases is 1, Range of values is 0 to 0
   734                           ; switch strategies available:
   735                           ; Name         Instructions Cycles
   736                           ; simple_byte            4     3 (average)
   737                           ;	Chosen strategy is simple_byte
   738   0010B0  5010               	movf	(??_filterFce+1)^0,w,c
   739   0010B2  0A00               	xorlw	0	; case 0
   740   0010B4  B4D8               	btfsc	status,2,c
   741   0010B6  EF5F  F008         	goto	l1133
   742   0010BA  EF76  F008         	goto	l1065
   743   0010BE                     l1133:
   744                           
   745                           ; Switch size 1, requested type "simple"
   746                           ; Number of cases is 5, Range of values is 0 to 4
   747                           ; switch strategies available:
   748                           ; Name         Instructions Cycles
   749                           ; simple_byte           16     9 (average)
   750                           ;	Chosen strategy is simple_byte
   751   0010BE  500F               	movf	??_filterFce^0,w,c
   752   0010C0  0A00               	xorlw	0	; case 0
   753   0010C2  B4D8               	btfsc	status,2,c
   754   0010C4  EF05  F008         	goto	l1027
   755   0010C8  0A01               	xorlw	1	; case 1
   756   0010CA  B4D8               	btfsc	status,2,c
   757   0010CC  EF15  F008         	goto	l1033
   758   0010D0  0A03               	xorlw	3	; case 2
   759   0010D2  B4D8               	btfsc	status,2,c
   760   0010D4  EF21  F008         	goto	l1039
   761   0010D8  0A01               	xorlw	1	; case 3
   762   0010DA  B4D8               	btfsc	status,2,c
   763   0010DC  EF34  F008         	goto	l1047
   764   0010E0  0A07               	xorlw	7	; case 4
   765   0010E2  B4D8               	btfsc	status,2,c
   766   0010E4  EF40  F008         	goto	l1053
   767   0010E8  EF76  F008         	goto	l1065
   768   0010EC                     l1065:
   769                           
   770                           ;source/filter.c: 66:   tlacitko->stav = dalsiStav;
   771   0010EC  500D               	movf	filterFce@tlacitko^0,w,c
   772   0010EE  6ED9               	movwf	fsr2l,c
   773   0010F0  6ADA               	clrf	fsr2h,c
   774   0010F2  C011  FFDF         	movff	filterFce@dalsiStav,indf2
   775   0010F6  0012               	return		;funcret
   776   0010F8                     __end_of_filterFce:
   777                           	callstack 0
   778                           
   779 ;; *************** function _low_isr *****************
   780 ;; Defined at:
   781 ;;		line 106 in file "source/main.c"
   782 ;; Parameters:    Size  Location     Type
   783 ;;		None
   784 ;; Auto vars:     Size  Location     Type
   785 ;;		None
   786 ;; Return value:  Size  Location     Type
   787 ;;                  1    wreg      void 
   788 ;; Registers used:
   789 ;;		wreg, status,2
   790 ;; Tracked objects:
   791 ;;		On entry : 0/0
   792 ;;		On exit  : 0/0
   793 ;;		Unchanged: 0/0
   794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   797 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   798 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   799 ;;Total ram usage:        3 bytes
   800 ;; Hardware stack levels used: 1
   801 ;; Hardware stack levels required when called: 1
   802 ;; This function calls:
   803 ;;		Nothing
   804 ;; This function is called by:
   805 ;;		Interrupt level 1
   806 ;; This function uses a non-reentrant model
   807 ;;
   808                           
   809                           	psect	intcodelo
   810   000018                     __pintcodelo:
   811                           	callstack 0
   812   000018                     _low_isr:
   813                           	callstack 28
   814                           
   815                           ;incstack = 0
   816   000018  8012               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   817   00001A  CFD8 F00A          	movff	status,??_low_isr
   818   00001E  CFE8 F00B          	movff	wreg,??_low_isr+1
   819   000022  CFE0 F00C          	movff	bsr,??_low_isr+2
   820   000026                     
   821                           ;source/main.c: 108:     if(INTCONbits.TMR0IF == 1)
   822   000026  A4F2               	btfss	242,2,c	;volatile
   823   000028  EF18  F000         	goto	i1u12_21
   824   00002C  EF1A  F000         	goto	i1u12_20
   825   000030                     i1u12_21:
   826   000030  EF21  F000         	goto	i1l46
   827   000034                     i1u12_20:
   828   000034                     
   829                           ;source/main.c: 109:     {;source/main.c: 110:         is1ms = 1;
   830   000034  0E01               	movlw	1
   831   000036  6E01               	movwf	_is1ms^0,c
   832                           
   833                           ;source/main.c: 111:         TMR0H = 0xD8;
   834   000038  0ED8               	movlw	216
   835   00003A  6ED7               	movwf	215,c	;volatile
   836                           
   837                           ;source/main.c: 112:         TMR0L = 0xEF;
   838   00003C  0EEF               	movlw	239
   839   00003E  6ED6               	movwf	214,c	;volatile
   840   000040                     
   841                           ;source/main.c: 113:         INTCONbits.TMR0IF = 0;
   842   000040  94F2               	bcf	242,2,c	;volatile
   843   000042                     i1l46:
   844   000042  C00C  FFE0         	movff	??_low_isr+2,bsr
   845   000046  C00B  FFE8         	movff	??_low_isr+1,wreg
   846   00004A  C00A  FFD8         	movff	??_low_isr,status
   847   00004E  9012               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   848   000050  0010               	retfie	
   849   000052                     __end_of_low_isr:
   850                           	callstack 0
   851                           
   852 ;; *************** function _high_isr *****************
   853 ;; Defined at:
   854 ;;		line 100 in file "source/main.c"
   855 ;; Parameters:    Size  Location     Type
   856 ;;		None
   857 ;; Auto vars:     Size  Location     Type
   858 ;;		None
   859 ;; Return value:  Size  Location     Type
   860 ;;                  1    wreg      void 
   861 ;; Registers used:
   862 ;;		None
   863 ;; Tracked objects:
   864 ;;		On entry : 0/0
   865 ;;		On exit  : 0/0
   866 ;;		Unchanged: 0/0
   867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   872 ;;Total ram usage:        0 bytes
   873 ;; Hardware stack levels used: 1
   874 ;; This function calls:
   875 ;;		Nothing
   876 ;; This function is called by:
   877 ;;		Interrupt level 2
   878 ;; This function uses a non-reentrant model
   879 ;;
   880                           
   881                           	psect	intcode
   882   000008                     __pintcode:
   883                           	callstack 0
   884   000008                     _high_isr:
   885                           	callstack 28
   886                           
   887                           ;incstack = 0
   888   000008  8212               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   889   00000A  EF4F  F009         	goto	int_func
   890                           
   891                           	psect	intcode_body
   892   00129E                     __pintcode_body:
   893                           	callstack 28
   894   00129E                     int_func:
   895                           	callstack 28
   896   00129E  9212               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   897   0012A0  0011               	retfie		f
   898   0012A2                     __end_of_high_isr:
   899                           	callstack 0
   900                           
   901                           	psect	smallconst
   902   001000                     __psmallconst:
   903                           	callstack 0
   904   001000  00                 	db	0
   905   001001  00                 	db	0	; dummy byte at the end
   906   000000                     
   907                           	psect	rparam
   908   000000                     
   909                           	psect	temp
   910   000012                     btemp:
   911                           	callstack 0
   912   000012                     	ds	1
   913   000000                     int$flags	set	btemp
   914   000000                     wtemp8	set	btemp+1
   915   000000                     ttemp5	set	btemp+1
   916   000000                     ttemp6	set	btemp+4
   917   000000                     ttemp7	set	btemp+8
   918                           
   919                           	psect	config
   920                           
   921                           ;Config register CONFIG1L @ 0x1FFF8
   922                           ;	Watchdog Timer Enable bit
   923                           ;	WDTEN = OFF, WDT disabled (control is placed on SWDTEN bit)
   924                           ;	Stack Overflow/Underflow Reset Enable bit
   925                           ;	STVREN = ON, Reset on stack overflow/underflow enabled
   926                           ;	Extended Instruction Set Enable bit
   927                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   928                           ;	Background Debugger Enable bit
   929                           ;	DEBUG = 0x1, unprogrammed default
   930   01FFF8                     	org	131064
   931   01FFF8  A0                 	db	160
   932                           
   933                           ;Config register CONFIG1H @ 0x1FFF9
   934                           ;	Code Protection bit
   935                           ;	CP0 = OFF, Program memory is not code-protected
   936   01FFF9                     	org	131065
   937   01FFF9  F4                 	db	244
   938                           
   939                           ;Config register CONFIG2L @ 0x1FFFA
   940                           ;	Oscillator Selection bits
   941                           ;	FOSC = HSPLL, HS oscillator, PLL enabled
   942                           ;	Fail-Safe Clock Monitor Enable bit
   943                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   944                           ;	Two-Speed Start-up (Internal/External Oscillator Switchover) Control bit
   945                           ;	IESO = OFF, Two-Speed Start-up disabled
   946   01FFFA                     	org	131066
   947   01FFFA  05                 	db	5
   948                           
   949                           ;Config register CONFIG2H @ 0x1FFFB
   950                           ;	Watchdog Timer Postscaler Select bits
   951                           ;	WDTPS = 32768, 1:32768
   952   01FFFB                     	org	131067
   953   01FFFB  FF                 	db	255
   954                           
   955                           ;Config register CONFIG3L @ 0x1FFFC
   956                           ;	External Address Bus Shift Enable bit
   957                           ;	EASHFT = 0x1, unprogrammed default
   958                           ;	External Memory Bus Configuration bits
   959                           ;	MODE = MM, Microcontroller mode - External bus disabled
   960                           ;	Data Bus Width Select bit
   961                           ;	BW = 0x1, unprogrammed default
   962                           ;	External Bus Wait Enable bit
   963                           ;	WAIT = 0x1, unprogrammed default
   964   01FFFC                     	org	131068
   965   01FFFC  F8                 	db	248
   966                           
   967                           ;Config register CONFIG3H @ 0x1FFFD
   968                           ;	unspecified, using default values
   969                           ;	ECCP2 MUX bit
   970                           ;	CCP2MX = 0x1, unprogrammed default
   971                           ;	ECCPx MUX bit
   972                           ;	ECCPMX = 0x1, unprogrammed default
   973                           ;	PMP Pin Multiplex bit
   974                           ;	PMPMX = 0x1, unprogrammed default
   975                           ;	MSSP Address Masking Mode Select bit
   976                           ;	MSSPMSK = 0x1, unprogrammed default
   977   01FFFD                     	org	131069
   978   01FFFD  FF                 	db	255
   979                           tosu	equ	0xFFF
   980                           tosh	equ	0xFFE
   981                           tosl	equ	0xFFD
   982                           stkptr	equ	0xFFC
   983                           pclatu	equ	0xFFB
   984                           pclath	equ	0xFFA
   985                           pcl	equ	0xFF9
   986                           tblptru	equ	0xFF8
   987                           tblptrh	equ	0xFF7
   988                           tblptrl	equ	0xFF6
   989                           tablat	equ	0xFF5
   990                           prodh	equ	0xFF4
   991                           prodl	equ	0xFF3
   992                           indf0	equ	0xFEF
   993                           postinc0	equ	0xFEE
   994                           postdec0	equ	0xFED
   995                           preinc0	equ	0xFEC
   996                           plusw0	equ	0xFEB
   997                           fsr0h	equ	0xFEA
   998                           fsr0l	equ	0xFE9
   999                           wreg	equ	0xFE8
  1000                           indf1	equ	0xFE7
  1001                           postinc1	equ	0xFE6
  1002                           postdec1	equ	0xFE5
  1003                           preinc1	equ	0xFE4
  1004                           plusw1	equ	0xFE3
  1005                           fsr1h	equ	0xFE2
  1006                           fsr1l	equ	0xFE1
  1007                           bsr	equ	0xFE0
  1008                           indf2	equ	0xFDF
  1009                           postinc2	equ	0xFDE
  1010                           postdec2	equ	0xFDD
  1011                           preinc2	equ	0xFDC
  1012                           plusw2	equ	0xFDB
  1013                           fsr2h	equ	0xFDA
  1014                           fsr2l	equ	0xFD9
  1015                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      8      17
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           64      0       0

Pointer List with Targets:

    filterFce@tlacitko	PTR struct . size(1) Largest target is 2
		 -> S4(COMRAM[2]), S5A(COMRAM[2]), S5B(COMRAM[2]), 

    pametFce@tlacitko	PTR struct . size(1) Largest target is 2
		 -> S4Filtr(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_filterFce
    _main->_pametFce

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _low_isr in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1046
                          _filterFce
                           _pametFce
             _preambleInitialization
 ---------------------------------------------------------------------------------
 (1) _preambleInitialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pametFce                                             5     3      2     359
                                              3 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _filterFce                                            5     3      2     687
                                              3 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _low_isr                                              3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _high_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _filterFce
   _pametFce
   _preambleInitialization

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F3F      0       0      46        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      8      11       1       18.1%
BITBANK15           40      0       0      34        0.0%
BANK15              40      0       0      35        0.0%
BITBIGSFRhhllhl     34      0       0      40        0.0%
BITBIGSFRl          2E      0       0      44        0.0%
BITBIGSFRhhlh       19      0       0      37        0.0%
BITBIGSFRhhh         D      0       0      36        0.0%
BITBIGSFRhhllll      8      0       0      42        0.0%
BITBIGSFRhhlllh      3      0       0      41        0.0%
BITBIGSFRhl          3      0       0      43        0.0%
BITBIGSFRhhllhl      2      0       0      39        0.0%
BITBIGSFRhhllhh      1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      11      45        0.0%
DATA                 0      0      11       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Nov 27 17:05:00 2023

                            l73 1286                              _S4 0008                              l99 10F6  
                            bsr 0FE0                             l116 11D4                             l821 126E  
                           l813 125C                             l831 1284                             l823 1270  
                           l815 1260                             l825 1272                             l817 1262  
                           l827 1274                             l819 126C                             l829 1282  
                           _S5A 0006                             _S5B 0004                             u300 103A  
                           u301 1036                             u310 1052                             u311 104E  
                           u320 1078                             u321 1074                             u330 1090  
                           u331 108C                             u340 1110                             u341 110C  
                           u350 1130                             u351 112C                             u360 115C  
                           u361 1158                             u290 101A                             u370 1174  
                           u291 1016                             u371 1170                             u380 120A  
                           u381 1206                             u395 1252                             u396 1254  
                           wreg 0FE8                            l1031 1022                            l1103 118A  
                          l1111 11D6                            l1041 1052                            l1033 102A  
                          l1025 1002                            l1105 11CA                            l1121 124A  
                          l1113 11F6                            l1043 1056                            l1035 103A  
                          l1027 100A                            l1131 11A4                            l1115 11FA  
                          l1133 10BE                            l1053 1080                            l1029 101A  
                          l1117 120A                            l1055 1090                            l1047 1068  
                          l1039 1042                            l1063 10A4                            l1071 10F8  
                          l1119 1246                            l1057 1094                            l1049 1078  
                          l1065 10EC                            l1081 1130                            l1073 1100  
                          l1083 1134                            l1075 1110                            l1093 1164  
                          l1085 1144                            l1077 1118                            l1095 1174  
                          l1087 114C                            l1079 1120                            l1097 1178  
                          l1089 115C                            i1l46 0042                            i2l40 129E  
                          _main 11D6                            fsr2h 0FDA                            indf2 0FDF  
                          fsr2l 0FD9                            btemp 0012                            start 0052  
             pametFce@dalsiStav 0011                    ___param_bank 0000                           ?_main 000A  
                         _T0CON 0FD5                           i1l931 0026                           i1l933 0034  
                         i1l935 0040                           _TMR0H 0FD7                           _TMR0L 0FD6  
                         _TRISD 0F95                           _TRISH 0F99                           _TRISJ 0F9A  
                         _is1ms 0001                 __end_of_low_isr 0052                           ttemp5 0013  
                         ttemp6 0016                           ttemp7 001A                           status 0FD8  
                         wtemp8 0013                 __initialization 1288                    __end_of_main 125C  
                        ??_main 0012                   __activetblptr 0003                __end_of_high_isr 12A2  
        _preambleInitialization 125C                __end_of_pametFce 11D6                          clear_0 128E  
                        isa$std 0001                    __mediumconst 0000                       ??_low_isr 000A  
                    __accesstop 0060         __end_of__initialization 1294                   ___rparam_used 0001  
                __pcstackCOMRAM 000A              filterFce@dalsiStav 0011                         _S4Filtr 0002  
                       i1u12_20 0034                         i1u12_21 0030                       ?_high_isr 000A  
                     ?_pametFce 000D                         __Hparam 0000                         __Lparam 0000  
             __end_of_filterFce 10F8                    __psmallconst 1000                         __pcinit 1288  
                       __ramtop 1000                         __ptext0 11D6                         __ptext1 125C  
                       __ptext2 10F8                         __ptext3 1002                       _T0CONbits 0FD5  
                       _low_isr 0018                      ??_high_isr 000A                  __pintcode_body 129E  
          end_of_initialization 1294                      ??_pametFce 000F                         int_func 129E  
                filterFce@vstup 000E         ?_preambleInitialization 000A                         postinc0 0FEE  
                     _PORTJbits 0F88  __end_of_preambleInitialization 1288             start_initialization 1288  
              pametFce@tlacitko 000D                     __pbssCOMRAM 0001                       __pintcode 0008  
                   __pintcodelo 0018                       _filterFce 1002                     __smallconst 1000  
                      ?_low_isr 000A               filterFce@tlacitko 000D                        _LATDbits 0F8C  
                      _RCONbits 0FD0                      ?_filterFce 000D                     _INTCON2bits 0FF1  
                      __Hrparam 0000                        __Lrparam 0000                   pametFce@input 000E  
                      _high_isr 0008                        _pametFce 10F8                        isa$xinst 0000  
                      int$flags 0012                     ??_filterFce 000F                     _OSCTUNEbits 0F9B  
                    _INTCONbits 0FF2                        intlevel1 0000                        intlevel2 0000  
                    _OSCCONbits 0FD3        ??_preambleInitialization 000D  
